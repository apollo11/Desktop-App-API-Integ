{"version":3,"sources":["webpack:///./src/app/quick-deposit-method/quick-deposit-method.service.ts","webpack:///./src/app/app.config.ts","webpack:///./src/app/default-request-option.service.ts","webpack:///./src/app/quick-deposit-bank-account/quick-deposit-bank-account.service.ts","webpack:///./src/app/casino/casino.service.ts","webpack:///./src/app/elements/modal/success-modal.component.ts","webpack:///./src/app/email-verification/email-verification.component.ts","webpack:///./src/app/forgot-password-reset/forgot-password-reset.component.ts","webpack:///./src/app/forgot-password/forgot-password.component.ts","webpack:///./src/app/forgot-password/forgot-password.service.ts","webpack:///./src/app/games/games.service.ts","webpack:///./src/app/layout/header/header.service.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/mobile-verification/mobile-verification.component.ts","webpack:///./src/app/online-deposit-bank/online-deposit-bank.service.ts","webpack:///./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.service.ts","webpack:///./src/app/registration/registration.component.ts","webpack:///./src/app/security-question/security-question.service.ts","webpack:///./src/app/state-province/state-province.service.ts","webpack:///./src/app/withdrawal-transaction/withdrawal-transaction.service.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/bank-add/bank-add.component.ts","webpack:///./src/app/bank-add/bank-add.service.ts","webpack:///./src/app/bank-detail/bank-detail.component.ts","webpack:///./src/app/bank-detail/bank-detail.service.ts","webpack:///./src/app/bank/bank.component.ts","webpack:///./src/app/banner/banner.component.ts","webpack:///./src/app/banner/banner.service.ts","webpack:///./src/app/casino/casino.component.ts","webpack:///./src/app/country/country.component.ts","webpack:///./src/app/deposit-transaction/deposit-transaction.component.ts","webpack:///./src/app/deposit-transaction/deposit-transaction.service.ts","webpack:///./src/app/email-verification/email-verification.service.ts","webpack:///./src/app/featured-games/featured-games.service.ts","webpack:///./src/app/forgot-password-reset/forgot-password-reset.service.ts","webpack:///./src/app/forgot-password/forgot-password.ts","webpack:///./src/app/games/games.component.ts","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/mobile-verification/mobile-verification.service.ts","webpack:///./src/app/online-deposit-bank/online-deposit-bank.component.ts","webpack:///./src/app/online-deposit/online-deposit.component.ts","webpack:///./src/app/online-deposit/online-deposit.service.ts","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/promotion-detail/promotion-detail.component.ts","webpack:///./src/app/promotion-detail/promotion-detail.service.ts","webpack:///./src/app/promotion/promotion.component.ts","webpack:///./src/app/promotion/promotion.service.ts","webpack:///./src/app/quick-deposit-bank-account/quick-deposit-bank-account.component.ts","webpack:///./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.component.ts","webpack:///./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.ts","webpack:///./src/app/quick-deposit-method/quick-deposit-method.component.ts","webpack:///./src/app/quick-deposit-preferred-bank/quick-deposit-preferred-bank.component.ts","webpack:///./src/app/quick-deposit/quick-deposit.component.ts","webpack:///./src/app/quick-deposit/quick-deposit.service.ts","webpack:///./src/app/registration/registration.service.ts","webpack:///./src/app/security-question/security-question.component.ts","webpack:///./src/app/sports/sports.component.ts","webpack:///./src/app/sports/sports.service.ts","webpack:///./src/app/state-province/state-province.component.ts","webpack:///./src/app/wechat/wechat.component.ts","webpack:///./src/app/wechat/wechat.service.ts","webpack:///./src/app/withdrawal-transaction/withdrawal-transaction.component.ts","webpack:///./src/app/withdrawal/withdrawal.component.ts","webpack:///./src/app/withdrawal/withdrawal.service.ts","webpack:///./src/app/elements/modal/modal.module.ts","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app-routing.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/bank-add/bank-add.ts","webpack:///./src/app/elements/carousel/carousel.component.ts","webpack:///./src/app/elements/language/language.component.ts","webpack:///./src/app/elements/menu/menu.component.ts","webpack:///./src/app/email-verification/email-verification.ts","webpack:///./src/app/featured-games/featured-games.component.ts","webpack:///./src/app/forgot-password-reset/forgot-password-reset.ts","webpack:///./src/app/games/games.ts","webpack:///./src/app/layout/footer/footer.component.ts","webpack:///./src/app/layout/header/header.component.ts","webpack:///./src/app/login/login.ts","webpack:///./src/app/quick-deposit-preferred-bank/quick-deposit-preferred-bank.service.ts","webpack:///./src/app/mobile-verification/mobile-verification.ts","webpack:///./src/app/online-deposit/online-deposit.ts","webpack:///./src/app/profile/profile.ts","webpack:///./src/app/promotion/promotion.ts","webpack:///./src/app/quick-deposit/quick-deposit.ts","webpack:///./src/app/registration/registration.ts","webpack:///./src/app/shared/autoheight.directive.ts","webpack:///./src/app/shared/game-filter.pipe.ts","webpack:///./src/app/shared/shared.module.ts","webpack:///./src/app/wechat/wechat.ts","webpack:///./src/app/withdrawal/withdrawal.ts","webpack:///./src/environments/environment.ts","webpack:///./~/moment/locale ^\\.\\/.*$","webpack:///./src/app/app.component.css","webpack:///./src/app/bank-add/bank-add.component.css","webpack:///./src/app/bank-detail/bank-detail.component.css","webpack:///./src/app/bank/bank.component.css","webpack:///./src/app/banner/banner.component.css","webpack:///./src/app/casino/casino.component.css","webpack:///./src/app/country/country.component.css","webpack:///./src/app/deposit-transaction/deposit-transaction.component.css","webpack:///./src/app/elements/language/language.component.css","webpack:///./src/app/elements/menu/menu.component.css","webpack:///./src/app/email-verification/email-verification.component.css","webpack:///./src/app/featured-games/featured-games.component.css","webpack:///./src/app/forgot-password-reset/forgot-password-reset.component.css","webpack:///./src/app/forgot-password/forgot-password.component.css","webpack:///./src/app/games/games.component.css","webpack:///./src/app/home/home.component.css","webpack:///./src/app/layout/footer/footer.component.css","webpack:///./src/app/layout/header/header.component.css","webpack:///./src/app/mobile-verification/mobile-verification.component.css","webpack:///./src/app/online-deposit-bank/online-deposit-bank.component.css","webpack:///./src/app/online-deposit/online-deposit.component.css","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/promotion-detail/promotion-detail.component.css","webpack:///./src/app/promotion/promotion.component.css","webpack:///./src/app/quick-deposit-bank-account/quick-deposit-bank-account.component.css","webpack:///./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.component.css","webpack:///./src/app/quick-deposit-method/quick-deposit-method.component.css","webpack:///./src/app/quick-deposit-preferred-bank/quick-deposit-preferred-bank.component.css","webpack:///./src/app/quick-deposit/quick-deposit.component.css","webpack:///./src/app/registration/registration.component.css","webpack:///./src/app/security-question/security-question.component.css","webpack:///./src/app/sports/sports.component.css","webpack:///./src/app/state-province/state-province.component.css","webpack:///./src/app/wechat/wechat.component.css","webpack:///./src/app/withdrawal-transaction/withdrawal-transaction.component.css","webpack:///./src/app/withdrawal/withdrawal.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/bank-add/bank-add.component.html","webpack:///./src/app/bank-detail/bank-detail.component.html","webpack:///./src/app/bank/bank.component.html","webpack:///./src/app/banner/banner.component.html","webpack:///./src/app/casino/casino.component.html","webpack:///./src/app/country/country.component.html","webpack:///./src/app/app.module.ts","webpack:///./src/app/deposit-transaction/deposit-transaction.component.html","webpack:///./src/app/elements/language/language.component.html","webpack:///./src/app/elements/menu/menu.component.html","webpack:///./src/app/elements/modal/success-modal.component.html","webpack:///./src/app/email-verification/email-verification.component.html","webpack:///./src/app/featured-games/featured-games.component.html","webpack:///./src/app/forgot-password-reset/forgot-password-reset.component.html","webpack:///./src/app/forgot-password/forgot-password.component.html","webpack:///./src/app/games/games.component.html","webpack:///./src/app/home/home.component.html","webpack:///./src/app/country/country.service.ts","webpack:///./src/app/layout/footer/footer.component.html","webpack:///./src/app/layout/header/header.component.html","webpack:///./src/app/login/login.component.html","webpack:///./src/app/mobile-verification/mobile-verification.component.html","webpack:///./src/app/online-deposit-bank/online-deposit-bank.component.html","webpack:///./src/app/online-deposit/online-deposit.component.html","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/promotion-detail/promotion-detail.component.html","webpack:///./src/app/promotion/promotion.component.html","webpack:///./src/app/quick-deposit-bank-account/quick-deposit-bank-account.component.html","webpack:///./src/app/profile/profile.service.ts","webpack:///./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.component.html","webpack:///./src/app/quick-deposit-method/quick-deposit-method.component.html","webpack:///./src/app/quick-deposit-preferred-bank/quick-deposit-preferred-bank.component.html","webpack:///./src/app/quick-deposit/quick-deposit.component.html","webpack:///./src/app/registration/registration.component.html","webpack:///./src/app/security-question/security-question.component.html","webpack:///./src/app/sports/sports.component.html","webpack:///./src/app/state-province/state-province.component.html","webpack:///./src/app/wechat/wechat.component.html","webpack:///./src/app/withdrawal-transaction/withdrawal-transaction.component.html","webpack:///./src/app/withdrawal/withdrawal.component.html"],"names":[],"mappings":"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;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;ACPF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"main.bundle.js","sourcesContent":["import {Injectable}                                 from '@angular/core';\nimport {Http, Response}                             from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                 from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {QuickDepositMethod}                         from './quick-deposit-method';\n\nimport {AppSettings}                                from '../app.config';\nimport  {requestOptionsProvider}                    from  '../default-request-option.service';\n\n@Injectable()\nexport class QuickDepositMethodService {\n\n    private urlGetQuickDepositMethod = AppSettings.API_ENDPOINT + 'Wallet/PaymentMethods'; // This is the API Endpoint for getting the list for Player's Deposit Method\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<QuickDepositMethod[]>}\n     * GET Security Question\n     */\n    getQuickDepositMethod(): Observable<QuickDepositMethod[]> {\n        return this.http\n            .get(this.urlGetQuickDepositMethod, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     * @param res\n     * @returns {Response}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return data;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-method/quick-deposit-method.service.ts","export class AppSettings {\n    public static API_ENDPOINT = 'http://uat.beachheadsolutionsinc.com/api/';\n    public static GAME_API_ENDPOINT = 'http://uat.orange88.com/api/v1/';\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.config.ts","import {Injectable} from '@angular/core';\nimport {BaseRequestOptions, RequestOptions} from '@angular/http';\n\n@Injectable()\nexport class DefaultRequestOptions extends BaseRequestOptions {\n\n    constructor() {\n        super();\n\n        // Set the default 'Content-Type' header\n        this.headers.set('Content-Type', 'application/json');\n        this.headers.set('X-PANDORA-API-Key', localStorage.getItem('TokenId'));\n        this.headers.set('X-PANDORA-FP', localStorage.getItem('Fingerprint'));\n        this.headers.set('X-PANDORA-IP', localStorage.getItem('IPAddress'));\n    }\n}\n\nexport const requestOptionsProvider = {provide: RequestOptions, useClass: DefaultRequestOptions};\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/default-request-option.service.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/share';\n\n\nimport {BankAccount}                              from './quick-deposit-bank-account';\n\nimport {AppSettings}                              from '../app.config';\nimport {requestOptionsProvider}                   from  '../default-request-option.service';\n\n@Injectable()\nexport class QuickDepositBankAccountService {\n\n    private urlGetBankAccount = AppSettings.API_ENDPOINT + 'Wallet/SuggestedBankAccount'; //with parameter paymentMethod  and bankId    // This is the API Endpoint for Get Bank Account Info\n    constructor(private http: Http) {\n    }\n\n    /**\n     *\n     * @param id\n     * @returns {Observable<BankAccount[]>}\n     */\n    getBankAccount(paymentMethodId: string,bankId: string): Observable<BankAccount[]> {\n        return this.http\n            .get(this.urlGetBankAccount +`?paymentMethod=${paymentMethodId}&bankId=${bankId}`, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return data;\n    }\n\n    /**\n     *\n     * @param error\n     * @returns {ErrorObservable}\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-bank-account/quick-deposit-bank-account.service.ts","\nimport {Injectable}                                     from '@angular/core';\nimport {Http, Response}                                 from '@angular/http';\nimport {TranslateService}                               from '@ngx-translate/core';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                     from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport  {requestOptionsProvider}                        from  '../default-request-option.service';\n\nimport {Casino}                                         from './casino';\n\nimport {AppSettings}                                    from 'app/app.config';\nimport {AuthService}                                    from '../auth/auth.service';\n\n@Injectable()\nexport class CasinoService {\n\n    private GAMES_URL = AppSettings.GAME_API_ENDPOINT + 'casino/'; // This is the API Endpoint for getting the game list.\n    private URL = AppSettings.API_ENDPOINT + 'GameManager/GetGameUrl?';\n\n    constructor(private http: Http,\n                private authService: AuthService,\n                private translate: TranslateService){}\n\n    getCasinos(): Observable<Casino> {\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}`;\n        return this.http\n            .get(url,this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    getGamesUrl(platform: string, category: string) {\n        let lang = this.translate.currentLang;\n        const url = `${this.URL}${'GamePlatform='+platform}${'&GameType='+category}${'&Language='+ lang}${'&isMobile='+1}`;\n        return this.http\n            .get(url, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {Response}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return body;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/casino/casino.service.ts","import { Component }    from \"@angular/core\";\nimport {Router}         from '@angular/router';\nimport { Modal }        from \"./modal.module\";\n\n@Component({\n    moduleId: module.id,\n    selector: \"modal\",\n    templateUrl: './success-modal.component.html',\n})\n\n@Modal()\n\nexport class SuccessModalComponent {\n    constructor(private router: Router) {}\n\n\n    // MODAL\n    modalId: string = 'modalSuccess';\n    ok: Function;\n    destroy: Function;\n    closeModal: Function;\n\n    successType;\n\n    onOk(): void{\n        //this.closeModal();\n        //this.destroy();\n        location.replace('/home');\n        //this.router.navigate(['/home']);\n    }\n\n    onOkChwd(): void{\n        this.closeModal();\n        this.destroy();\n        this.router.navigate(['/login']);\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/elements/modal/success-modal.component.ts","import { Component, OnInit }                from '@angular/core';\nimport { Router } from '@angular/router';\n\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {EmailVerification}                  from './email-verification';\nimport {EmailVerificationService}           from './email-verification.service';\n\nimport { Profile } from '../profile/profile';\nimport { ProfileService } from '../profile/profile.service';\n\nimport { Modal } from \"../elements/modal/modal.module\";\n\n@Modal()\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-email-verification',\n  templateUrl: './email-verification.component.html',\n  styleUrls: ['./email-verification.component.css'],\n  providers: [\n      EmailVerificationService\n  ]\n})\n\nexport class EmailVerificationComponent implements OnInit {\n\n    emailVerifications = new EmailVerification();\n    profile: Profile[];\n    error: string;\n    success: string;\n    valid: boolean = false;\n    submitted: boolean;\n    buttonEnabled: string = '';\n    dataError: any = [];\n    reset: boolean;\n    hasSend: boolean = false;\n    submitting:boolean = false;\n    submittingResend: boolean = false;\n\n  constructor(\n      private emailVerificationService: EmailVerificationService,\n      private profileService: ProfileService,\n      private router: Router,\n  ) { }\n\n    verifyEmail(email:EmailVerification) {\n        this.submitted = true;\n        this.submitting = true;\n        email.UserName = localStorage.getItem('Username');\n        this.emailVerificationService.verifyEmail(email)\n            .subscribe(\n                success => {\n                    let data = <any>success;\n                    let status = data.Status;\n                    this.success = <any>success;\n                    if (status == 'SUCCESS') {\n                        this.valid = true;\n                        this.hasSend = true;\n                        this.submitting = false;\n                    } else {\n                        this.valid = false;\n                        this.dataError = data.Messages;\n                        this.submitting = false;\n                    }\n                },\n\n                error => {\n                    this.error = <any>error;\n                    this.submitting = false;\n                },\n            )\n    }\n\n    resetEmail(email:EmailVerification) {\n        this.submitted = true;\n        this.submittingResend = true;\n        this.emailVerificationService.resetEmail(email)\n            .subscribe(\n                success => {\n                    // this.success = <any>success;\n                    let data = <any>success;\n                    let status = data.Status;\n                    console.log(status);\n                    this.success = <any>success;\n                    if (status == 'SUCCESS') {\n                        this.submittingResend = false;\n                        this.valid = true;\n                        this.onCancel();\n                    } else {\n                        this.valid = false;\n                        this.dataError = data.Messages;\n                        this.submittingResend = false;\n                    }\n                },\n\n                error => {\n                    this.submitted = false;\n                    this.submittingResend = false;\n                    this.error = <any>error\n                },\n            )\n    }\n\n    getProfile() {\n        this.profileService.getProfile()\n            .subscribe(\n                profile => this.profile = <any>profile,\n                error => this.error = <any>error);\n    }\n\n    goToProfile() {\n        this.router.navigate(['/profile'])\n    }\n\n    // MODAL\n    modalId: string = 'modalVerifyEmail';\n    ok: Function;\n    destroy: Function;\n    closeModal: Function;\n\n    onCancel(): void {\n        this.closeModal();\n        this.destroy();\n        this.router.navigate(['/profile']);\n    }\n\n    ngOnInit() {\n        this.getProfile()\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/email-verification/email-verification.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { ResetPassword } from './forgot-password-reset';\nimport { ForgotPasswordResetService } from './forgot-password-reset.service';\n\nimport { ForgotPassword } from '../forgot-password/forgot-password';\nimport { ForgotPasswordService } from '../forgot-password/forgot-password.service';\n\nimport { AppModule } from \"../app.module\";\nimport { Modal, ModalService } from \"../elements/modal/modal.module\";\nimport { SuccessModalComponent } from \"../elements/modal/success-modal.component\";\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-forgot-password-reset',\n  templateUrl: './forgot-password-reset.component.html',\n  styleUrls: ['./forgot-password-reset.component.css'],\n  providers: [\n    ForgotPasswordResetService,\n    ForgotPasswordService\n  ]\n})\n\n@Modal()\n\nexport class ForgotPasswordResetComponent implements OnInit {\n\n  resetPassword = new ResetPassword();\n  forgotPassword = new ForgotPassword();\n  errorMessage: string;\n  successMessage: string;\n\n  setUserName: string;\n  setEmail: string;\n  setMobileCountryCode: string;\n  setMobileNo: string;\n  dataError: any = [];\n  submitted: boolean;\n\n  // submit button default state\n  submitting: boolean = false;\n  submittingResend: boolean = false;\n\n  constructor(private forgotPasswordResetService: ForgotPasswordResetService,\n    private forgotPasswordService: ForgotPasswordService,\n    private modalService: ModalService) { }\n\n  /**\n   *\n   * @param reset\n   * resending a new code to client side\n   */\n\n  sendResetCode(reset: ForgotPassword) {\n    this.submittingResend = true;\n    this.submitted = true;\n\n    this.setUserName = localStorage.getItem('PasswordResetUserName');\n    this.setEmail = localStorage.getItem('PasswordResetEmail');\n    this.setMobileCountryCode = localStorage.getItem('PasswordResetMobileCountryCode');\n    this.setMobileNo = localStorage.getItem('PasswordResetMobileNo');\n\n    if (this.setEmail == 'undefined') {\n      this.setEmail = '';\n    }\n    if (this.setMobileCountryCode == 'undefined') {\n      this.setMobileCountryCode = '';\n    }\n    if (this.setMobileNo == 'undefined') {\n      this.setMobileNo = '';\n    }\n\n    reset.UserName = this.setUserName;\n    reset.Email = this.setEmail;\n    reset.MobileCountryCode = this.setMobileCountryCode;\n    reset.MobileNo = this.setMobileNo;\n\n    this.forgotPasswordService.sendResetCode(reset)\n      .subscribe(\n        success => {\n            this.submittingResend = false;\n            this.successMessage = <any>success;\n            console.log(this.successMessage);\n        },\n        error => {\n          this.errorMessage = <any>error;\n          this.submitting = false;\n          this.submittingResend = false;\n        }\n      );\n  }\n\n  /**\n   *\n   * @param reset\n   * requesting code to reset the password\n   */\n  setPassword(reset: ResetPassword) {\n      this.submitting = true;\n    this.forgotPasswordResetService.setPassword(reset)\n      .subscribe(\n        success =>{\n            this.submitted = true;\n            this.successMessage = <any>success;\n            let data = <any>success;\n            console.log(data);\n            let status = data.Status;\n            console.log(status);\n            if (status == 'SUCCESS') {\n                this.submitting = false;\n                this.onOk();\n            } else {\n                this.submitting = false;\n                this.dataError = data.Messages;\n            }\n        },\n        error => {\n          this.errorMessage = <any>error;\n          this.submitting = false;\n          this.submittingResend = false;\n        }\n      );\n  }\n\n  // TODO: Remove this when we're done\n  get diagnostic() {\n    return JSON.stringify(this.resetPassword);\n  }\n\n  // Validate Form\n  // validateForm() {\n  //   // connect to api after validation\n  //   this.setPassword;\n  //\n  //   // Close Modal\n  //   this.closeModal();\n  //   this.destroy();\n  //\n  //   // Open Next Modal\n  //   this.openModal();\n  // }\n\n  // Open Next Modal; \n  // Show Secruity Questions Modal\n  openModal() {\n    this.modalService.create(AppModule, SuccessModalComponent, {\n      successType: 'changePassword'\n    });\n  }\n\n  // MODAL\n  modalId: string = 'modalForgotPasswordReset';\n  ok: Function;\n  destroy: Function;\n  closeModal: Function;\n\n  onCancel(): void {\n    this.closeModal();\n    this.destroy();\n  }\n\n  onOk(): void {\n    this.closeModal();\n    this.destroy();\n    // this.ok =;\n  }\n\n  onSubmit(resetPassword) {\n      console.log(resetPassword);\n      console.log('ok');\n      this.setPassword(resetPassword);\n    //this.validateForm();\n    this.submitted = true;\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forgot-password-reset/forgot-password-reset.component.ts","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { ForgotPassword } from './forgot-password';\nimport { ForgotPasswordService } from './forgot-password.service';\n\nimport { Countries } from '../country/country';\nimport { CountryService } from '../country/country.service';\n\nimport { ForgotPasswordResetComponent } from \"../forgot-password-reset/forgot-password-reset.component\";\n\nimport { AppModule } from \"../app.module\";\nimport { Modal, ModalService } from \"../elements/modal/modal.module\";\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-forgot-password',\n    templateUrl: './forgot-password.component.html',\n    styleUrls: ['./forgot-password.component.css'],\n    providers: [\n        ForgotPasswordService,\n        CountryService\n    ]\n})\n\n@Modal()\n\nexport class ForgotPasswordComponent implements OnInit {\n\n    forgotPassword = new ForgotPassword();\n    countries: Countries[];\n    error: string;\n    success: string;\n    dataError: any = [];\n    valid: boolean;\n    submitted: boolean = false;\n\n    // submit button default state\n    submitting: boolean = false;\n\n    constructor(private forgotPasswordService: ForgotPasswordService,\n        private modalService: ModalService,\n        private countriesService: CountryService,\n        private route: ActivatedRoute) {\n    }\n\n    /**\n     *\n     * @param reset\n     * requesting code to reset the password\n     */\n    sendResetCode(reset: ForgotPassword) {\n        this.submitting = true;\n\n        //save in local storage for faster retrieval of information for resent code\n        localStorage.setItem('PasswordResetUserName', reset.UserName);\n        localStorage.setItem('PasswordResetEmail', reset.Email);\n        localStorage.setItem('PasswordResetMobileCountryCode', reset.MobileCountryCode);\n        localStorage.setItem('PasswordResetMobileNo', reset.MobileNo);\n\n        this.forgotPasswordService.sendResetCode(reset)\n            .subscribe(\n            success => {\n                this.submitting = false;\n                this.success = <any>success;\n                let data = <any>success;\n                //this.dataError = data.Messages;\n\n                console.log(data);\n                let status = data.Status;\n                if (status == 'SUCCESS') {\n                    this.valid = true;\n                    this.onOk();\n                } else {\n                    this.valid = false;\n                    this.submitting = false;\n                    this.dataError = data.Messages;\n                }\n            },\n            error => {\n                this.error = <any>error;\n                this.submitting = false;\n            });\n    }\n\n    // Open Next Modal\n    openModal() {\n        // Close Existing Modal\n        this.closeModal();\n        this.destroy();\n\n        // Call new modal\n        this.modalService.create(AppModule, ForgotPasswordResetComponent, {});\n    }\n\n    /**\n     * Get Countries\n     */\n    getCountries() {\n        this.countriesService.getCountries()\n            .subscribe(\n            countries => this.countries = countries,\n            error => this.error = <any>error);\n    }\n\n    // validate to api\n    // validateUsername(username: string): void {\n    //     this.route.params\n    //         .switchMap((params: Params) => this.forgotPasswordService.validateUsername(username))\n    //         .subscribe(\n    //         success => {\n    //             if (localStorage.getItem('UsernameExist') == 'true') {\n    //                 this.sendResetCode(this.forgotPassword);\n    //                 this.openModal();\n    //             } else {\n    //             }\n    //         },\n    //         error => this.error = error\n    //         );\n    // }\n\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.forgotPassword);\n    }\n\n    // MODAL\n    modalId: string = 'modalForgotPassword';\n    ok: Function;\n    destroy: Function;\n    closeModal: Function;\n\n    onCancel(): void {\n        this.closeModal();\n        this.destroy();\n    }\n\n    onOk(): void {\n        this.closeModal();\n        this.destroy();\n        this.openModal();\n    }\n\n    onSubmit(forgotPassword) {\n        this.sendResetCode(forgotPassword);\n        console.log('ok');\n        this.submitted = true;\n        // this.ok = this.sendResetCode;\n\n        //validate:\n        // connect to api to validate username if valid or not\n        //this.validateUsername(this.forgotPassword.UserName);\n    }\n\n    ngOnInit() {\n        this.getCountries();\n        this.forgotPassword.MobileCountryCode = '+86'\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/forgot-password/forgot-password.component.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {ForgotPassword}                           from './forgot-password';\n\nimport {AppSettings}                              from '../app.config';\nimport {requestOptionsProvider}                   from '../default-request-option.service';\n\n@Injectable()\nexport class ForgotPasswordService {\n\n    private url = AppSettings.API_ENDPOINT + 'PlayerAccount/SendResetPasswordCode'; // This is the API Endpoint to sending the reset password code\n    private urlValidateUsername = AppSettings.API_ENDPOINT + 'Player/IsUserExists'; // This is the API Endpoint for registering user\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     *\n     * @param username\n     * @returns {Observable<ForgotPassword>}\n     */\n    validateUsername(username: string): Observable<ForgotPassword[]> {\n        return this.http\n            .get(this.urlValidateUsername +`?username=${username}`, requestOptionsProvider)\n            .map(this.extractDataUsername)\n            .catch(this.handleError);\n    }\n\n    /**\n     *\n     * @param reset\n     * @returns {Observable<ForgotPassword>}\n     * requesting for resetting the password\n     */\n    sendResetCode(reset: ForgotPassword): Observable<ForgotPassword> {\n\n        return this.http\n            .post(this.url, reset, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractDataUsername(res: Response) {\n\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n\n            //trace if username is exist\n            localStorage.setItem('UsernameExist',bodyData);\n        }\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n\n        }\n        return body || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forgot-password/forgot-password.service.ts","import {Injectable}                                     from '@angular/core';\nimport {Http, Response}                                 from '@angular/http';\nimport {TranslateService}                               from '@ngx-translate/core';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                     from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {requestOptionsProvider}                         from  '../default-request-option.service';\nimport {AppSettings}                                    from 'app/app.config';\nimport {AuthService}                                    from '../auth/auth.service';\n\nimport {Games}                                          from './games';\n\n\n\n@Injectable()\nexport class GamesService {\n\n    private GAMES_URL = AppSettings.GAME_API_ENDPOINT + 'games/'; // This is the API Endpoint for getting the game list.\n    private URL = AppSettings.API_ENDPOINT + 'GameManager/GetGameUrl?';\n\n    constructor(private http: Http,\n                private translate: TranslateService,\n                private authService: AuthService) {\n\n    }\n\n\n    // getGamesAll(): Observable<Games> {\n    //     let lang = this.translate.currentLang;\n    //     const url = `${this.GAMES_URL}${lang}`;\n    //     return this.http\n    //         .get(url, this.authService.contentBasicAuth())\n    //         .map(this.extractData)\n    //         .catch(this.handleError)\n        \n    // }\n\n    getGamesByCategory(category: string): Observable<Games> {\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}/${category}`;\n        return this.http\n            .get(url, this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    getGamesByPlatform(platform: string, category: string) {\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}/${platform}/${category}`;\n        return this.http\n            .get(url, this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    getGamesUrl(platform: string, category: string) {\n        let lang = this.translate.currentLang;\n        const url = `${this.URL}${'GamePlatform='+platform}${'&GameType='+category}${'&Language='+ lang}${'&isMobile='+1}`;\n        return this.http\n            .get(url, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        // if (bodyData == null) {\n        //     rejectMsg = {\n        //         bodyStatus: body.Status,\n        //         Error: body.Messages.Errors,\n        //     }\n        // } else {\n        //     rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        // }\n\n        return body;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/games/games.service.ts","import {Injectable}                             from '@angular/core';\nimport {Http, Response}                         from '@angular/http';\nimport { AuthService }                          from '../../auth/auth.service';\n\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                             from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {Header}                                 from './header';\n\nimport {AppSettings}                            from '../../app.config';\nimport  {requestOptionsProvider}                from  '../../default-request-option.service';\n\n@Injectable()\nexport class HeaderService {\n\n    private URL = AppSettings.API_ENDPOINT + 'Wallet/Balance'; // This is the API Endpoint for POST Deposit\n\n    constructor(private http: Http,\n                private authService: AuthService) {\n    }\n\n    /**\n     * @param onlineDeposit\n     * @returns {Observable<OnlineDeposit>}\n     * POST Deposit Bank\n     */\n    getBalance(): Observable<Header> {\n        return this.http\n            .get(this.URL, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param onlineDeposit\n     * @returns {Observable<OnlineDeposit>}\n     * POST Deposit Bank\n     */\n    // getIP(): Observable<Header> {\n    //     return this.http\n    //         .get('//api.ipify.org/?format=jsonp&callback=JSONP_CALLBACK')\n    //         .map(this.extractData)\n    //         .catch(this.handleError)\n    // }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let rejectMsg: {};\n        rejectMsg = {\n            bodyStatus: body.Status,\n            Error: body.Messages.Errors,\n            url: body.Data.Url\n        };\n\n        return body || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n        if(error.status == 403) {\n            localStorage.removeItem('TokenId');\n            location.replace('/login');\n        }\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/header/header.service.ts","import {Injectable}                              from '@angular/core';\nimport {Http, Response}                          from '@angular/http';\nimport {Router}                                 from '@angular/router';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/share';\nimport {Observable}                              from 'rxjs/Observable';\n\nimport {Login}                                   from './login';\n\nimport {AppSettings}                            from '../app.config';\nimport {requestOptionsProvider}                 from '../default-request-option.service';\nimport { AuthService }                          from '../auth/auth.service';\n\n\n@Injectable()\nexport class LoginService {\n\n    private URL = AppSettings.API_ENDPOINT + 'User/Login'; // This is the API Endpoint for registering user\n\n    constructor( private http: Http, \n                 private authService:AuthService, \n                 private router: Router ) {\n    }\n\n    /**\n     * @param login\n     * @returns {Observable<Login>}\n     * POST user login\n     */\n    login(login: Login): Observable<Login> {\n\n        return this.http\n            .post(this.URL, login, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n\n            localStorage.setItem('TokenId', bodyData.TokenId);\n            localStorage.setItem('Username', bodyData.UserName);\n            localStorage.setItem('Roles', bodyData.Roles);\n            localStorage.setItem('SignalRTokenId', bodyData.SignalRTokenId);\n            localStorage.setItem('Expiration', bodyData.Expirration);\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        }\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.service.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {MobileVerification}         from './mobile-verification';\nimport {MobileVerificationService}  from './mobile-verification.service';\n\nimport { Profile } from '../profile/profile';\nimport { ProfileService } from '../profile/profile.service';\n\nimport { Countries } from '../country/country';\nimport { CountryService } from '../country/country.service';\n\nimport { Modal } from \"../elements/modal/modal.module\";\n\n@Modal()\n\n@Component({\n  selector: 'app-mobile-verification',\n  templateUrl: './mobile-verification.component.html',\n  styleUrls: ['./mobile-verification.component.css']\n})\nexport class MobileVerificationComponent implements OnInit {\n\n    mobileVerifications = new MobileVerification();\n    profile: Profile[];\n    countries: Countries[];\n    error: string;\n    success: string;\n    valid: boolean = false;\n    submitted: boolean = false;\n    buttonEnabled: string = '';\n    dataError: any = [];\n    reset: boolean;\n    hasSend: boolean = false;\n    submitting:boolean = false;\n    submittingResend: boolean = false;\n\n  constructor(\n      private mobileVerificationService:MobileVerificationService,\n      private profileService:ProfileService,\n      private countriesService: CountryService,\n      private router: Router,\n  ) {\n  }\n\n    verifyMobile(email:MobileVerification) {\n        this.submitted = true;\n        this.submitting = true;\n        email.UserName = localStorage.getItem('Username');\n        this.mobileVerificationService.verifyMobile(email)\n            .subscribe(\n                success =>  {\n                    let data = <any>success;\n                    let status = data.Status;\n                    this.success = <any>success;\n                    if (status == 'SUCCESS') {\n                        this.valid = true;\n                        this.hasSend = true;\n                        this.submitting = false;\n                    } else {\n                        this.valid = false;\n                        this.dataError = data.Messages;\n                        this.submitting = false;\n                    }\n                },\n\n                error => {\n                    this.submitted = false;\n                    this.submitting = false;\n                    this.error = <any>error\n                },\n            )\n    }\n\n    resetMobile(email:MobileVerification) {\n        this.submittingResend = true;\n        this.mobileVerificationService.resetMobile(email)\n            .subscribe(\n                success => {\n                    // this.success = <any>success;\n                    let data = <any>success;\n                    let status = data.Status;\n                    console.log(status);\n                    this.success = <any>success;\n                    if (status == 'SUCCESS') {\n                        this.submittingResend = false;\n                        this.valid = true;\n                        this.onCancel();\n                    } else {\n                        this.valid = false;\n                        this.dataError = data.Messages;\n                        this.submittingResend = false;\n                    }\n\n                },\n                error => {\n                    this.submitted = false;\n                    this.submittingResend = false;\n                    this.error = <any>error\n                },\n            )\n    }\n\n\n    getProfile() {\n        this.profileService.getProfile()\n            .subscribe(\n                profile => this.profile = <any>profile,\n                error => this.error = <any>error);\n    }\n\n    /**\n     * Get Countries\n     */\n    getCountries() {\n        this.countriesService.getCountries()\n            .subscribe(\n                countries => this.countries = countries,\n                error => this.error = <any>error);\n    }\n\n    goToProfile() {\n        console.log('start');\n        this.router.navigate(['/profile']);\n        console.log('end');\n    }\n\n    // MODAL\n    modalId: string = 'modalVerifyMobile';\n    ok: Function;\n    destroy: Function;\n    closeModal: Function;\n\n    onCancel(): void {\n        this.closeModal();\n        this.destroy();\n        this.router.navigate(['/profile'])\n    }\n\n    ngOnInit() {\n      this.getProfile();\n      this.getCountries();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/mobile-verification/mobile-verification.component.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {OnlineDepositBank}                        from './online-deposit-bank';\n\nimport {AppSettings}                              from '../app.config';\nimport  {requestOptionsProvider}                  from  '../default-request-option.service';\n\n@Injectable()\nexport class OnlineDepositBankService {\n\n    private urlPostOnlineDepositBank = AppSettings.API_ENDPOINT + 'OnlineDeposit/GetOnlineDepositThirdPartyBanks'; // This is the API Endpoint for getting the list for Online Bank\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<OnlineDepositBank[]>}\n     * GET Security Question\n     */\n    getOnlineDepositBank(): Observable<OnlineDepositBank[]> {\n        return this.http\n            .get(this.urlPostOnlineDepositBank, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        }\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/online-deposit-bank/online-deposit-bank.service.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/share';\n\n\nimport {UdaId}                                    from './quick-deposit-generate-uda-id';\n\nimport {AppSettings}                              from '../app.config';\nimport {requestOptionsProvider}                   from  '../default-request-option.service';\n\n@Injectable()\nexport class QuickDepositGenerateUdaIdService {\n\n    private urlPostUdaId = AppSettings.API_ENDPOINT + 'Wallet/ReserveUDA'; //with parameter paymentMethod  and amount   // This is the API Endpoint to Generate UDA ID Info\n    constructor(private http: Http) {\n    }\n\n    getUdaId(udaId: UdaId): Observable<UdaId> {\n\n        return this.http\n            .post(this.urlPostUdaId, udaId, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    // /**\n    //  *\n    //  * @param id\n    //  * @returns {Observable<UdaId[]>}\n    //  */\n    // getUdaId(paymentMethodId: string,amount: string): Observable<UdaId[]> {\n    //     return this.http\n    //         .post(this.urlPostUdaId +`?PaymentMethodId=${paymentMethodId}&DepositAmount=${amount}`, requestOptionsProvider)\n    //         .map(this.extractData)\n    //         .catch(this.handleError);\n    // }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n\n\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return data;\n    }\n\n    /**\n     *\n     * @param error\n     * @returns {ErrorObservable}\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.service.ts","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Registration } from './registration';\nimport { RegistrationService } from './registration.service';\n\nimport { Countries } from '../country/country';\nimport { CountryService } from '../country/country.service';\n\n\nimport { AppModule } from \"../app.module\";\nimport { Modal, ModalService } from \"../elements/modal/modal.module\";\nimport { SuccessModalComponent } from \"../elements/modal/success-modal.component\";\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-registration',\n    templateUrl: './registration.component.html',\n    styleUrls: ['./registration.component.css'],\n    providers: [\n        RegistrationService,\n        CountryService]\n})\n\n@Modal()\n\nexport class RegistrationComponent implements OnInit {\n\n    error: string;\n    success: string;\n    dataError: any = [];\n    submitted: boolean = false;\n\n    registration = new Registration();\n    countries: Countries[];\n\n    // submit button default state\n    submitting: boolean = false;\n\n    constructor(private regService: RegistrationService,\n        private modalService: ModalService,\n        private route: ActivatedRoute,\n        private countriesService: CountryService) {\n    }\n\n    // Validate Form\n    validateForm() {\n        this.addUser(this.registration);\n    }\n\n    // Add User Service Call\n    addUser(reg: Registration) {\n        this.submitting = true;\n        this.regService.create(reg)\n            .subscribe(\n            success => {\n                this.success = <any>success;\n                let data = <any>success;\n                let bodyData = data.bodyStatus;\n                this.dataError = data.Error;\n\n                if (!bodyData) {\n                    this.openModal();\n                }\n\n            },\n            error => {\n                this.error = <any>error,\n                this.submitting = false;\n            });\n    }\n\n    // Get Countries Service Call\n    getCountries() {\n        this.countriesService.getCountries()\n            .subscribe(\n            countries => this.countries = countries,\n            error => this.error = <any>error);\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.registration);\n    }\n\n    // Open Next Modal;\n    // Show Secruity Questions Modal\n    openModal() {\n        // Close Existing Modal\n        this.closeModal();\n        this.destroy();\n\n        // Call new modal\n        this.modalService.create(AppModule, SuccessModalComponent, {\n            successType: 'register'\n        });\n    }\n\n    // MODAL\n    modalId: string = 'modalRegister';\n    ok: Function;\n    destroy: Function;\n    closeModal: Function;\n\n    onCancel(): void {\n        this.closeModal();\n        this.destroy();\n    }\n\n    onOk(): void {\n        this.closeModal();\n        this.destroy();\n        // this.ok = this.addUser;\n    }\n\n    onSubmit() {\n        this.submitted = true;\n        this.validateForm();\n    }\n\n    ngOnInit() {\n        this.getCountries();\n        this.registration.MobileCountryCodeNumber = '+86';\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration/registration.component.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {SecurityQuestion}                         from './security-question';\n\nimport {AppSettings}                              from '../app.config';\nimport  {requestOptionsProvider}                  from  '../default-request-option.service';\n\n@Injectable()\nexport class SecurityQuestionService {\n\n    private urlGetSecurityQuestions = AppSettings.API_ENDPOINT + 'PandoraCommon/GetSecurityQuestions'; // This is the API Endpoint for getting the list for Security Question\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<SecurityQuestion[]>}\n     * GET Security Question\n     */\n    getSecurityQuestion(): Observable<SecurityQuestion[]> {\n        return this.http\n            .get(this.urlGetSecurityQuestions, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     * @param res\n     * @returns {Response}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return data;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/security-question/security-question.service.ts","import {Injectable}                                 from '@angular/core';\nimport {Http, Response}                             from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                 from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {StateProvince}                              from './state-province';\n\nimport {AppSettings}                                from '../app.config';\nimport  {requestOptionsProvider}                    from  '../default-request-option.service';\n\n@Injectable()\nexport class StateProvinceService {\n\n    private urlGetStateProvince = AppSettings.API_ENDPOINT + 'PandoraCommon/GetStateProvinceByCountry/CN'; // This is the API Endpoint for getting the list of State Province\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<StateProvince[]>}\n     * GET State Province\n     */\n    getStateProvince(): Observable<StateProvince[]> {\n        return this.http\n            .get(this.urlGetStateProvince, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     * @param res\n     * @returns {data}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return data;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/state-province/state-province.service.ts","import {Injectable}                                 from '@angular/core';\nimport {Http, Response}                             from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                 from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {WithdrawalTransaction}                      from './withdrawal-transaction';\n\nimport {AppSettings}                                from '../app.config';\nimport  {requestOptionsProvider}                    from  '../default-request-option.service';\n\n@Injectable()\nexport class WithdrawalTransactionService {\n\n    private urlGetWithdrawalTransaction = AppSettings.API_ENDPOINT + 'Wallet/MyWallet'; // This is the API Endpoint for getting the list for Withdrawal Transaction per User\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<WithdrawalTransaction[]>}\n     * GET Withdrawal Transaction\n     */\n    getWithdrawalTransaction(): Observable<WithdrawalTransaction[]> {\n        return this.http\n            .get(this.urlGetWithdrawalTransaction, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        }\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        if(error.status == 403) {\n            console.log('test');\n            localStorage.removeItem('TokenId');\n            location.replace('/login');\n        }\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/withdrawal-transaction/withdrawal-transaction.service.ts","import { Injectable } from '@angular/core';\nimport {Headers, Http, Response, RequestOptions}        from '@angular/http';\n\nimport 'rxjs/add/observable/of';\nimport 'rxjs/add/operator/do';\nimport 'rxjs/add/operator/delay';\n\n@Injectable()\nexport class AuthService {\n    isLoggedIn: boolean = false;\n    tokenId: string = localStorage.getItem('TokenId');\n    username: string = localStorage.getItem('TokenId');\n\n    /**\n     * Redirect when logging in successful\n     */\n    redirectUrl: string;\n\n    login() {\n        let token: boolean;\n        if (this.tokenId) {\n            this.isLoggedIn = true;\n            token = true;\n        }\n        return token;\n    }\n\n    logout(): void {\n        localStorage.removeItem('TokenId');\n        this.isLoggedIn = false;\n    }\n\n    contentBasicAuth() {\n        let username: string ='webmaster';\n        let password: string ='changepass123';\n        let headers = new Headers();\n        headers.append('Authorization', 'Basic ' + btoa(username + ':' + password));\n        let options = new RequestOptions({headers: headers});\n\n        return options;\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth.service.ts","import { Injectable }           from '@angular/core';\nimport {CanActivate,\n    Router,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot}        from '@angular/router';\n\nimport { AuthService }          from './auth.service';\n\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor (private authService: AuthService, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n        return this.checkLogin();\n    }\n\n    checkLogin() {\n        // Store the attempted URL for redirecting\n        // /this.authService.redirectUrl = url;\n        if (!this.authService.login()) {\n            this.router.navigate(['/login']);\n            return false;\n        }else {\n            return true;\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/auth/auth-guard.service.ts","import { Component, OnInit }                      from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {BankAdd}                                  from './bank-add';\nimport {BankAddService}                           from './bank-add.service';\n\nimport {QuickDepositPreferredBank}                from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank';\nimport {QuickDepositPreferredBankService}         from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-bank-add',\n  templateUrl: './bank-add.component.html',\n  styleUrls: ['./bank-add.component.css'],\n  providers: [\n    BankAddService,\n    QuickDepositPreferredBankService\n  ]\n})\nexport class BankAddComponent implements OnInit {\n\n  bankAdd = new BankAdd();\n  quickDepositPreferredBanks: QuickDepositPreferredBank[];\n  error: string;\n  success: string;\n  dataError: any = [];\n  valid: boolean;\n\n  submitted: boolean = false;\n\n  // submit button default state\n  submitting: boolean = false;\n\n  constructor( private bankAddService: BankAddService,\n               private quickDepositPreferredBankService: QuickDepositPreferredBankService,\n               private location: Location,\n               private mScrollbarService: MalihuScrollbarService\n             ) {}\n\n\n  /**\n   * Get Quick Deposit Banks\n   */\n  getQuickDepositPreferredBank(){\n    this.quickDepositPreferredBankService.getQuickDepositPreferredBank()\n        .subscribe(\n            quickDepositPreferredBanks => this.quickDepositPreferredBanks = quickDepositPreferredBanks,\n            error => this.error = <any>error);\n  }\n\n   /**\n   * @param bankDetail\n   * Create Bank Information\n   */\n   create(bankAdd: BankAdd) {\n\n    this.submitted = true;\n    this.submitting = true;\n\n    this.bankAddService.create(bankAdd)\n        .subscribe(\n            success => {\n                this.success = <any>success;\n                let data = <any>success;\n                let bodyData = data.bodyStatus;\n                this.dataError = data.Error;\n\n                if (bodyData == 'SUCCESS') {\n                    this.valid = true;\n                    console.log(this.valid);\n                } else {\n                    this.valid = false;\n                    this.submitting = false;\n                }\n            },\n            error => {\n              this.error = <any>error,\n              this.submitting = false;\n            }\n          );\n  }\n\n  // TODO: Remove this when we're done\n  get diagnostic() {\n    return JSON.stringify(this.bankAdd);\n  }\n\n\n  // Go back to previous location\n  goBack() {\n    this.location.back(); \n  }\n\n  ngAfterViewChecked() {\n    // console.log('afterInit casino');\n    this.mScrollbarService.initScrollbar('#scrollable', {\n        axis: 'y',\n        theme: 'dark-thick'\n    });\n  }\n\n  ngOnInit() {\n    this.getQuickDepositPreferredBank();\n    this.bankAdd.BankAccountName = localStorage.getItem('Username');\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bank-add/bank-add.component.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {BankAdd}                                  from './bank-add';\n\nimport {AppSettings}                              from '../app.config';\nimport {requestOptionsProvider}                   from '../default-request-option.service';\n\n@Injectable()\nexport class BankAddService {\n\n    private url = AppSettings.API_ENDPOINT + 'PlayerAccount/CreateBankAccount';\n    constructor(private http: Http) {\n    }\n\n     /**\n     *\n     * @param bankAdd\n     * @returns {Observable<BankAdd>}\n     */\n    create(bankAdd: BankAdd): Observable<BankAdd> {\n\n         bankAdd.AccountName = localStorage.getItem('Username');\n\n        return this.http\n            .post(this.url, bankAdd, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            };\n\n        return rejectMsg || {};\n    }\n\n    /**\n     *\n     * @param error\n     * @returns {ErrorObservable}\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bank-add/bank-add.service.ts","import {Component, OnInit}                        from '@angular/core';\nimport {ActivatedRoute, Params}                   from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {BankDetail}                               from './bank-detail';\nimport {BankDetailService}                        from './bank-detail.service';\n\nimport {QuickDepositPreferredBank}                from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank';\nimport {QuickDepositPreferredBankService}         from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-bank-detail',\n  templateUrl: './bank-detail.component.html',\n  styleUrls: ['./bank-detail.component.css'],\n  providers: [\n    BankDetailService,\n    QuickDepositPreferredBankService\n  ]\n})\nexport class BankDetailComponent implements OnInit {\n  bankDetails: BankDetail[];\n  quickDepositPreferredBanks: QuickDepositPreferredBank[];\n  errorMessage: string;\n  successMessage: string;\n\n  constructor(private bankDetailService: BankDetailService,\n              private route: ActivatedRoute,\n              private quickDepositPreferredBankService: QuickDepositPreferredBankService,\n              private location: Location,\n              private mScrollbarService: MalihuScrollbarService) { }\n\n\n  /**\n   * Get Quick Deposit Banks\n   */\n  getQuickDepositPreferredBank(){\n    this.quickDepositPreferredBankService.getQuickDepositPreferredBank()\n        .subscribe(\n            quickDepositPreferredBanks => this.quickDepositPreferredBanks = quickDepositPreferredBanks,\n            error => this.errorMessage = <any>error);\n  }\n\n  /**\n   * Get user bank list with ID Parameter\n   */\n\n  modifyBank(): void {\n    this.route.params\n        .switchMap((params: Params) => this.bankDetailService.modifyBank(params['id']))\n        .subscribe(\n            bankDetails => this.bankDetails = bankDetails,\n            error => this.errorMessage = error\n        );\n  }\n\n  /**\n   * @param bankDetail\n   * Update Bank Information\n   */\n  bankUpdate(bankDetail: BankDetail) {\n    this.bankDetailService.bankUpdate(bankDetail)\n        .subscribe(\n            success => this.successMessage = <any>success,\n            error => this.errorMessage = <any>error);\n  }\n\n  // TODO: Remove this when we're done\n  get diagnostic() {\n    return JSON.stringify(this.bankDetails);\n  }\n\n  // Go back to previous location\n  goBack() {\n    this.location.back(); \n  }\n\n  ngOnInit() {\n    this.modifyBank();\n    this.getQuickDepositPreferredBank();\n  }\n\n  ngAfterViewChecked() {\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick'\n        });\n    }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bank-detail/bank-detail.component.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {BankDetail}                               from './bank-detail';\n\nimport {AppSettings}                              from '../app.config';\nimport {requestOptionsProvider}                   from  '../default-request-option.service';\n\n@Injectable()\nexport class BankDetailService {\n\n    private urlGetBank = AppSettings.API_ENDPOINT + 'PlayerAccount/GetBankAccount'; //with parameter ID    // This is the API Endpoint for Get Banks Info\n    private urlPostBank = AppSettings.API_ENDPOINT + 'PlayerAccount/UpdateBankAccount'; // This is the API Endpoint for Update Banks\n    constructor(private http: Http) {\n    }\n\n    /**\n     *\n     * @param id\n     * @returns {Observable<BankDetail[]>}\n     */\n    modifyBank(id: string): Observable<BankDetail[]> {\n        return this.http\n            .get(this.urlGetBank +`?id=${id}`, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     * @param bankDetail\n     * @returns {Observable<BankDetail>}\n     * POST update bankDetail\n     */\n    bankUpdate(bankDetail: BankDetail): Observable<BankDetail> {\n\n        return this.http\n            .post(this.urlPostBank, bankDetail, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        }\n\n        return rejectMsg || {};\n    }\n\n    /**\n     *\n     * @param error\n     * @returns {ErrorObservable}\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bank-detail/bank-detail.service.ts","import {Component, OnInit}                        from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {Bank}                                     from './bank';\n\nimport {Profile}                                  from '../profile/profile';\nimport {ProfileService}                           from '../profile/profile.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-bank',\n  templateUrl: './bank.component.html',\n  styleUrls: ['./bank.component.css'],\n  providers: [\n      ProfileService\n  ]\n})\n\nexport class BankComponent implements OnInit {\n  banks: Bank[];\n  profiles: Profile[];\n  errorMessage: string;\n\n  constructor(\n    private profileService: ProfileService,\n    private mScrollbarService: MalihuScrollbarService\n  ) { }\n\n\n  /**\n   *Get Profile Information\n   */\n  getProfile() {\n    this.profileService.getProfile()\n        .subscribe(\n            profiles => this.profiles = profiles,\n            error => this.errorMessage = <any>error);\n  }\n\n  // TODO: Remove this when we're done\n  get diagnostic() {\n    return JSON.stringify(this.banks);\n  }\n\n  ngAfterViewChecked() {\n    this.mScrollbarService.initScrollbar('#scrollable', {\n        axis: 'y',\n        theme: 'dark-thick'\n    });\n  }\n\n  ngOnInit() {\n    this.getProfile();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/bank/bank.component.ts","import {Component, OnInit}                      from '@angular/core';\nimport {TranslateService}                       from '@ngx-translate/core';\nimport { ActivatedRoute, Params }               from '@angular/router';\n\nimport {Banner}                                 from './banner';\nimport{BannerService}                           from './banner.service';\n\nimport { GamesService } from '../games/games.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-banner',\n  templateUrl: './banner.component.html',\n  styleUrls: ['./banner.component.css'],\n  providers: [BannerService, GamesService]\n})\n\nexport class BannerComponent implements OnInit {\n\n    banner: Banner;\n    errorMessages: string;\n    success: string;\n    \n\n  constructor(\n        private bannerService: BannerService,\n        private gameService: GamesService,\n  ) { }\n\n    getBanner(): void {\n         this.bannerService.getBanner()\n                .subscribe(\n                    success => this.banner = success,\n                    error => this.errorMessages = error\n                );\n    }\n\n    playGames(platform: string, category: string) {\n        this.gameService.getGamesUrl(platform, category)\n            .subscribe(\n                success => {\n                    this.success = <any>success;\n                    let body = <any>success;\n                    let url = body.Data.Url;\n                    let frame = '<iframe style=\"border:0px;width:100%;height:100%;\" src=\"' + url +'\"></iframe>';\n                    if(body.Status == 'SUCCESS') {\n                        // this.gameUrl = url;\n                        $('.fullscreen-container').show().html(frame);\n                    } else {\n                        $('.fullscreen-container').show().html('Sorry. Error loading game');\n                    }\n                },\n                error => {\n                    this.errorMessages = error;\n                    $('.fullscreen-container').show().html('Oops! Sorry. Error loading game');\n                }\n            );      \n    }\n\n    loadiframe(platformCode, gameCode) {\n        $('.fullscreen-window').addClass('is-open');\n        this.playGames(platformCode, gameCode);\n    }\n\n    ngOnInit() {\n        this.getBanner();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/banner/banner.component.ts","import {Injectable}                                     from '@angular/core';\nimport {Http, Response}                                 from '@angular/http';\nimport {TranslateService}                               from '@ngx-translate/core';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                     from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {Banner}                                         from './banner';\n\nimport  {requestOptionsProvider}                        from  '../default-request-option.service';\n\nimport {AppSettings}                                    from 'app/app.config';\nimport {AuthService}                                    from '../auth/auth.service';\n\n@Injectable()\nexport class BannerService {\n\n    private GAMES_URL = AppSettings.GAME_API_ENDPOINT + 'banner/'; // This is the API Endpoint for getting the game list.\n    private URL = AppSettings.API_ENDPOINT + 'GameManager/GetGameUrl?';\n\n    constructor(private http: Http,\n                private authService: AuthService,\n                private translate: TranslateService ){}\n\n    getBanner(): Observable<Banner> {\n\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}`;\n        return this.http\n            .get(url, this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    getBannerUrl(platform: string, category: string) {\n\n        let lang = this.translate.currentLang;\n        const url = `${this.URL}${'GamePlatform='+platform}${'&GameType='+category}${'&Language='+lang}${'&isMobile='+1}`;\n        return this.http\n            .get(url, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {Response}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return body;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/banner/banner.service.ts","import { Component, OnInit, AfterViewChecked }                    from '@angular/core';\nimport { ActivatedRoute, Params }               from '@angular/router';\nimport { Location }                             from '@angular/common';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/switchMap';\n\nimport {Casino}                                 from './casino';\nimport {CasinoService}                          from './casino.service';\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-casino',\n  templateUrl: './casino.component.html',\n  styleUrls: ['./casino.component.css'],\n  providers: [CasinoService, MalihuScrollbarService]\n})\nexport class CasinoComponent implements OnInit {\n\n  casinos: Casino;\n  error: string;\n  success: string;\n\n  constructor(\n    private casinoService: CasinoService,\n    private mScrollbarService: MalihuScrollbarService) { }\n\n  getCasinos(): void {\n     this.casinoService.getCasinos()\n        .subscribe(\n            success => this.casinos = success,\n            error => this.error = error\n        );\n  }\n\n  playGames(platform: string, category: string) {\n    this.casinoService.getGamesUrl(platform, category)\n        .subscribe(\n            success => {\n                this.success = <any>success;\n                let body = <any>success;\n                let url = body.Data.Url;\n                let frame = '<iframe style=\"border:0px;width:100%;height:100%;\" src=\"' + url +'\"></iframe>';\n                if(body.Status == 'SUCCESS') {\n                    // this.gameUrl = url;\n                    $('.fullscreen-container').show().html(frame);\n                } else {\n                    $('.fullscreen-container').show().html('Sorry. Something went wrong while loading Casino');\n                }\n            },\n            error => {\n                this.error = error;\n                $('.fullscreen-container').show().html('Sorry. Error loading Casino.');\n            }\n        );\n  }\n\n  loadiframe(platformCode, gameCode) {\n      $('.fullscreen-window').addClass('is-open');\n      this.playGames(platformCode, gameCode);\n  }\n\n  ngOnInit() {\n    this.getCasinos();\n  }\n\n  ngAfterViewChecked() {\n    // console.log('afterInit casino');\n    this.mScrollbarService.initScrollbar('#scrollable', { \n      axis: 'y', \n      theme: 'dark-thick' \n    });\n  }\n  \n  ngOnDestroy() {\n    this.mScrollbarService.destroy('#scrollable');\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/casino/casino.component.ts","import {Component, OnInit} from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {Countries} from './country';\nimport {CountryService} from './country.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-country',\n  templateUrl: './country.component.html',\n  styleUrls: ['./country.component.css'],\n  providers: [CountryService]\n})\n\nexport class CountryComponent implements OnInit {\n  countries: Countries[];\n  errorMessage: string;\n\n  constructor(private countriesService: CountryService) { }\n\n  /**\n   * Get Countries\n   */\n  getCountries(){\n    this.countriesService.getCountries()\n        .subscribe(\n            countries => this.countries = countries,\n            error => this.errorMessage = <any>error);\n  }\n  // TODO: Remove this when we're done\n  get diagnostic() {\n    return JSON.stringify(this.getCountries);\n  }\n\n  ngOnInit() {\n    this.getCountries();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/country/country.component.ts","import { Component, OnInit }                from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {DepositTransaction}                 from './deposit-transaction';\nimport {DepositTransactionService}          from './deposit-transaction.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-deposit-transaction',\n  templateUrl: './deposit-transaction.component.html',\n  styleUrls: ['./deposit-transaction.component.css'],\n  providers: [DepositTransactionService]\n})\nexport class DepositTransactionComponent implements OnInit {\n\n  depositTransactions: DepositTransaction[];\n  errorMessage: string;\n  successMessage: string;\n\n  constructor(private depositTransactionService: DepositTransactionService) { }\n\n  /**\n   * Get Deposit Transaction\n   */\n  getDepositTransaction() {\n    this.depositTransactionService.getDepositTransaction()\n        .subscribe(\n            depositTransactions => this.depositTransactions = depositTransactions,\n            error => this.errorMessage = <any>error);\n  }\n\n  // TODO: Remove this when we're done\n  get diagnostic() {\n    return JSON.stringify(this.depositTransactions);\n  }\n\n  ngOnInit() {\n    this.getDepositTransaction();\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/deposit-transaction/deposit-transaction.component.ts","import {Injectable}                                 from '@angular/core';\nimport {Http, Response}                             from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                 from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {DepositTransaction}                         from './deposit-transaction';\n\nimport {AppSettings}                                from '../app.config';\nimport  {requestOptionsProvider}                    from  '../default-request-option.service';\n\n@Injectable()\nexport class DepositTransactionService {\n\n    private urlGetDepositTransaction = AppSettings.API_ENDPOINT + 'Wallet/MyWallet'; // This is the API Endpoint for getting the list for Withdrawal Transaction per User\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<DepositTransaction[]>}\n     * GET Withdrawal Transaction\n     */\n    getDepositTransaction(): Observable<DepositTransaction[]> {\n        return this.http\n            .get(this.urlGetDepositTransaction, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData.Deposits; // API Response if the Status is SUCCESSFUL\n        }\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        if(error.status == 403) {\n            console.log('test');\n            localStorage.removeItem('TokenId');\n            location.replace('/login');\n        }\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/deposit-transaction/deposit-transaction.service.ts","import { Injectable }       from '@angular/core';\nimport {Http, Response}     from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {EmailVerification}                         from './email-verification';\n\nimport {AppSettings}                              from '../app.config';\nimport {requestOptionsProvider}                   from '../default-request-option.service';\n\n\n@Injectable()\nexport class EmailVerificationService {\n\n    private ResetEmailCode = AppSettings.API_ENDPOINT + 'PlayerAccount/ResetEmailByCode';\n\n    private senEmailResetCode = AppSettings.API_ENDPOINT + 'PlayerAccount/SendEmailResetCode';\n\n  constructor(private http: Http) { }\n\n    verifyEmail(user: EmailVerification): Observable<EmailVerification> {\n        return this.http\n            .post(this.senEmailResetCode, user, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n\n    }\n\n    resetEmail(user: EmailVerification): Observable<EmailVerification> {\n        return this.http\n            .post(this.ResetEmailCode, user, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n        rejectMsg = {\n            bodyStatus: body.Status,\n            Error: body.Messages.Errors,\n        };\n\n        return body || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/email-verification/email-verification.service.ts","import {Injectable}                                     from '@angular/core';\nimport {Http, Response}                                 from '@angular/http';\nimport {TranslateService}                               from '@ngx-translate/core';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                     from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {requestOptionsProvider}                         from  '../default-request-option.service';\nimport {AppSettings}                                    from 'app/app.config';\nimport {AuthService}                                    from '../auth/auth.service';\n\nimport {FeaturedGames}                                  from '../featured-games/featured-games';\n\n\n\n@Injectable()\nexport class FeaturedGamesService {\n\n    private GAMES_URL = AppSettings.GAME_API_ENDPOINT + 'games/'; // This is the API Endpoint for getting the game list.\n    private URL = AppSettings.API_ENDPOINT + 'GameManager/GetGameUrl?';\n\n    constructor(private http: Http,\n                private translate: TranslateService,\n                private authService: AuthService) {\n\n    }\n\n    getGames(): Observable<FeaturedGames> {\n        let category = 'Featured Games';\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}/${category}`;\n        return this.http\n            .get(url, this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    getGamesUrl(platform: string, category: string) {\n        let lang = this.translate.currentLang;\n        const url = `${this.URL}${'GamePlatform='+platform}${'&GameType='+category}${'&Language='+ lang}${'&isMobile='+1}`;\n        return this.http\n            .get(url, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        // if (bodyData == null) {\n        //     rejectMsg = {\n        //         bodyStatus: body.Status,\n        //         Error: body.Messages.Errors,\n        //     }\n        // } else {\n        //     rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        // }\n\n        return body;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/featured-games/featured-games.service.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {ResetPassword}                            from './forgot-password-reset';\n\nimport {AppSettings}                              from '../app.config';\nimport {requestOptionsProvider}                   from '../default-request-option.service';\n\n@Injectable()\nexport class ForgotPasswordResetService {\n\n    private url = AppSettings.API_ENDPOINT + 'PlayerAccount/ResetPasswordByCode'; // This is the API Endpoint to reset the password using reset code\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     *\n     * @param reset\n     * @returns {Observable<ResetPassword>}\n     * resetting the password\n     */\n    setPassword(reset: ResetPassword): Observable<ResetPassword> {\n\n        return this.http\n            .post(this.url, reset, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n\n            //remove all the local storage regarding for resent code\n            localStorage.removeItem('PasswordResetUserName');\n            localStorage.removeItem('PasswordResetEmail');\n            localStorage.removeItem('PasswordResetMobileCountryCode');\n            localStorage.removeItem('PasswordResetMobileNo');\n\n        }\n\n        return body || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forgot-password-reset/forgot-password-reset.service.ts","export class ForgotPassword {\n    UserName: string;\n    MobileCountryCode: string;\n    MobileNo: string;\n    Email: string;\n    CallbackUrl: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forgot-password/forgot-password.ts","import {Component, OnInit}                      from '@angular/core';\nimport {ActivatedRoute, Params}                 from '@angular/router';\nimport {Location}                               from '@angular/common';\nimport {TranslateService}                       from '@ngx-translate/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/switchMap';\n\nimport { Games } from './games';\nimport { GamesService } from './games.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-games',\n    templateUrl: 'games.component.html',\n    styleUrls: ['games.component.css'],\n    providers: [GamesService, MalihuScrollbarService]\n})\nexport class GamesComponent implements OnInit {\n\n    games: Games;\n    gameFilter: any = {title: '', game_platform:''};\n    errorMessages: string;\n    success: string;\n    gamesPlatform: string;\n    parameter: any;\n    gameUrl: any;\n    isActive:boolean = true;\n\n    filter: Games = new Games();\n\n    constructor(\n        private gameService: GamesService,\n        private route: ActivatedRoute,\n        private location: Location,\n        private mScrollbarService: MalihuScrollbarService\n    ) { }\n\n    // getGamesAll(): void {\n    //     this.gameService.getGamesAll()\n    //         .subscribe(\n    //         success => this.games = success,\n    //         error => this.errorMessages = error\n    //         );\n    // }\n\n    getGamesByCategory(): void {\n        this.route.params\n            .switchMap((params: Params) => this.gameService.getGamesByCategory(params['category']))\n            .subscribe(\n                success => this.games = success,\n                error => this.errorMessages = error\n            );\n    }\n\n    getActivePlatform(platform: string) {\n        this.isActive = false;\n        this.filter.game_platform = platform;\n        // if(!this.filter.game_platform || filter.title ) {\n        //     this.filter = '';\n        // }\n    }\n\n    getGamesByPlatform(): void {\n        this.route.params\n            .switchMap((params: Params) => this.gameService.getGamesByPlatform(params['platform'], params['category']))\n            .subscribe(\n                success => this.gamesPlatform = success,\n                error => this.errorMessages = error\n            );\n    }\n\n    playGames(platform: string, category: string) {\n        this.gameService.getGamesUrl(platform, category)\n            .subscribe(\n                success => {\n                    this.success = <any>success;\n                    let body = <any>success;\n                    let url = body.Data.Url;\n                    let frame = '<iframe style=\"border:0px;width:100%;height:100%;\" src=\"' + url +'\"></iframe>';\n                    if(body.Status == 'SUCCESS') {\n                        // this.gameUrl = url;\n                        $('.fullscreen-container').show().html(frame);\n                    } else {\n                        $('.fullscreen-container').show().html('Sorry. Error loading game');\n                    }\n                },\n                error => {\n                    this.errorMessages = error;\n                    $('.fullscreen-container').show().html('Ooops! Sorry. Error loading game');\n                }\n            );      \n    }\n\n    ngOnInit() {\n        this.getGamesByCategory();\n        this.getGamesByPlatform();\n\n        this.route.params.subscribe(params => {\n            this.parameter = params;\n        });\n    }\n\n    ngAfterViewChecked() {\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick'\n        });\n    }\n\n    ngOnDestroy() {\n        this.mScrollbarService.destroy('#scrollable');\n    }\n\n    nextPage() {\n        console.log('Reached Bottom!!');\n    }\n\n    loadiframe(platformCode, gameCode) {\n        $('.fullscreen-window').addClass('is-open');\n        this.playGames(platformCode, gameCode);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/games/games.component.ts","import { Component, OnInit } from '@angular/core';\nimport { SignalR, SignalRConnection } from 'ng2-signalr';\n\nimport {CasinoService}              from '../casino/casino.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n    errorMessages: string;\n    success: string;\n    casinos:any;\n    error:any;\n\n    constructor( \n        private _signalR: SignalR,\n        private casinoService: CasinoService,\n        private mScrollbarService: MalihuScrollbarService\n     )  {\n        //console.log($('body'));\n       // this.someFunction();\n    }\n\n    getCasinos(): void {\n        this.casinoService.getCasinos()\n            .subscribe(\n                success => this.casinos = <any>success,\n                error => this.error = error\n            );\n    }\n\n    playGames(platform: string, category: string) {\n        this.casinoService.getGamesUrl(platform, category)\n        .subscribe(\n            success => {\n                this.success = <any>success;\n                let body = <any>success;\n                let url = body.Data.Url;\n                let frame = '<iframe style=\"border:0px;width:100%;height:100%;\" src=\"' + url +'\"></iframe>';\n                if(body.Status == 'SUCCESS') {\n                    // this.gameUrl = url;\n                    $('.fullscreen-container').show().html(frame);\n                } else {\n                    $('.fullscreen-container').show().html('Sorry. Something went wrong while loading Casino');\n                }\n            },\n            error => {\n                this.errorMessages = error;\n                $('.fullscreen-container').show().html('Sorry. Error loading Casino.');\n            }\n        );\n  }\n\n    loadiframe(platformCode, gameCode) {\n        $('.fullscreen-window').addClass('is-open');\n        this.playGames(platformCode, gameCode);\n    }\n\n    ngAfterViewChecked() {\n        // console.log('afterInit casino');\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick',\n            setHeight: true,\n            advanced: {\n                updateOnContentResize: true,\n                updateOnImageLoad: true\n            }\n        });\n    }\n\n    ngOnInit() {\n        this.getCasinos();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/home/home.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Login } from './login';\nimport { LoginService } from './login.service';\nimport { AuthService } from '../auth/auth.service';\n\nimport { AppModule } from \"../app.module\";\nimport { ModalService } from \"../elements/modal/modal.module\";\nimport { RegistrationComponent } from \"../registration/registration.component\";\nimport { ForgotPasswordComponent } from \"../forgot-password/forgot-password.component\";\n\n// import 'assets/js/index.min.js'\n\n// declare var getFringerprint: any;\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    // styleUrls: ['./login.component.css'],\n    providers: [LoginService, AuthService]\n})\n\nexport class LoginComponent implements OnInit {\n\n    error: string;\n    login = new Login();\n    message: string;\n    dataError: any = [];\n    valid: boolean;\n    submitted: boolean = false;\n    // submit button default state\n    submitting: boolean = false;\n\n    constructor(private loginService: LoginService,\n        private authService: AuthService,\n        private modalService: ModalService) {\n\n        this.setMessage();\n    }\n\n    setMessage() {\n        this.message = 'Logged ' + (this.authService.isLoggedIn ? 'in' : 'out');\n    }\n\n    /**\n     * @param login\n     * Get Login Credential\n     */\n    loginUser(login: Login) {\n\n        this.submitted = true; // if submitted login is true\n        this.submitting = true;\n\n        this.loginService.login(login)\n            .subscribe(\n                success => {\n                    let data = <any>success;\n                    let bodyData = data.bodyStatus;\n                    this.dataError = data.Error;\n\n                    // Get the redirect URL from our auth service\n                    // If no redirect has been set, use the default\n                    if (!bodyData) {\n                        this.valid = true;\n                        location.replace('/home');\n                        this.submitting = false;\n                    } else {\n                        this.valid = false;\n                        this.error = <any>success;\n                        this.submitted = false;\n                        this.submitting = false;\n                    }\n                },\n                error => { \n                    this.error = error;\n                    this.submitting = false;\n                }\n            );\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.login);\n    }\n\n    display: boolean = false;\n    showDialog() {\n        this.display = true;\n    }\n\n    openModalRegistration(): void {\n        let modal$ = this.modalService.create(AppModule, RegistrationComponent, {});\n    }\n    openModalForgotPassword(): void {\n        let modal$ = this.modalService.create(AppModule, ForgotPasswordComponent, {});\n    }\n\n    ngOnInit() {\n        let storedUsername = localStorage.getItem('Username');\n\n        if (storedUsername) {\n            this.login.UserName = storedUsername;\n            this.login.RememberMe = true;\n        } else {\n            this.login.RememberMe = false;\n        }\n\n\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.component.ts","import { Injectable }       from '@angular/core';\nimport {Http, Response}     from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {MobileVerification}                         from './mobile-verification';\n\nimport {AppSettings}                              from '../app.config';\nimport {requestOptionsProvider}                   from '../default-request-option.service';\n\n\n@Injectable()\nexport class MobileVerificationService {\n\n    private sendMobileCode = AppSettings.API_ENDPOINT + 'PlayerAccount/SendMobileResetCode';\n    private resetMobileCode = AppSettings.API_ENDPOINT + 'PlayerAccount/ResetMobileByCode';\n\n    constructor(private http: Http) { }\n\n    verifyMobile(user: MobileVerification): Observable<MobileVerification> {\n        return this.http\n            .post(this.sendMobileCode, user, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n\n    }\n\n    resetMobile(user: MobileVerification): Observable<MobileVerification> {\n        return this.http\n            .post(this.resetMobileCode, user, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n        rejectMsg = {\n            bodyStatus: body.Status,\n            Error: body.Messages.Errors,\n        };\n\n        return body || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        //console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/mobile-verification/mobile-verification.service.ts","import {Component, OnInit}                  from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {OnlineDepositBank}                  from './online-deposit-bank';\nimport {OnlineDepositBankService}           from './online-deposit-bank.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-deposit',\n    templateUrl: 'online-deposit-bank.component.html',\n    styleUrls: ['online-deposit-bank.component.css'],\n    providers: [OnlineDepositBankService]\n})\nexport class OnlineDepositBankComponent implements OnInit {\n\n    onlineDepositBanks: OnlineDepositBank[];\n    errorMessage: string;\n    successMessage: string;\n\n\n    constructor(private onlineDepositBankService: OnlineDepositBankService) {\n    }\n\n    /**\n     * Get Online Deposit Banks\n     */\n    getOnlineDepositBank() {\n        this.onlineDepositBankService.getOnlineDepositBank()\n            .subscribe(\n                successMessage => this.successMessage =  <any>successMessage,\n                error => this.errorMessage = <any>error);\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.onlineDepositBanks);\n    }\n\n    ngOnInit() {\n        this.getOnlineDepositBank();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/online-deposit-bank/online-deposit-bank.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { ActivatedRoute, Params } from '@angular/router';\nimport { Location } from '@angular/common';\nimport 'rxjs/add/operator/toPromise';\n\nimport { OnlineDeposit } from './online-deposit';\nimport { OnlineDepositService } from './online-deposit.service';\n\nimport { OnlineDepositBank } from '../online-deposit-bank/online-deposit-bank';\nimport { OnlineDepositBankService } from '../online-deposit-bank/online-deposit-bank.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-online-deposit',\n    templateUrl: './online-deposit.component.html',\n    styleUrls: ['./online-deposit.component.css'],\n    providers: [OnlineDepositService,\n        OnlineDepositBankService]\n})\n\nexport class OnlineDepositComponent implements OnInit {\n    onlineDeposit = new OnlineDeposit();\n    onlineDepositBanks: OnlineDepositBank[];\n    error: string;\n    success: string;\n    dataError: any = [];\n    valid: boolean;\n    submitted: boolean = false;\n\n    // submit button default state\n    submitting: boolean = false;\n\n    constructor(\n        private onlineDepositService: OnlineDepositService,\n        private onlineDepositBankService: OnlineDepositBankService,\n        private mScrollbarService: MalihuScrollbarService\n    ) {}\n\n    getOnlineDepositBank() {\n        this.onlineDepositBankService.getOnlineDepositBank()\n            .subscribe(\n            onlineDepositBanks => this.onlineDepositBanks = onlineDepositBanks,\n            error => this.error = <any>error);\n    }\n\n    /**\n     * @param onlineDeposit\n     */\n    depositBank(onlineDeposit: OnlineDeposit) {\n        this.submitted = true;\n        this.submitting = true;\n\n        this.onlineDepositService.depositBank(onlineDeposit)\n            .subscribe(\n            success => {\n                this.success = <any>success;\n                let data = <any>success;\n                let bodyData = data.bodyStatus;\n                this.dataError = data.Error;\n                if (bodyData == 'SUCCESS') {\n                    this.valid = true;\n                    console.log(this.valid);\n\n                    this.submitting = false;\n                } else {\n                    this.valid = false;\n                    this.submitting = false;\n                }\n            },\n            error => {\n                this.error = <any>error;\n                this.submitting = false;\n            });\n    }\n\n    onCancel() {\n        this.submitted = false;\n    }\n\n    resetForm() {\n        this.submitted = false;\n        // this.OnlineDepositBankForm.reset();\n    }\n    \n    proceedLink(url) {\n        console.log(url);\n        window.open(url, '_blank', 'location=yes,scrollbars=yes,status=yes');\n        this.resetForm();\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.onlineDeposit);\n    }\n\n    ngAfterViewChecked() {\n        // console.log('afterInit casino');\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick'\n        });\n    }\n\n    ngOnInit() {\n        this.getOnlineDepositBank();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/online-deposit/online-deposit.component.ts","import {Injectable}                             from '@angular/core';\nimport {Http, Response}                         from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                             from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {OnlineDeposit}                          from './online-deposit';\n\nimport {AppSettings}                            from '../app.config';\nimport  {requestOptionsProvider}                from  '../default-request-option.service';\n\n@Injectable()\nexport class OnlineDepositService {\n\n    private URL = AppSettings.API_ENDPOINT + 'OnlineDeposit/DepositThirdPartyBank'; // This is the API Endpoint for POST Deposit\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @param onlineDeposit\n     * @returns {Observable<OnlineDeposit>}\n     * POST Deposit Bank\n     */\n    depositBank(onlineDeposit: OnlineDeposit): Observable<OnlineDeposit> {\n\n        return this.http\n            .post(this.URL, onlineDeposit, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let rejectMsg: {};\n        rejectMsg = {\n            bodyStatus: body.Status,\n            Error: body.Messages.Errors,\n            url: body.Data.Url\n        };\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        if(error.status == 403) {\n            console.log('test');\n            localStorage.removeItem('TokenId');\n            location.replace('/login');\n        }\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/online-deposit/online-deposit.service.ts","import { Component, OnInit } from '@angular/core';\nimport 'rxjs/add/operator/toPromise';\n\nimport { Profile } from './profile';\nimport { ProfileService } from './profile.service';\n\nimport { SecurityQuestion } from '../security-question/security-question';\nimport { SecurityQuestionService } from '../security-question/security-question.service';\n\nimport { Countries } from '../country/country';\nimport { CountryService } from '../country/country.service';\n\nimport { StateProvince } from '../state-province/state-province';\nimport { StateProvinceService } from '../state-province/state-province.service';\n\nimport { EmailVerificationComponent } from '../email-verification/email-verification.component';\nimport { MobileVerificationComponent } from '../mobile-verification/mobile-verification.component';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\nimport {IMyOptions, IMyDateModel} from 'mydatepicker';\nimport { AppModule } from \"../app.module\";\nimport { ModalService } from \"../elements/modal/modal.module\";\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.css'],\n    providers: [\n        ProfileService,\n        SecurityQuestionService,\n        CountryService,\n        StateProvinceService\n    ]\n})\n\nexport class ProfileComponent implements OnInit {\n    profile: Profile[];\n    securityQuestionInfo: SecurityQuestion[];\n    countries: Countries[];\n    stateProvinces: StateProvince[];\n    error: string;\n    success: string;\n    data = new Profile();\n    submitted: boolean = false;\n    secQuestion: string;\n\n    // submit button default state\n    submitting: boolean = false;\n\n    accountAtivated: any;\n    date: any;\n    dataError: any = [];\n    valid: boolean;\n    dateGet:string;\n    /**\n     * @param profileService\n     * @param securityQuestion\n     * @param countriesService\n     */\n    constructor(\n        private profileService: ProfileService,\n        private securityQuestion: SecurityQuestionService,\n        private countriesService: CountryService,\n        private stateProvinceService: StateProvinceService,\n        private mScrollbarService: MalihuScrollbarService,\n        private modalService: ModalService\n    ){ }\n\n\n    private myDatePickerOptions: IMyOptions = {            \n        dateFormat: 'yyyy-mm-dd',\n        //\"0001-01-01T00:00:00\"\n        showSelectorArrow: false,\n        //inputAutoFill: false,\n        showTodayBtn: false,\n        editableDateField: false,\n        showClearDateBtn: false,\n        openSelectorOnInputClick: true,\n        height: 'auto',\n        selectionTxtFontSize: '12px'\n    };\n\n    onDateChanged(event: IMyDateModel) {\n        this.date = event.formatted;\n    }\n\n    /**\n     *Get Profile Information\n     */\n    getProfile() {\n        this.profileService.getProfile()\n            .subscribe(\n            profile =>{\n                this.profile = profile;\n                let data = <any>profile;\n                this.accountAtivated = data.IsAccountActivated;\n\n                this.dateGet = data.BirthDate.substring(0,10);\n\n                if(this.dateGet == '0001-01-01'){\n\n                    var now = new Date();\n                    now.setFullYear(now.getFullYear() - 18);\n                    this.dateGet = now.getFullYear() + \"-\" + (\"0\"+(now.getMonth()+1)).slice(-2) + \"-\" +  (\"0\" + now.getDate()).slice(-2) ;\n                }\n            },\n            error => this.error = <any>error);\n    }\n\n\n    /**\n     * Get Security Question\n     */\n    getSecurityQuestion() {\n        this.securityQuestion.getSecurityQuestion()\n            .subscribe(\n            securityInfo => this.securityQuestionInfo = securityInfo,\n            error => this.error = <any>error)\n    }\n\n    /**\n     * Get Countries\n     */\n    getCountries() {\n        this.countriesService.getCountries()\n            .subscribe(\n            countries => this.countries = countries,\n            error => this.error = <any>error);\n    }\n\n    /**\n     * Get StateProvince\n     */\n    getStateProvince() {\n        this.stateProvinceService.getStateProvince()\n            .subscribe(\n            stateProvinces => this.stateProvinces = stateProvinces,\n            error => this.error = <any>error);\n    }\n\n    /**\n     * @param profile\n     * Update Profile Information\n     */\n    updateProfile(profile: Profile) {\n\n        if(this.date == 'undefined'){\n            profile.BirthDate = this.date;\n        }else{\n            profile.BirthDate = this.dateGet;\n        }\n\n        console.log(profile);\n        this.submitted = true;\n        this.submitting = true;\n        this.profileService.profileUpdate(profile)\n            .subscribe(\n            success => {\n                let data = <any>success;\n                let bodyData = data.Status;\n                console.log(data);\n                if (bodyData == 'SUCCESS') {\n                    this.valid = true;\n                    this.submitting = false;\n                    this.success = <any>success;\n                    this.dataError = data.Messages;\n                    console.log(this.dataError);\n                } else {\n                    this.valid = false;\n                    this.submitted = false;\n                    this.submitting = false;\n                    this.error = <any>success;\n                }\n            },\n            error => {\n                this.valid = false;\n                this.submitting = false;\n                this.error = <any>error;\n            });\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.profile);\n    }\n\n    openModalVerifyMobile(): void {\n        let modal$ = this.modalService.create(AppModule, MobileVerificationComponent, {});\n    }\n\n    openModalVerifyEmail(): void {\n        let modal$ = this.modalService.create(AppModule, EmailVerificationComponent, {});\n    }\n\n    ngAfterViewChecked() {\n        // console.log('afterInit casino');\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick'\n        });\n    }\n\n    ngOnInit() {\n        this.getProfile();\n        this.getSecurityQuestion();\n        this.getCountries();\n        this.getStateProvince();\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.component.ts","import { Component, OnInit } from '@angular/core';\nimport { Location } from '@angular/common';\n\nimport { ActivatedRoute, Params }               from '@angular/router';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/switchMap';\n\nimport {PromotionDetail}                                  from './promotion-detail';\nimport {PromotionDetailService}                           from './promotion-detail.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-promotion-detail',\n  templateUrl: './promotion-detail.component.html',\n  styleUrls: ['./promotion-detail.component.css'],\n  providers: [PromotionDetailService]\n})\nexport class PromotionDetailComponent implements OnInit {\n\n  promotionDetails: PromotionDetail;\n  errorMessages: string;\n  success: string;\n\n  constructor(\n      private promotionDetailService: PromotionDetailService,\n      private route: ActivatedRoute,    \n      private location: Location,\n      private mScrollbarService: MalihuScrollbarService) { }\n\n\n  getPromotionDetail(): void {\n    this.route.params\n        .switchMap((params: Params) => this.promotionDetailService.getPromotionDetail(params['category'], params['id']))\n        .subscribe(\n            success => this.promotionDetails = success,\n            error => this.errorMessages = error\n        );\n  }\n\n  ngOnInit() {\n    this.getPromotionDetail();\n  }\n\n\n    ngAfterViewChecked() {\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick'\n        });\n    }\n\n    ngOnDestroy() {\n        this.mScrollbarService.destroy('#scrollable');\n    }\n\n    goBack() {\n      this.location.back();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/promotion-detail/promotion-detail.component.ts","import {Injectable}                                     from '@angular/core';\nimport {Headers, Http, Response, RequestOptions}        from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                     from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {PromotionDetail}                                from './promotion-detail';\n\nimport {AppSettings}                                    from 'app/app.config';\nimport {AuthService}                                    from '../auth/auth.service';\n\nimport {TranslateService}                               from '@ngx-translate/core';\n\n@Injectable()\nexport class PromotionDetailService {\n\n    private LANG_CODE;\n    private GAMES_URL = AppSettings.GAME_API_ENDPOINT + 'promotion/'; // This is the API Endpoint for getting the game list.\n\n    constructor(private http: Http,\n                private translate: TranslateService,\n                private authService: AuthService) {\n\n        this.LANG_CODE = translate.currentLang;\n\n    }\n\n    getPromotionDetail(category: string, id: string): Observable<PromotionDetail> {\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}/${category}/${id}`;\n        return this.http\n            .get(url, this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {Response}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return body;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/promotion-detail/promotion-detail.service.ts","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/switchMap';\n\nimport { Promotion } from './promotion';\nimport { PromotionService } from './promotion.service';\n\nimport { PromotionDetail } from '../promotion-detail/promotion-detail';\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-promotion',\n    templateUrl: './promotion.component.html',\n    styleUrls: ['./promotion.component.css'],\n    providers: [PromotionService]\n})\nexport class PromotionComponent implements OnInit {\n\n    promotions: Promotion;\n    gameFilter: any = { title: '', game_platform: '' };\n    errorMessages: string;\n    success: string;\n    parameter: any;\n    filter: Promotion = new Promotion();\n\n    constructor(\n        private promotionService: PromotionService,\n        private route: ActivatedRoute,\n        private translate: TranslateService,\n        private mScrollbarService: MalihuScrollbarService\n        // private params: Params\n    ) {\n        //console.log(route);\n    }\n\n\n    // getPromotion(): void {\n    //       this.promotionService.getPromotion()\n    //       .subscribe(\n    //           success => this.promo = success,\n    //           error => this.errorMessages = error\n    //       );\n    // }\n\n    getPromotionAll(): void {\n        this.promotionService.getPromotionAll()\n            .subscribe(\n            success => this.promotions = success,\n            error => this.errorMessages = error\n            );\n    }\n\n    ngOnInit() {\n        // this.getPromotion();\n        this.getPromotionAll();\n        this.route.params.subscribe(params => {\n            this.parameter = params;\n        });\n    }\n\n    ngAfterViewChecked() {\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick',\n            setHeight: true,\n            advanced: {\n                updateOnContentResize: true,\n                updateOnImageLoad: true\n            }\n        });\n    }\n\n    ngOnDestroy() {\n        this.mScrollbarService.destroy('#scrollable');\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/promotion/promotion.component.ts","import {Injectable}                                     from '@angular/core';\nimport {Http, Response}                                 from '@angular/http';\nimport {TranslateService}                               from '@ngx-translate/core';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                     from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {Promotion}                                      from './promotion';\n\nimport {AppSettings}                                    from 'app/app.config';\nimport {AuthService}                                    from '../auth/auth.service';\n\n@Injectable()\nexport class PromotionService {\n\n    private GAMES_URL = AppSettings.GAME_API_ENDPOINT + 'promotion/'; // This is the API Endpoint for getting the game list.\n\n    constructor(private http: Http,\n                private translate: TranslateService,\n                private authService: AuthService) {\n\n    }\n\n    getPromotion(): Observable<Promotion> {\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}`;\n        return this.http\n            .get(url, this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    getPromotionAll(): Observable<Promotion> {\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}`;\n        return this.http\n            .get(url, this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {Response}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return body;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/promotion/promotion.service.ts","import {Component, OnInit}                        from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {BankAccount}                              from './quick-deposit-bank-account';\nimport {QuickDepositBankAccountService}           from './quick-deposit-bank-account.service';\n\nimport {QuickDepositMethod}                 from '../quick-deposit-method/quick-deposit-method';\nimport {QuickDepositMethodService}          from '../quick-deposit-method/quick-deposit-method.service';\n\nimport {QuickDepositPreferredBank}          from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank';\nimport {QuickDepositPreferredBankService}   from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-quick-deposit-bank-account',\n  templateUrl: './quick-deposit-bank-account.component.html',\n  styleUrls: ['./quick-deposit-bank-account.component.css'],\n  providers: [\n    QuickDepositBankAccountService\n    , QuickDepositMethodService\n    , QuickDepositPreferredBankService\n  ]\n})\nexport class QuickDepositBankAccountComponent implements OnInit {\n  bankAccounts: BankAccount[];\n  quickDepositMethods: QuickDepositMethod[];\n  quickDepositPreferredBanks: QuickDepositPreferredBank[];\n  errorMessage: string;\n\n  constructor(private quickDepositBankAccountService: QuickDepositBankAccountService,\n              private quickDepositMethodService: QuickDepositMethodService,\n              private quickDepositPreferredBankService: QuickDepositPreferredBankService) { }\n\n  /**\n   * Get Quick Deposit Banks\n   */\n  getQuickDepositMethod() {\n    this.quickDepositMethodService.getQuickDepositMethod()\n        .subscribe(\n            quickDepositMethods => this.quickDepositMethods = quickDepositMethods,\n            error => this.errorMessage = <any>error);\n  }\n\n  /**\n   * Get Quick Deposit Banks\n   */\n  getQuickDepositPreferredBank() {\n    this.quickDepositPreferredBankService.getQuickDepositPreferredBank()\n        .subscribe(\n            quickDepositPreferredBanks => this.quickDepositPreferredBanks = quickDepositPreferredBanks,\n            error => this.errorMessage = <any>error);\n  }\n\n  /**\n   * Get user bank list with ID Parameter\n   */\n  getBankAccount(paymentMethodId: string,bankId: string){\n    this.quickDepositBankAccountService.getBankAccount(paymentMethodId,bankId)\n        .subscribe(\n            bankAccounts => this.bankAccounts = bankAccounts,\n            error => this.errorMessage = <any>error);\n  }\n\n  // TODO: Remove this when we're done\n  get diagnostic() {\n    return JSON.stringify(this.bankAccounts);\n  }\n\n  ngOnInit() {\n    this.getQuickDepositMethod();\n    this.getQuickDepositPreferredBank();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-bank-account/quick-deposit-bank-account.component.ts","import {Component, OnInit}                        from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {UdaId}                                    from './quick-deposit-generate-uda-id';\nimport {QuickDepositGenerateUdaIdService}         from './quick-deposit-generate-uda-id.service';\n\nimport {QuickDepositMethod}                       from '../quick-deposit-method/quick-deposit-method';\nimport {QuickDepositMethodService}                from '../quick-deposit-method/quick-deposit-method.service';\n\nimport {QuickDepositPreferredBank}                from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank';\nimport {QuickDepositPreferredBankService}         from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank.service';\n\n\nimport {BankAccount}                              from '../quick-deposit-bank-account/quick-deposit-bank-account';\nimport {QuickDepositBankAccountService}           from '../quick-deposit-bank-account/quick-deposit-bank-account.service';\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-quick-deposit-generate-uda-id',\n  templateUrl: './quick-deposit-generate-uda-id.component.html',\n  styleUrls: ['./quick-deposit-generate-uda-id.component.css'],\n  providers: [\n    QuickDepositGenerateUdaIdService\n    , QuickDepositMethodService\n    , QuickDepositPreferredBankService\n    , QuickDepositBankAccountService\n  ]\n})\nexport class QuickDepositGenerateUdaIdComponent implements OnInit {\n   udaIds: UdaId[];\n  udaId = new UdaId();\n  bankAccounts: BankAccount[];\n  quickDepositMethods: QuickDepositMethod[];\n  quickDepositPreferredBanks: QuickDepositPreferredBank[];\n  errorMessage: string;\n  getPaymentMethodId: string;\n  constructor(private quickDepositGenerateUdaIdService: QuickDepositGenerateUdaIdService,\n              private quickDepositMethodService: QuickDepositMethodService,\n              private quickDepositPreferredBankService: QuickDepositPreferredBankService,\n              private quickDepositBankAccountService: QuickDepositBankAccountService) { }\n\n\n  /**\n   * Get Quick Deposit Banks\n   */\n  getQuickDepositMethod() {\n    this.quickDepositMethodService.getQuickDepositMethod()\n        .subscribe(\n            quickDepositMethods => this.quickDepositMethods = quickDepositMethods,\n            error => this.errorMessage = <any>error);\n  }\n\n  /**\n   * Get Quick Deposit Banks\n   */\n  getQuickDepositPreferredBank() {\n    this.quickDepositPreferredBankService.getQuickDepositPreferredBank()\n        .subscribe(\n            quickDepositPreferredBanks => this.quickDepositPreferredBanks = quickDepositPreferredBanks,\n            error => this.errorMessage = <any>error);\n  }\n\n  /**\n   * Get user bank list with ID Parameter\n   */\n  getBankAccount(paymentMethodId: string,bankId: string){\n    this.getPaymentMethodId = paymentMethodId;\n    this.quickDepositBankAccountService.getBankAccount(paymentMethodId,bankId)\n        .subscribe(\n            bankAccounts => this.bankAccounts = bankAccounts,\n            error => this.errorMessage = <any>error);\n  }\n\n  /**\n   * @param udaId\n   * Get UDA id\n   */\n  getUdaId(udaId: UdaId) {\n    udaId.PaymentMethodId = this.getPaymentMethodId;\n    this.quickDepositGenerateUdaIdService.getUdaId(udaId)\n        .subscribe(\n            success => this.udaIds = <any>success,\n            error => this.errorMessage = <any>error);\n  }\n\n  // /**\n  //  * Get user bank list with ID Parameter\n  //  */\n  // getUdaId(paymentMethodId: string,amount: string){\n  //   this.quickDepositGenerateUdaIdService.getUdaId(paymentMethodId,amount)\n  //       .subscribe(\n  //           udaIds => this.udaIds = udaIds,\n  //           error => this.errorMessage = <any>error);\n  // }\n\n  // TODO: Remove this when we're done\n  get diagnostic() {\n    return JSON.stringify(this.udaIds);\n  }\n\n  ngOnInit() {\n    this.getQuickDepositMethod();\n    this.getQuickDepositPreferredBank();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.component.ts","export class UdaId {\n    Id: string;\n    PaymentMethodId: string;            // UDAID\n    DepositAmount: string;\n    UDARuleValue: string;\n    GeneratedUDA: string; // PLEASE DEPOSIT AMOUNT / UNIQUE DEPOSIT AMOUNT\n    DateGenerated: string;\n    ValidityDate: string;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.ts","import {Component, OnInit}                  from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {QuickDepositMethod}                 from './quick-deposit-method';\nimport {QuickDepositMethodService}          from './quick-deposit-method.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-quick-deposit-bank',\n    templateUrl: 'quick-deposit-method.component.html',\n    styleUrls: ['quick-deposit-method.component.css'],\n    providers: [QuickDepositMethodService]\n})\nexport class QuickDepositMethodComponent implements OnInit {\n\n    quickDepositMethods: QuickDepositMethod[];\n    errorMessage: string;\n\n    constructor(private quickDepositMethodService: QuickDepositMethodService) {\n    }\n\n    /**\n     * Get Quick Deposit Banks\n     */\n    getQuickDepositMethod() {\n        this.quickDepositMethodService.getQuickDepositMethod()\n            .subscribe(\n                quickDepositMethods => this.quickDepositMethods = quickDepositMethods,\n                error => this.errorMessage = <any>error);\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.getQuickDepositMethod);\n    }\n\n    ngOnInit() {\n        this.getQuickDepositMethod();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-method/quick-deposit-method.component.ts","import {Component, OnInit} from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {QuickDepositPreferredBank} from './quick-deposit-preferred-bank';\nimport {QuickDepositPreferredBankService} from './quick-deposit-preferred-bank.service';\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-quick-deposit-preferred-bank',\n    templateUrl: './quick-deposit-preferred-bank.component.html',\n    styleUrls: ['./quick-deposit-preferred-bank.component.css'],\n    providers: [QuickDepositPreferredBankService]\n})\nexport class QuickDepositPreferredBankComponent implements OnInit {\n\n    quickDepositPreferredBanks: QuickDepositPreferredBank[];\n    errorMessage: string;\n\n    constructor(private quickDepositPreferredBankService: QuickDepositPreferredBankService) {\n    }\n\n    /**\n     * Get Quick Deposit Banks\n     */\n    getQuickDepositPreferredBank() {\n        this.quickDepositPreferredBankService.getQuickDepositPreferredBank()\n            .subscribe(\n                quickDepositPreferredBanks => this.quickDepositPreferredBanks = quickDepositPreferredBanks,\n                error => this.errorMessage = <any>error);\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.getQuickDepositPreferredBank);\n    }\n\n    ngOnInit() {\n        this.getQuickDepositPreferredBank();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-preferred-bank/quick-deposit-preferred-bank.component.ts","import {Component, OnInit}                          from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {QuickDeposit}                               from './quick-deposit';\nimport {QuickDepositService}                        from './quick-deposit.service';\n\nimport {QuickDepositMethod}                         from '../quick-deposit-method/quick-deposit-method';\nimport {QuickDepositMethodService}                  from '../quick-deposit-method/quick-deposit-method.service';\n\nimport {QuickDepositPreferredBank}                  from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank';\nimport {QuickDepositPreferredBankService}           from '../quick-deposit-preferred-bank/quick-deposit-preferred-bank.service';\n\nimport {BankAccount}                                from '../quick-deposit-bank-account/quick-deposit-bank-account';\nimport {QuickDepositBankAccountService}             from '../quick-deposit-bank-account/quick-deposit-bank-account.service';\n\nimport {UdaId}                                      from '../quick-deposit-generate-uda-id/quick-deposit-generate-uda-id';\nimport {QuickDepositGenerateUdaIdService}           from '../quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-quick-deposit',\n    templateUrl: './quick-deposit.component.html',\n    styleUrls: ['./quick-deposit.component.css'],\n    providers: [\n        QuickDepositService\n        , QuickDepositMethodService\n        , QuickDepositPreferredBankService\n        , QuickDepositBankAccountService\n        , QuickDepositGenerateUdaIdService\n    ]\n})\nexport class QuickDepositComponent implements OnInit {\n    udaIds: UdaId[];\n    udaId = new UdaId();\n\n    getPaymentMethodId: string;\n    getBankAccountId: any;\n    getDepositAmount: string;\n\n    bankAccounts: BankAccount[];\n    quickDepositPreferredBanks: QuickDepositPreferredBank[];\n    quickDeposits = new QuickDeposit();\n    quickDepositMethods: QuickDepositMethod[];\n    error: string;\n    success: string;\n    dataError: any = [];\n    valid: boolean;\n\n    // submit button default state\n    submitting: boolean = false;\n\n    constructor(\n        private quickDepositMethodService: QuickDepositMethodService,\n        private quickDepositService: QuickDepositService,\n        private quickDepositPreferredBankService: QuickDepositPreferredBankService,\n        private quickDepositBankAccountService: QuickDepositBankAccountService,\n        private quickDepositGenerateUdaIdService: QuickDepositGenerateUdaIdService,\n        private mScrollbarService: MalihuScrollbarService\n    ) {}\n\n\n    /**\n     * Get Quick Deposit Banks\n     */\n    getQuickDepositMethod() {\n        this.quickDepositMethodService.getQuickDepositMethod()\n            .subscribe(\n                quickDepositMethods => {\n                    this.quickDepositMethods = quickDepositMethods;\n                },\n                error => this.error = <any>error);\n    }\n\n    /**\n     * Get Quick Deposit Preferred Bank\n     */\n    getQuickDepositPreferredBank() {\n        this.quickDepositPreferredBankService.getQuickDepositPreferredBank()\n            .subscribe(\n                quickDepositPreferredBanks => this.quickDepositPreferredBanks = quickDepositPreferredBanks,\n                error => this.error = <any>error);\n    }\n\n    /**\n     * @param quickDeposit\n     * Insert Quick Deposit\n     */\n    quickDeposit(quickDeposit: QuickDeposit, generatedUdaId: string) {\n\n        this.submitting = true;\n\n        quickDeposit.UDAId = generatedUdaId;\n        quickDeposit.PaymentMethodId = this.getPaymentMethodId;\n        quickDeposit.DepositAmount = this.getDepositAmount;\n        quickDeposit.BankAccountId = this.getBankAccountId;\n\n        this.quickDepositService.quickDeposit(quickDeposit)\n            .subscribe(\n                success =>{\n                    this.success = <any>success;\n                    let data = <any>success;\n                    let bodyData = data.bodyStatus;\n                    this.dataError = data.Error;\n                    if (bodyData == 'SUCCESS') {\n                        this.valid = true;\n                        this.submitting = false;\n                        console.log(this.valid);\n                    } else {\n                        this.valid = false;\n                        this.submitting = false;\n                    }\n                },\n                error => {\n                    this.error = <any>error;\n                    this.submitting = false;\n                });\n    }\n\n    /**\n     * Get user bank list with ID Parameter\n     */\n    getBankAccount(paymentMethodId: string, bankId: string){\n        this.getPaymentMethodId = paymentMethodId;\n        this.quickDepositBankAccountService.getBankAccount(paymentMethodId,bankId)\n            .subscribe(\n                bankAccounts => {\n                    this.bankAccounts = <any>bankAccounts;\n                    let data = <any>bankAccounts;\n                    this.getBankAccountId = data.Id;\n\n                },\n                error => this.error = <any>error);\n    }\n\n    /**\n     * @param udaId\n     * Get UDA id\n     */\n    getUdaId(udaId: UdaId) {\n\n        udaId.PaymentMethodId = this.getPaymentMethodId;\n        this.getDepositAmount = udaId.DepositAmount;\n\n        this.quickDepositGenerateUdaIdService.getUdaId(udaId)\n            .subscribe(\n                success => this.udaIds = <any>success,\n                error => this.error = <any>error);\n\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.quickDeposits);\n    }\n\n    ngAfterViewChecked() {\n        // console.log('afterInit casino');\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick'\n        });\n    }\n\n    ngOnInit() {\n        this.getQuickDepositMethod();\n        this.getQuickDepositPreferredBank();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit/quick-deposit.component.ts","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {QuickDeposit}                             from './quick-deposit';\n\nimport {AppSettings}                              from '../app.config';\nimport  {requestOptionsProvider}                  from  '../default-request-option.service';\n\n@Injectable()\nexport class QuickDepositService {\n\n    private urlPostQuickDeposit = AppSettings.API_ENDPOINT + 'Wallet/Deposit'; // This is the API Endpoint for POST Deposit\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @param quickDeposit\n     * @returns {Observable<QuickDeposit>}\n     * POST Deposit Bank\n     */\n    quickDeposit(quickDeposit: QuickDeposit): Observable<QuickDeposit> {\n\n        return this.http\n            .post(this.urlPostQuickDeposit, quickDeposit, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        rejectMsg = {\n            bodyStatus: body.Status,\n            Error: body.Messages.Errors,\n        };\n\n\n        return rejectMsg || {};\n    }\n\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        if(error.status == 403) {\n            console.log('test');\n            localStorage.removeItem('TokenId');\n            location.replace('/login');\n        }\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit/quick-deposit.service.ts","import {Injectable}                             from '@angular/core';\nimport {Http, Response }                  from '@angular/http';\nimport {TranslateService}                       from '@ngx-translate/core';\n\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                              from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {Registration}                            from './registration';\n\nimport {AppSettings}                               from '../app.config';\nimport  {requestOptionsProvider}                  from  '../default-request-option.service';\n\n@Injectable()\nexport class RegistrationService {\n\n    private url = AppSettings.API_ENDPOINT + 'v1/Player/Register'; // This is the API Endpoint for registering user\n\n    IPAddress: string;\n\n    constructor(\n        private http: Http,\n        private translate: TranslateService\n    ) {\n        $.getJSON(\"https://jsonip.com?callback=?\", function(data) {            \n            this.IPAddress = data.ip;\n            // alert(\"Your IP address is :- \" + this.IPAddress);\n        });\n    }\n\n\n\n    /**\n     * @param reg\n     * @returns {Observable<R>}\n     * POST registering user\n     */\n    create(reg: Registration): Observable<Registration> {\n\n        let lang = this.translate.currentLang;\n        reg.IPAddress = '192.168.3.123';\n        reg.BrandCode = 'O88';\n        reg.LanguageCode = lang;\n        reg.ConfirmPassword = reg.Password;\n        return this.http\n            .post(this.url, reg, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractDataUsername(res: Response) {\n\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n\n            //trace if username is exist\n            localStorage.setItem('UsernameExist',bodyData);\n        }\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            };\n        } else {\n            localStorage.setItem('TokenId', bodyData.TokenId);\n            localStorage.setItem('Username', bodyData.UserName);\n            localStorage.setItem('Roles', bodyData.Roles);\n            localStorage.setItem('SignalRTokenId', bodyData.SignalRTokenId);\n            localStorage.setItem('Expiration', bodyData.Expirration);\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n            console.log(rejectMsg);\n        }\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body reponse\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration/registration.service.ts","import {Component, OnInit}                  from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {SecurityQuestion}                   from './security-question';\nimport {SecurityQuestionService}            from './security-question.service';\n\nimport { Modal }               from \"../elements/modal/modal.module\";\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-security-question',\n    templateUrl: './security-question.component.html',\n    styleUrls: ['./security-question.component.css'],\n    providers: [SecurityQuestionService]\n})\n\n@Modal()\n\nexport class SecurityQuestionComponent implements OnInit {\n    \n    securityQuestions: SecurityQuestion[];\n    errorMessage: string;\n\n    constructor(private securityQuestionService: SecurityQuestionService) {\n    }\n\n    /**\n     * Get Security Questions\n     */\n    getSecurityQuestion() {\n        this.securityQuestionService.getSecurityQuestion()\n            .subscribe(\n                securityQuestions => this.securityQuestions = securityQuestions,\n                error => this.errorMessage = <any>error);\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.securityQuestions);\n    }\n\n    ngOnInit() {\n        this.getSecurityQuestion();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/security-question/security-question.component.ts","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params }               from '@angular/router';\nimport { Location }                             from '@angular/common';\nimport {TranslateService}                       from '@ngx-translate/core';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/switchMap';\n\nimport {Sports}                                 from './sports';\nimport {SportsService}                          from './sports.service';\n\n\n@Component({\n  moduleId: module.id,\n  selector: 'app-sports',\n  templateUrl: './sports.component.html',\n  styleUrls: ['./sports.component.css'],\n  providers: [SportsService]\n})\n\nexport class SportsComponent implements OnInit {\n\n    sports: Sports;\n    error: string;\n    success: string;\n\n    constructor(\n        private sportsService: SportsService,\n        private route: ActivatedRoute,\n        private location: Location,\n        private translate: TranslateService\n    ) { }\n\n    getSportsBook(): void {\n        this.sportsService.getSports()\n            .subscribe(\n                success => this.sports = success,\n                error => this.error = error\n        );\n    }\n\n    playGames(lang: string, platform: string, category: string) {\n\n        this.sportsService.getSportsUrl(lang, platform, category).\n            subscribe(\n                success => this.success = success,\n                error => this.error = error\n        )\n    }\n\n\n    loadiframe(langCode, platformCode, gameCode) {\n        $('.fullscreen-window').addClass('is-open');\n        this.playGames(langCode, platformCode, gameCode);\n    }\n\n    ngOnInit() {\n        this.getSportsBook();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/sports/sports.component.ts","import {Injectable}                                     from '@angular/core';\nimport {Headers, Http, Response, RequestOptions}        from '@angular/http';\nimport {TranslateService}                               from '@ngx-translate/core';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                     from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport  {requestOptionsProvider}                        from  '../default-request-option.service';\nimport {AppSettings}                                    from 'app/app.config';\nimport {AuthService}                                    from '../auth/auth.service';\n\nimport {Sports}                                         from './sports';\n\n@Injectable()\nexport class SportsService {\n\n    private GAMES_URL = AppSettings.GAME_API_ENDPOINT + 'sports/'; // This is the API Endpoint for getting the game list.\n    private URL = AppSettings.API_ENDPOINT + 'GameManager/GetGameUrl?';\n\n    constructor(private http: Http,\n                private authService: AuthService,\n                private translate: TranslateService) {}\n\n    getSports(): Observable<Sports> {\n        let lang = this.translate.currentLang;\n        const url = `${this.GAMES_URL}${lang}`;\n        return this.http\n            .get(url, this.authService.contentBasicAuth())\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    getSportsUrl(lang: string, platform: string, category: string) {\n\n        const url = `${this.URL}${'GamePlatform='+platform}${'&GameType='+category}${'&Language='+ lang}${'&isMobile='+1}`;\n        return this.http\n            .get(url, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {Response}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return body;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/sports/sports.service.ts","import {Component, OnInit}                          from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {StateProvince}                              from './state-province';\nimport {StateProvinceService}                       from './state-province.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-state-province',\n    templateUrl: './state-province.component.html',\n    styleUrls: ['./state-province.component.css'],\n    providers: [StateProvinceService]\n})\nexport class StateProvinceComponent implements OnInit {\n    stateProvinces: StateProvince[];\n    errorMessage: string;\n\n    constructor(private stateProvinceService: StateProvinceService) {\n    }\n\n    /**\n     * Get StateProvince\n     */\n    getStateProvince() {\n        this.stateProvinceService.getStateProvince()\n            .subscribe(\n                stateProvinces => this.stateProvinces = stateProvinces,\n                error => this.errorMessage = <any>error);\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.getStateProvince);\n    }\n\n    ngOnInit() {\n        this.getStateProvince();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/state-province/state-province.component.ts","import {Component, OnInit}                  from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {Wechat}                             from './wechat';\nimport {WechatService}                      from './wechat.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\nimport {isNumber} from \"util\";\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-weChat',\n    templateUrl: './wechat.component.html',\n    styleUrls: ['./wechat.component.css'],\n    providers: [WechatService]\n})\n\nexport class WechatComponent implements OnInit {\n    wechat = new Wechat();\n    error: string;\n    success: string;\n    // valid: boolean = true;\n    submitted: boolean = false;\n    valAmount: number;\n\n\n    // submit button default state\n    submitting: boolean = false;\n\n    constructor(\n        private wechatService: WechatService,\n        private mScrollbarService: MalihuScrollbarService\n    ) {}\n\n    /**\n     * @param weChat\n     * wechat payment\n     */\n    weChatPayment(wechat: Wechat) {\n      this.valAmount = parseInt(wechat.Amount);\n\n        if(this.valAmount == 0 || this.valAmount >= 3001){\n\n            this.submitted = true;\n            this.submitting = false;\n        }else{\n\n            this.submitted = true;\n            this.submitting = true;\n            this.wechatService.weChatPayment(wechat)\n                .subscribe(\n                    // success => this.success = <any>success,\n                    success => {\n                        this.success = <any>success;\n                        this.submitting = false;\n                        this.submitted = true;\n                    },\n                    error => {\n                        this.error = <any>error;\n                        this.submitting = false;\n                        // this.submitted = false;\n                    });\n        }\n\n    }\n\n    onCancel() {\n        this.success = '';\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.wechat);\n    }\n\n    ngAfterViewChecked() {\n        // console.log('afterInit casino');\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick'\n        });\n    }    \n\n    ngOnInit() {\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/wechat/wechat.component.ts","import {Injectable}                                 from '@angular/core';\nimport {Http, Response}                             from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                 from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {Wechat}                                     from './wechat';\n\nimport {AppSettings}                                from '../app.config';\nimport  {requestOptionsProvider}                    from  '../default-request-option.service';\n\n@Injectable()\nexport class WechatService {\n\n    private URL = AppSettings.API_ENDPOINT + 'DaddyPay/DaddyPayDepositWeChat'; // This is the API Endpoint for deposit using WeChat\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @param weChat\n     * @returns {Observable<WeChat>}\n     * POST update profile\n     */\n    weChatPayment(wechat: Wechat): Observable<Wechat> {\n\n        return this.http\n            .post(this.URL, wechat, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        }\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        if(error.status == 403) {\n            console.log('test');\n            localStorage.removeItem('TokenId');\n            location.replace('/login');\n        }\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/wechat/wechat.service.ts","import {Component, OnInit}                  from '@angular/core';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport {WithdrawalTransaction}              from './withdrawal-transaction';\nimport {WithdrawalTransactionService}       from './withdrawal-transaction.service';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-withdrawal-transaction',\n    templateUrl: './withdrawal-transaction.component.html',\n    styleUrls: ['./withdrawal-transaction.component.css'],\n    providers: [WithdrawalTransactionService]\n})\nexport class WithdrawalTransactionComponent implements OnInit {\n\n    withdrawalTransactions: WithdrawalTransaction[];\n    errorMessage: string;\n    successMessage: string;\n\n    constructor(private withdrawalTransactionService: WithdrawalTransactionService) {\n    }\n\n    /**\n     * Get Withdrawal Transaction\n     */\n    getWithdrawalTransaction() {\n        this.withdrawalTransactionService.getWithdrawalTransaction()\n            .subscribe(\n                withdrawalTransactions => {\n                 let transaction = <any>withdrawalTransactions;\n                 this.withdrawalTransactions = transaction.Withdrawals;\n                },\n                error => this.errorMessage = <any>error);\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.getWithdrawalTransaction);\n    }\n\n    ngOnInit() {\n        this.getWithdrawalTransaction();\n    }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/withdrawal-transaction/withdrawal-transaction.component.ts","import { Component, OnInit }    from '@angular/core';\nimport { Location }             from '@angular/common';\nimport {Router}                 from '@angular/router';\n\nimport 'rxjs/add/operator/toPromise';\n\nimport { Withdrawal } from './withdrawal';\nimport { WithdrawalService } from './withdrawal.service';\n\nimport { Profile } from '../profile/profile';\nimport { ProfileService } from '../profile/profile.service';\n\nimport { WithdrawalTransaction } from '../withdrawal-transaction/withdrawal-transaction';\nimport { WithdrawalTransactionService } from '../withdrawal-transaction/withdrawal-transaction.service';\n\nimport { MalihuScrollbarService } from 'ngx-malihu-scrollbar';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-withdrawal',\n    templateUrl: './withdrawal.component.html',\n    styleUrls: ['./withdrawal.component.css'],\n    providers: [\n        WithdrawalService,\n        ProfileService,\n        WithdrawalTransactionService\n    ]\n})\nexport class WithdrawalComponent implements OnInit {\n    profile: Profile[];\n    withdraw = new Withdrawal();\n    withdrawalTransactions: WithdrawalTransaction[];\n    error: string;\n    success: string;\n    dataError: any = [];\n    valid: boolean;\n    lockedAmount: string;\n    WithdrawalAmt: string;\n    submitted: boolean = false;\n\n    // submit button default state\n    submitting: boolean = false;\n    accountAtivated: any;\n    bankAccount: any;\n\n    constructor(\n        private withdrawalService: WithdrawalService,\n        private profileService: ProfileService,\n        private withdrawalTransactionService: WithdrawalTransactionService,\n        private location: Location,\n        private router: Router,\n        private mScrollbarService: MalihuScrollbarService\n    ) {}\n\n    /**\n     *Get Profile Information\n     */\n    getProfile() {\n        this.profileService.getProfile()\n            .subscribe(\n            profile => {\n                this.profile = <any>profile;\n                let data = <any>profile;\n                this.accountAtivated = data.IsAccountActivated;\n                this.bankAccount = data.PlayerBankAccounts;\n                for(let bank of this.bankAccount) {\n                    if(!bank.Id) {\n                        this.router.navigate(['/profile']);\n                    }\n                }\n                if(this.accountAtivated === false ) {\n                    this.router.navigate(['/profile']);\n                }\n            },\n            error => this.error = <any>error);\n    }\n\n    /**\n     * Get Withdrawal Transaction\n     */\n    getWithdrawalTransaction() {\n        this.withdrawalTransactionService.getWithdrawalTransaction()\n            .subscribe(\n            withdrawalTransactions => {\n                let history = <any>withdrawalTransactions;\n                this.lockedAmount = history.TotalLockAmountAmount;\n                this.WithdrawalAmt = history.WithdrawableAmount;\n                this.withdrawalTransactions = history.Withdrawals;\n            },\n            error => this.error = <any>error);\n    }\n\n    /**\n     * @param withdrawal\n     * Make Withdrawal\n     */\n    makeWithrawal(withdrawal: Withdrawal) {\n        this.submitted = true;\n        this.submitting = true;\n        this.withdrawalService.makeWithrawal(withdrawal)\n            .subscribe(\n            success =>{\n                this.success = <any>success;\n                let data = <any>success;\n                let bodyData = data.bodyStatus;\n                this.dataError = data.Error;\n                if(bodyData == 'SUCCESS') {\n                    this.valid = true;\n                    console.log(this.valid);\n                }else {\n                    this.valid = false;\n                    this.submitting = false;\n                }\n            },\n            error => {\n                this.error = <any>error;\n                this.submitting = false;\n            });\n    }\n\n\n\n    // Go back to previous location\n    goBack() {\n        this.location.back();\n    }\n\n    // TODO: Remove this when we're done\n    get diagnostic() {\n        return JSON.stringify(this.withdraw);\n    }\n\n    ngAfterViewChecked() {\n        // console.log('afterInit casino');\n        this.mScrollbarService.initScrollbar('#scrollable', {\n            axis: 'y',\n            theme: 'dark-thick'\n        });\n    }\n\n    ngOnInit() {\n        this.getProfile();\n        this.getWithdrawalTransaction();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/withdrawal/withdrawal.component.ts","import {Injectable}                                 from '@angular/core';\nimport {Http, Response}                             from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                                 from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {Withdrawal}                                 from './withdrawal';\n\nimport {AppSettings}                                from '../app.config';\nimport  {requestOptionsProvider}                    from  '../default-request-option.service';\n\n@Injectable()\nexport class WithdrawalService {\n\n   private urlPostWalletWithdraw = AppSettings.API_ENDPOINT + 'Wallet/Withdraw'; // This is the API Endpoint for Wallet Withdrawal\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @param withdrawal\n     * @returns {Observable<Withdrawal>}\n     * POST Wallet Withdrawal\n     */\n    makeWithrawal(withdrawal: Withdrawal): Observable<Withdrawal> {\n\n        return this.http\n            .post(this.urlPostWalletWithdraw, withdrawal, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError)\n    }\n\n    /**\n     *\n     * @param res\n     * @returns {any}\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n        rejectMsg = {\n            bodyStatus: body.Status,\n            Error: body.Messages.Errors,\n        };\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        if(error.status == 403) {\n            console.log('test');\n            localStorage.removeItem('TokenId');\n            location.replace('/login');\n        }\n\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/withdrawal/withdrawal.service.ts","import { Component, NgModule, ViewChild, OnInit, ViewContainerRef, Compiler, ReflectiveInjector, Injectable, Injector, ComponentRef } from \"@angular/core\";\nimport { Observable, Subject, BehaviorSubject, ReplaySubject } from \"rxjs/Rx\";\n\n// the modalservice\n@Injectable()\nexport class ModalService {\n    private vcRef: ViewContainerRef;\n    private injector: Injector;\n    public activeInstances: number = 0;\n\n    constructor(private compiler: Compiler) {\n    }\n\n    registerViewContainerRef(vcRef: ViewContainerRef): void {\n        this.vcRef = vcRef;\n    }\n\n    registerInjector(injector: Injector): void {\n        this.injector = injector;\n    }\n\n    create<T>(module: any, component: any, parameters?: Object): Observable<ComponentRef<T>> {\n        let componentRef$ = new ReplaySubject();\n        this.compiler.compileModuleAndAllComponentsAsync(module)\n            .then(factory => {\n                let componentFactory = factory.componentFactories.filter(item => item.componentType === component)[0];\n                const childInjector = ReflectiveInjector.resolveAndCreate([], this.injector);\n                let componentRef = this.vcRef.createComponent(componentFactory, 0, childInjector);\n                Object.assign(componentRef.instance, parameters); // pass the @Input parameters to the instance\n                this.activeInstances ++;\n                componentRef.instance[\"componentIndex\"] = this.activeInstances;\n                componentRef.instance[\"destroy\"] = () => {\n                    this.activeInstances --;\n                    componentRef.destroy();\n                };\n                componentRef$.next(componentRef);\n                componentRef$.complete();\n            });\n        return <Observable<ComponentRef<T>>> componentRef$.asObservable();\n    }\n}\n\n// this is the modal-placeholder, it will container the created modals\n@Component({\n    selector: \"modal-placeholder\",\n    template: `<div #modalplaceholder></div>`\n})\nexport class ModalPlaceholderComponent implements OnInit {\n    @ViewChild(\"modalplaceholder\", {read: ViewContainerRef}) viewContainerRef;\n\n    constructor(private modalService: ModalService, private injector: Injector) {\n\n    }\n    ngOnInit(): void {\n        this.modalService.registerViewContainerRef(this.viewContainerRef);\n        this.modalService.registerInjector(this.injector);\n    }\n}\n\n// These 2 items will make sure that you can annotate\n// a modalcomponent with @Modal()\nexport class ModalContainer {\n    destroy: Function;\n    componentIndex: number;\n    closeModal(): void {\n        this.destroy();\n    }\n}\nexport function Modal() {\n    return function (target) {\n        Object.assign(target.prototype,  ModalContainer.prototype);\n    };\n}\n\n// module definition\n@NgModule({\n    declarations: [ModalPlaceholderComponent],\n    exports: [ModalPlaceholderComponent],\n    providers: [ModalService]\n})\nexport class ModalModule {\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/elements/modal/modal.module.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 618;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 618\n// module chunks = 0","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/app.module';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import {NgModule}                                 from '@angular/core';\nimport {RouterModule, Routes}                     from '@angular/router';\nimport {AuthGuard}                                from './auth/auth-guard.service'\n\nimport {RegistrationComponent}                    from './registration/registration.component';\nimport {LoginComponent}                           from './login/login.component';\nimport {ForgotPasswordComponent}                  from './forgot-password/forgot-password.component';\nimport {ForgotPasswordResetComponent}             from './forgot-password-reset/forgot-password-reset.component';\nimport {ProfileComponent}                         from './profile/profile.component';\nimport {SecurityQuestionComponent}                from './security-question/security-question.component';\nimport {CountryComponent}                         from './country/country.component';\nimport {StateProvinceComponent}                   from './state-province/state-province.component';\nimport {OnlineDepositComponent}                   from './online-deposit/online-deposit.component';\nimport {OnlineDepositBankComponent}               from './online-deposit-bank/online-deposit-bank.component';\nimport {QuickDepositComponent}                    from './quick-deposit/quick-deposit.component';\nimport {QuickDepositMethodComponent}              from './quick-deposit-method/quick-deposit-method.component';\nimport {QuickDepositPreferredBankComponent}       from './quick-deposit-preferred-bank/quick-deposit-preferred-bank.component';\nimport {QuickDepositBankAccountComponent}         from './quick-deposit-bank-account/quick-deposit-bank-account.component';\nimport {QuickDepositGenerateUdaIdComponent}       from './quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.component';\nimport {WechatComponent}                          from './wechat/wechat.component';\nimport {WithdrawalComponent}                      from './withdrawal/withdrawal.component';\nimport {WithdrawalTransactionComponent}           from './withdrawal-transaction/withdrawal-transaction.component';\nimport {BankComponent}                            from './bank/bank.component';\nimport {BankDetailComponent}                      from './bank-detail/bank-detail.component';\nimport {BankAddComponent}                         from './bank-add/bank-add.component';\nimport {DepositTransactionComponent}              from './deposit-transaction/deposit-transaction.component';\n\nimport {GamesComponent}                           from './games/games.component';\nimport {CasinoComponent}                          from './casino/casino.component';\nimport {PromotionComponent}                       from './promotion/promotion.component';\nimport {PromotionDetailComponent}                 from './promotion-detail/promotion-detail.component';\nimport {BannerComponent}                          from './banner/banner.component';\nimport {SportsComponent}                          from './sports/sports.component';\nimport {HomeComponent}                            from './home/home.component';\nimport { EmailVerificationComponent }             from './email-verification/email-verification.component';\nimport { MobileVerificationComponent }            from './mobile-verification/mobile-verification.component';\n\n\nconst routes: Routes = [\n    {path: 'login', component: LoginComponent},\n    {path: 'home', component: HomeComponent, canActivate: [AuthGuard]},\n    {path: 'registration', component: RegistrationComponent},\n    {path: 'forgotPassword', component: ForgotPasswordComponent},\n    {path: 'resetPassword', component: ForgotPasswordResetComponent},\n    {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n    {path: 'security-question', component: SecurityQuestionComponent, canActivate: [AuthGuard]},\n    {path: 'country', component: CountryComponent, canActivate: [AuthGuard]},\n    {path: 'state-province', component: StateProvinceComponent, canActivate: [AuthGuard]},\n    {path: 'online-deposit', component: OnlineDepositComponent, canActivate: [AuthGuard]},\n    {path: 'online-deposit-bank', component: OnlineDepositBankComponent, canActivate: [AuthGuard]},\n    {path: 'quick-deposit', component: QuickDepositComponent, canActivate: [AuthGuard]},\n    {path: 'quick-deposit-method', component: QuickDepositMethodComponent, canActivate: [AuthGuard]},\n    {path: 'quick-deposit-preferred-bank', component: QuickDepositPreferredBankComponent, canActivate: [AuthGuard]},\n    {path: 'quick-deposit-bank-account', component: QuickDepositBankAccountComponent, canActivate: [AuthGuard]},\n    {path: 'quick-deposit-generate-uda-id', component: QuickDepositGenerateUdaIdComponent, canActivate: [AuthGuard]},\n    {path: 'wechat', component: WechatComponent, canActivate: [AuthGuard]},\n    {path: 'withdrawal', component: WithdrawalComponent, canActivate: [AuthGuard]},\n    {path: 'withdrawal-transaction', component: WithdrawalTransactionComponent, canActivate: [AuthGuard]},\n    {path: 'bank', component: BankComponent, canActivate: [AuthGuard]},\n    {path: 'bank/:id', component: BankDetailComponent, canActivate: [AuthGuard]},\n    {path: 'bank-add', component: BankAddComponent, canActivate: [AuthGuard]},\n    {path: 'games/:category', component: GamesComponent, canActivate: [AuthGuard]},\n    //{path: 'games/:platform/:category', component: GamesComponent, canActivate: [AuthGuard]},\n    {path: 'casino', component: CasinoComponent, canActivate: [AuthGuard]},\n    {path: 'promotion', component: PromotionComponent, canActivate: [AuthGuard]},\n    {path: 'promotion/:category', component: PromotionComponent, canActivate: [AuthGuard]},\n    {path: 'details/:category/:id', component: PromotionDetailComponent, canActivate: [AuthGuard]},\n    {path: 'banner', component: BannerComponent, canActivate: [AuthGuard]},\n    {path: 'sports', component: SportsComponent, canActivate: [AuthGuard]},\n    {path: 'deposit-history', component: DepositTransactionComponent, canActivate: [AuthGuard]},\n    {path: 'email-verification', component: EmailVerificationComponent, canActivate: [AuthGuard]},\n    {path: 'mobile-verification', component: MobileVerificationComponent, canActivate: [AuthGuard]},\n    {path: '', redirectTo: '/home', pathMatch: 'full'}\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes, { \n        useHash: true,\n        // enableTracing: true\n    })],\n    exports: [RouterModule]\n})\n\nexport class AppRoutingModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app-routing.ts","import {Component, OnInit, NgZone}          from '@angular/core';\nimport {AuthService}                        from './auth/auth.service';\nimport { HeaderService }                    from './layout/header/header.service';\nimport { Router } from '@angular/router';\n\nimport {Idle, DEFAULT_INTERRUPTSOURCES} from '@ng-idle/core';\nimport {Keepalive} from '@ng-idle/keepalive'\n\ndeclare var $: any;\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\n\n\nexport class AppComponent implements OnInit {  \n\n    logged: boolean = false;\n\n    idleState;\n    idleNow = false;\n    timedOut = false;\n    lastPing?: Date = null;\n    success: any;\n    error:any;\n\n    userDetails = {\n        username: localStorage.getItem('Username')\n    };\n\n    constructor( \n        private router: Router,\n        private authService: AuthService,\n        private idle: Idle, \n        private keepalive: Keepalive,\n        private headerService:HeaderService\n    ) {  \n        if (localStorage.getItem('TokenId')) {\n            this.logged = true;\n            // sets an idle timeout of 5 seconds, for testing purposes.\n            idle.setIdle(900);\n            // sets a timeout period of 5 seconds. after 10 seconds of inactivity, the user will be considered timed out.\n            idle.setTimeout(15);\n            // sets the default interrupts, in this case, things like clicks, scrolls, touches to the document\n            idle.setInterrupts(DEFAULT_INTERRUPTSOURCES);\n\n            idle.onIdleStart.subscribe(() => {\n                this.idleState = 'You\\'ve gone idle!';\n                this.idleNow = true;\n            });\n            idle.onIdleEnd.subscribe(() => {\n                // this.idleState = 'No longer idle.';\n                this.idleNow = false;\n            });\n            idle.onTimeout.subscribe(() => {\n                this.idleState = 'Timed out!';\n                this.timedOut = true;\n                this.logout();\n            });\n            idle.onTimeoutWarning.subscribe((countdown) => this.idleState = 'You will be logged out in ' + countdown + ' seconds!');\n\n            // sets the ping interval to 15 seconds\n            keepalive.interval(15);\n            keepalive.onPing.subscribe(() => this.lastPing = new Date());\n            this.reset();\n        }\n    }\n\n    // getIpAddr() {\n    //     this.headerService.getIP()\n    //         .subscribe(\n    //             success => {\n    //                 this.success = <any>success;\n    //                 //console.log(this.success.ip);\n    //             },\n    //             error => this.error = <any>error,\n    //         )\n    // }\n\n    logout() {\n        this.authService.logout();\n        this.logged = false;\n        location.replace('/login');        \n    }\n\n    reset() {\n        this.idle.watch();\n        this.idleState = 'Started.';\n        this.timedOut = false;\n    }\n\n    reload() {\n        location.reload();\n    }\n\n    openFullScreenWindow() {\n        var fullwindow = $('.fullscreen-window');\n        fullwindow.addClass('is-open');\n    }\n\n    closeFullscreenWindow() {\n        var resizeTimer,\n            fullwindow = $('.fullscreen-window');\n        \n        fullwindow.removeClass('is-open').addClass('is-closed');\n        $('.fullscreen-container').hide().html('');\n\n        clearTimeout(resizeTimer);\n\t\tresizeTimer = setTimeout(function() {\n\t\t\t fullwindow.removeClass('is-closed');\n\t\t}, 250);\n    }\n\n    addOnlineDeposit() {\n        this.router.navigateByUrl('/online-deposit');            \n        this.closeFullscreenWindow();\n    }\n\n    addWechatDeposit() {        \n        this.router.navigateByUrl('/wechat');\n        this.closeFullscreenWindow();\n    }\n\n    ngOnInit() {\n       // this.getIpAddr();\n        if (this.logged) {\n            $('#page').addClass('is-main');\n        } else {\n            $('#page').removeClass('is-main');\n        }\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","export class BankAdd {\n    Id: string;\n    BankAccountName: string;\n    AccountName: string;\n    AccountNumber: string;\n    BranchName: string;\n    BankId: string;\n    BankCode: string;\n    City: string;\n    Province: string;\n    IsActiveAccount: string = 'true';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/bank-add/bank-add.ts","import { Component, Input, ElementRef, AfterViewInit, AfterContentInit} from '@angular/core';\ndeclare var jQuery: any;\n\n@Component({\n    selector: 'slick-slider',\n    template: `\n        <ng-content></ng-content>\n    `\n})\nexport class SlickSliderComponent implements AfterContentInit{\n    @Input() options: any;\n\n    $element: any;\n\n    defaultOptions: any = {\n        infinite: true,\n        slidesToScroll: 1,\n        // draggable: false,\n    };\n\n    constructor(private el: ElementRef) {\n    }\n\n    ngAfterContentInit() {\n        for (var key in this.options) {\n            this.defaultOptions[key] = this.options[key];\n        }\n\n        this.$element = jQuery(this.el.nativeElement).slick(this.defaultOptions);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/elements/carousel/carousel.component.ts","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n  selector: '[language-selector]',\n  templateUrl: './language.component.html',\n  styleUrls: ['./language.component.css'],\n  host: {\n    '(document:click)': 'onClick($event)',\n  },\n})\nexport class LanguageComponent implements OnInit {\n\n  showLangOptns: boolean = false;\n  langCode = !localStorage.getItem('lang') ? 'zh-hans' : localStorage.getItem('lang');\n\n  constructor(\n    private translate: TranslateService,\n    private el: ElementRef\n  ) {\n    translate.addLangs([\"en\", \"zh-hans\"]);\n    translate.setDefaultLang('en');\n\n    let browserLang = this.langCode;\n    translate.use(browserLang.match(/en|zh-hans/) ? browserLang : 'zh-hans');\n\n    translate.onLangChange.subscribe(() => {\n      console.log(translate.currentLang);\n      localStorage.setItem('lang', translate.currentLang);\n    });\n  }\n\n  toggleLangOptns() {\n    if (this.showLangOptns) {\n      this.showLangOptns = false;\n    } else {\n      this.showLangOptns = true\n    }\n  }\n\n  onClick(event) {\n    if (!this.el.nativeElement.contains(event.target)) { // or some similar check\n      this.showLangOptns = false;\n    }\n    // console.log('lang ' + this.showLangOptns);\n  }\n\n  changeLang() {\n    location.reload()\n  }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/elements/language/language.component.ts","import { Component, OnInit, ElementRef, Renderer } from '@angular/core';\n\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../auth/auth.service';\nimport { TranslateService } from '@ngx-translate/core';\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-menu',\n    templateUrl: './menu.component.html',\n    styleUrls: ['./menu.component.css'],\n    host: {\n        '(document:click)': 'onClick($event)',\n    },\n})\n\nexport class MenuComponent implements OnInit {\n\n    showNavOptns: boolean = false;\n\n    constructor(\n        private authService: AuthService,\n        private translate: TranslateService,\n        private el: ElementRef,\n        private renderer: Renderer) {\n    }\n\n    navSubLink() {\n        this.showNavOptns = true;\n        console.log('menu Sub ' + this.showNavOptns);\n    }\n\n    navLink() {\n        if (this.showNavOptns) {\n            this.showNavOptns = false;\n        }\n        console.log('menu sub link ' + this.showNavOptns);\n    }\n\n    onClick(event) {\n        if (!this.el.nativeElement.contains(event.target)) { // or some similar check\n            this.showNavOptns = false;\n            $('.c-nav').find('.is-active').removeClass('is-active');\n        }\n        console.log('menu doc ' + this.showNavOptns);\n    }\n\n    ngOnInit() {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/elements/menu/menu.component.ts","export class EmailVerification {\n    UserName: string;\n    Email: string;\n    EmailResetCode: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/email-verification/email-verification.ts","import {Component, OnInit}                      from '@angular/core';\nimport {ActivatedRoute, Params}                 from '@angular/router';\nimport {Location}                               from '@angular/common';\n\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/operator/switchMap';\n\nimport {FeaturedGames}                                  from '../featured-games/featured-games';\nimport {FeaturedGamesService}                           from '../featured-games/featured-games.service';\n\n\n@Component({\n    moduleId: module.id,\n    selector: 'app-featured-games',\n    templateUrl: 'featured-games.component.html',\n    styleUrls: ['featured-games.component.css'],\n    providers: [FeaturedGamesService]\n})\nexport class FeaturedGamesComponent implements OnInit {\n\n    games: FeaturedGames;\n    errorMessages: string;\n    success: string;\n    parameter: any;\n\n    constructor(\n        private gameService: FeaturedGamesService,\n        private route: ActivatedRoute,\n        private location: Location\n    ) {}\n\n    getGames(): void {\n            this.gameService.getGames()\n            .subscribe(\n                success =>this.games = success,\n                error => this.errorMessages = error\n            );\n    }\n\n    playGames(platform: string, category: string) {\n        this.gameService.getGamesUrl(platform, category)\n            .subscribe(\n                success => {\n                    this.success = <any>success;\n                    let body = <any>success;\n                    let url = body.Data.Url;\n                    let frame = '<iframe style=\"border:0px;width:100%;height:100%;\" src=\"' + url +'\"></iframe>';\n                    if(body.Status == 'SUCCESS') {\n                        // this.gameUrl = url;\n                        $('.fullscreen-container').show().html(frame);\n                    } else {\n                        $('.fullscreen-container').show().html('Sorry. Error loading game');\n                    }\n                },\n                error => {\n                    this.errorMessages = error;\n                    $('.fullscreen-container').show().html('Sorry. Error loading game');\n                }\n            );      \n    }\n\n    loadiframe(platformCode, gameCode) {\n        $('.fullscreen-window').addClass('is-open');\n        this.playGames(platformCode, gameCode);\n    }\n\n    ngOnInit() {\n        this.getGames();\n\n        this.route.params.subscribe(params => {\n            this.parameter = params;\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/featured-games/featured-games.component.ts","export class ResetPassword {\n    ResetCode: string;\n    Password: string;\n    ConfirmPassword: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/forgot-password-reset/forgot-password-reset.ts","export class Games {\n    id: string;\n    type: string;\n    title: string;\n    thumb_image: any;\n    games_category: string;\n    game_platform : string;\n    game_platform_code: string;\n    game_code: string;\n    is_all: boolean;\n    is_single_wallet: boolean;\n    is_home: boolean;\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/games/games.ts","import { Component, OnInit }    from '@angular/core';\nimport {TranslateService}       from '@ngx-translate/core';\n\n\n@Component({\n  selector: '[app-footer]',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent implements OnInit {\n\n    lang: string = this.translate.currentLang;\n\n  constructor(private translate:TranslateService) {\n\n  }\n\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/footer/footer.component.ts","import { Component, OnInit, NgZone, ElementRef } from '@angular/core';\nimport { SignalR, SignalRConnection, BroadcastEventListener } from 'ng2-signalr';\n\nimport { HeaderService } from './header.service';\nimport { Header } from './header';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../../login/login.service';\nimport { AuthService } from '../../auth/auth.service';\n\ndeclare var $: any;\n\n@Component({\n    selector: '[app-header]',\n    templateUrl: './header.component.html',\n    styleUrls: ['./header.component.css'],\n    providers: [LoginService, HeaderService],\n    host: {\n        '(document:click)': 'onClick($event)',\n    },\n})\n\nexport class HeaderComponent implements OnInit {\n    success: string;\n    error: string;\n    balance: any;\n    currentBal: any;\n\n    showWindowOptns: boolean = false;\n\n    constructor(private loginService: LoginService,\n        private authService: AuthService,\n        private router: Router,\n        private headerService: HeaderService,\n        private ngZone: NgZone,\n        private _signalR: SignalR,\n        private el: ElementRef\n    ){\n        this.someFunction();\n    }\n\n    logout() {\n        this.authService.logout();\n        location.replace('/login');\n\n        // Redirect the user\n        //let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : 'login';\n        //this.router.navigate([redirect]);\n    }\n\n    userDetails = {\n        username: localStorage.getItem('Username'),\n        date: new Date(),\n    };\n\n    someFunction() {\n        this._signalR.connect().then((c) => {\n\n            let onMessageSent$ = c.listenFor('myBalance');\n            onMessageSent$.subscribe(() => {\n                this.getBalance();\n            });\n\n            c.invoke('getBalance').then((data: string[]) => {\n                console.log(data);\n            });\n\n            let kickPlayer$ = c.listenFor('kickPlayer');\n            kickPlayer$.subscribe(() => {\n                alert('You have been kicked!');\n                this.logout();\n            });\n\n            let notifyPlayer$ = c.listenFor('notifyPlayer');\n            notifyPlayer$.subscribe(() => {\n                console.log('Nofify player');\n            });\n\n        });\n    }\n\n    getBalance() {\n        this.headerService.getBalance()\n            .subscribe(success => {\n                this.ngZone.runOutsideAngular(() => {\n                    this.ngZone.run(() => {\n                        this.success = <any>success;\n                        let data = <any>success;\n                        let balance = data.Data.Balance;\n                        if (data.Status == 'SUCCESS') {\n                            this.balance = balance;\n                        }\n                    });\n                });\n            },\n            error => {\n                this.error = <any>error;\n\n            })\n    }\n\n    currentBalance() {\n        this.headerService.getBalance()\n            .subscribe(success => {\n                this.ngZone.runOutsideAngular(() => {\n                    this.ngZone.run(() => {\n                        this.success = <any>success;\n                        let data = <any>success;\n                        let balance = data.Data.Balance;\n                        if (data.Status == 'SUCCESS') {\n                            this.currentBal = balance;\n                        }\n                    });\n                });\n            })\n    }\n\n    toggleWindowOptns() {\n        if (this.showWindowOptns) {\n            this.showWindowOptns = false;\n        } else {\n            this.showWindowOptns = true\n        }\n    }\n\n    onClick(event) {\n        if (!this.el.nativeElement.contains(event.target)) { // or some similar check\n            this.showWindowOptns = false;\n        }\n        // console.log('window ' + this.showWindowOptns);\n    }\n\n    ngOnInit() {\n        this.currentBalance();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/layout/header/header.component.ts","export class Login {\n    UserName: string;\n    Password: string;\n    RememberMe: boolean\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/login/login.ts","import {Injectable}                               from '@angular/core';\nimport {Headers, Http, Response, RequestOptions}  from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {QuickDepositPreferredBank}                from './quick-deposit-preferred-bank';\n\nimport {AppSettings}                              from '../app.config';\nimport  {requestOptionsProvider}                  from  '../default-request-option.service';\n\n@Injectable()\nexport class QuickDepositPreferredBankService {\n\n    private urlGetQuickDepositPreferredBank = AppSettings.API_ENDPOINT + 'Wallet/OfflineDepositBanks'; // This is the API Endpoint for getting the list for Player's Deposit Preferred Bank\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<R>}\n     * GET Security Question\n     */\n    getQuickDepositPreferredBank(): Observable<QuickDepositPreferredBank[]> {\n        return this.http\n            .get(this.urlGetQuickDepositPreferredBank, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     * @param res\n     * @returns {string{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let data = body.Data;\n        let rejectMsg: string;\n\n        if (String(body.Data) == 'null') {\n            rejectMsg = 'Status: ' + body.Status + ' Messages: ' + JSON.stringify(body.Messages.Errors); // API Response if the Status is FAILED\n        } else {\n            rejectMsg = JSON.stringify(body.Data); // API Response if the Status is SUCCESSFUL\n        }\n\n        return data;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body reponse\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit-preferred-bank/quick-deposit-preferred-bank.service.ts","export class MobileVerification {\n    UserName: string;\n    MobileResetCode: string;\n    MobileCountryCodeNumber: string;\n    MobileNumber: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/mobile-verification/mobile-verification.ts","export class OnlineDeposit {\n    BankId: string;\n    Amount: string;\n    BonusCode: string;\n    DepositPageUsed: string = 'DP';\n    Platform: string = 'DES';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/online-deposit/online-deposit.ts","export class Profile {\n  UserName: string;\n  FullName: string;\n  FirstName: string;\n  LastName: string;\n  BirthDate: string;\n  City: string;\n  StateProvinceId: string;\n  Country: string;\n  CountryCode: string;\n  Email: string;\n  SecurityQuestionId1: string;\n  SecurityQuestionAnswer1: string;\n  IsAccountActivated: string;\n  MobileNumber: string;\n  MobileCountryCodeNumber: string;\n  IsMobileVerified: string;\n  IsEmailVerified: string;\n  WebChatUserName: string;\n  QQUserName: string;\n  Id: string;\n  BankAccountName: string;\n  AccountNumber: string;\n  BranchName: string;\n  IsActiveAccount: string;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.ts","export class Promotion {\n    id: string;\n    type: string;\n    title: string;\n    thumb_image: any;\n    games_category: string;\n    game_platform : string;\n    game_platform_code: string;\n    game_code: string;\n    is_all: boolean;\n    is_single_wallet: boolean;\n    is_home: boolean;\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/promotion/promotion.ts","export class QuickDeposit {\n    Id:string;\n    PaymentMethodId: string;\n    BankAccountId: string;\n    DepositAmount: string;\n    BonusCode: string;\n    UDAId:string;\n    Platform: string = 'DES';\n    DepositPageUsed: string = 'DP';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/quick-deposit/quick-deposit.ts","export class Registration {\n    UserName: string;\n    Password: string;\n    ConfirmPassword: string;\n    MobileCountryCodeNumber: string;\n    MobileNumber: string;\n    EmailAddress: string;\n    IPAddress: string;\n    BrandCode: string;\n    LanguageCode: string;\n    Platform: string = 'DES';\n\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/registration/registration.ts","import { Directive, \n         HostListener, \n         ElementRef, \n         Renderer, \n        } from '@angular/core';\n\n@Directive({\n    selector: '[autoheight]'\n})\n\nexport class AutoHeightDirective {\n\n    constructor(\n        public el: ElementRef, \n        public renderer: Renderer\n    ) {}\n\n    changeHeight() {\n        // console.log(this.el.nativeElement.offsetHeight);\n        this.renderer.setElementAttribute(this.el.nativeElement, 'height', null);\n        this.renderer.setElementStyle(this.el.nativeElement, 'height', this.el.nativeElement.offsetHeight + 'px');        \n    }\n\n    @HostListener('window:resize', ['$event.target'])\n    onResize() {\n        this.changeHeight();\n    }\n\n    ngOnInit() {\n        this.changeHeight();\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/autoheight.directive.ts","import { Pipe, PipeTransform } from '@angular/core';\n\nimport {Games}                   from '../games/games';\n\n@Pipe({\n  name: 'gameFilter',\n  pure: false\n})\n\nexport class GameFilterPipe implements PipeTransform {\n\n  transform(items: Games[], filter: Games): any {\n      if(!items || !filter) {\n       return items;\n      }\n      //filter items array, items which match and return true will be kept, false will be filtered out\n      return items.filter((item:Games) => this.applyFilter(item, filter));\n  }\n\n  applyFilter(game:Games, filter:Games): boolean {\n      for (let field in filter) {\n          if (filter[field]) {\n              if (typeof filter[field] === 'string') {\n                  if(game[field].toLocaleLowerCase().indexOf(filter[field].toLocaleLowerCase()) === -1) {\n                      return false;\n                  }\n              }else if (typeof filter[field] === 'number') {\n                  if(game[field] !== filter[field]) {\n                      return false;\n                  }\n              }\n          }\n      }\n      return true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/game-filter.pipe.ts","import { NgModule } from '@angular/core';\n\nimport { AutoHeightDirective } from './autoheight.directive';\nimport { SlickSliderComponent } from '../elements/carousel/carousel.component';\n\n@NgModule({\n    declarations: [\n        AutoHeightDirective,\n        SlickSliderComponent\n    ],\n    exports: [\n        AutoHeightDirective,\n        SlickSliderComponent\n    ]\n})\n\nexport class SharedModule{}\n\n\n// WEBPACK FOOTER //\n// ./src/app/shared/shared.module.ts","export class Wechat {\n    Amount: string;\n    BonusCode: string;\n    DepositPageUsed: string = 'DP';\n    Platform: string = 'DES';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/wechat/wechat.ts","export class Withdrawal {\n    PlayerBankAcountId: string;\n    WithdrawAmount: string;\n    Password: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/withdrawal/withdrawal.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts","var map = {\n\t\"./af\": 463,\n\t\"./af.js\": 463,\n\t\"./ar\": 470,\n\t\"./ar-dz\": 464,\n\t\"./ar-dz.js\": 464,\n\t\"./ar-kw\": 465,\n\t\"./ar-kw.js\": 465,\n\t\"./ar-ly\": 466,\n\t\"./ar-ly.js\": 466,\n\t\"./ar-ma\": 467,\n\t\"./ar-ma.js\": 467,\n\t\"./ar-sa\": 468,\n\t\"./ar-sa.js\": 468,\n\t\"./ar-tn\": 469,\n\t\"./ar-tn.js\": 469,\n\t\"./ar.js\": 470,\n\t\"./az\": 471,\n\t\"./az.js\": 471,\n\t\"./be\": 472,\n\t\"./be.js\": 472,\n\t\"./bg\": 473,\n\t\"./bg.js\": 473,\n\t\"./bn\": 474,\n\t\"./bn.js\": 474,\n\t\"./bo\": 475,\n\t\"./bo.js\": 475,\n\t\"./br\": 476,\n\t\"./br.js\": 476,\n\t\"./bs\": 477,\n\t\"./bs.js\": 477,\n\t\"./ca\": 478,\n\t\"./ca.js\": 478,\n\t\"./cs\": 479,\n\t\"./cs.js\": 479,\n\t\"./cv\": 480,\n\t\"./cv.js\": 480,\n\t\"./cy\": 481,\n\t\"./cy.js\": 481,\n\t\"./da\": 482,\n\t\"./da.js\": 482,\n\t\"./de\": 485,\n\t\"./de-at\": 483,\n\t\"./de-at.js\": 483,\n\t\"./de-ch\": 484,\n\t\"./de-ch.js\": 484,\n\t\"./de.js\": 485,\n\t\"./dv\": 486,\n\t\"./dv.js\": 486,\n\t\"./el\": 487,\n\t\"./el.js\": 487,\n\t\"./en-au\": 488,\n\t\"./en-au.js\": 488,\n\t\"./en-ca\": 489,\n\t\"./en-ca.js\": 489,\n\t\"./en-gb\": 490,\n\t\"./en-gb.js\": 490,\n\t\"./en-ie\": 491,\n\t\"./en-ie.js\": 491,\n\t\"./en-nz\": 492,\n\t\"./en-nz.js\": 492,\n\t\"./eo\": 493,\n\t\"./eo.js\": 493,\n\t\"./es\": 495,\n\t\"./es-do\": 494,\n\t\"./es-do.js\": 494,\n\t\"./es.js\": 495,\n\t\"./et\": 496,\n\t\"./et.js\": 496,\n\t\"./eu\": 497,\n\t\"./eu.js\": 497,\n\t\"./fa\": 498,\n\t\"./fa.js\": 498,\n\t\"./fi\": 499,\n\t\"./fi.js\": 499,\n\t\"./fo\": 500,\n\t\"./fo.js\": 500,\n\t\"./fr\": 503,\n\t\"./fr-ca\": 501,\n\t\"./fr-ca.js\": 501,\n\t\"./fr-ch\": 502,\n\t\"./fr-ch.js\": 502,\n\t\"./fr.js\": 503,\n\t\"./fy\": 504,\n\t\"./fy.js\": 504,\n\t\"./gd\": 505,\n\t\"./gd.js\": 505,\n\t\"./gl\": 506,\n\t\"./gl.js\": 506,\n\t\"./gom-latn\": 507,\n\t\"./gom-latn.js\": 507,\n\t\"./he\": 508,\n\t\"./he.js\": 508,\n\t\"./hi\": 509,\n\t\"./hi.js\": 509,\n\t\"./hr\": 510,\n\t\"./hr.js\": 510,\n\t\"./hu\": 511,\n\t\"./hu.js\": 511,\n\t\"./hy-am\": 512,\n\t\"./hy-am.js\": 512,\n\t\"./id\": 513,\n\t\"./id.js\": 513,\n\t\"./is\": 514,\n\t\"./is.js\": 514,\n\t\"./it\": 515,\n\t\"./it.js\": 515,\n\t\"./ja\": 516,\n\t\"./ja.js\": 516,\n\t\"./jv\": 517,\n\t\"./jv.js\": 517,\n\t\"./ka\": 518,\n\t\"./ka.js\": 518,\n\t\"./kk\": 519,\n\t\"./kk.js\": 519,\n\t\"./km\": 520,\n\t\"./km.js\": 520,\n\t\"./kn\": 521,\n\t\"./kn.js\": 521,\n\t\"./ko\": 522,\n\t\"./ko.js\": 522,\n\t\"./ky\": 523,\n\t\"./ky.js\": 523,\n\t\"./lb\": 524,\n\t\"./lb.js\": 524,\n\t\"./lo\": 525,\n\t\"./lo.js\": 525,\n\t\"./lt\": 526,\n\t\"./lt.js\": 526,\n\t\"./lv\": 527,\n\t\"./lv.js\": 527,\n\t\"./me\": 528,\n\t\"./me.js\": 528,\n\t\"./mi\": 529,\n\t\"./mi.js\": 529,\n\t\"./mk\": 530,\n\t\"./mk.js\": 530,\n\t\"./ml\": 531,\n\t\"./ml.js\": 531,\n\t\"./mr\": 532,\n\t\"./mr.js\": 532,\n\t\"./ms\": 534,\n\t\"./ms-my\": 533,\n\t\"./ms-my.js\": 533,\n\t\"./ms.js\": 534,\n\t\"./my\": 535,\n\t\"./my.js\": 535,\n\t\"./nb\": 536,\n\t\"./nb.js\": 536,\n\t\"./ne\": 537,\n\t\"./ne.js\": 537,\n\t\"./nl\": 539,\n\t\"./nl-be\": 538,\n\t\"./nl-be.js\": 538,\n\t\"./nl.js\": 539,\n\t\"./nn\": 540,\n\t\"./nn.js\": 540,\n\t\"./pa-in\": 541,\n\t\"./pa-in.js\": 541,\n\t\"./pl\": 542,\n\t\"./pl.js\": 542,\n\t\"./pt\": 544,\n\t\"./pt-br\": 543,\n\t\"./pt-br.js\": 543,\n\t\"./pt.js\": 544,\n\t\"./ro\": 545,\n\t\"./ro.js\": 545,\n\t\"./ru\": 546,\n\t\"./ru.js\": 546,\n\t\"./sd\": 547,\n\t\"./sd.js\": 547,\n\t\"./se\": 548,\n\t\"./se.js\": 548,\n\t\"./si\": 549,\n\t\"./si.js\": 549,\n\t\"./sk\": 550,\n\t\"./sk.js\": 550,\n\t\"./sl\": 551,\n\t\"./sl.js\": 551,\n\t\"./sq\": 552,\n\t\"./sq.js\": 552,\n\t\"./sr\": 554,\n\t\"./sr-cyrl\": 553,\n\t\"./sr-cyrl.js\": 553,\n\t\"./sr.js\": 554,\n\t\"./ss\": 555,\n\t\"./ss.js\": 555,\n\t\"./sv\": 556,\n\t\"./sv.js\": 556,\n\t\"./sw\": 557,\n\t\"./sw.js\": 557,\n\t\"./ta\": 558,\n\t\"./ta.js\": 558,\n\t\"./te\": 559,\n\t\"./te.js\": 559,\n\t\"./tet\": 560,\n\t\"./tet.js\": 560,\n\t\"./th\": 561,\n\t\"./th.js\": 561,\n\t\"./tl-ph\": 562,\n\t\"./tl-ph.js\": 562,\n\t\"./tlh\": 563,\n\t\"./tlh.js\": 563,\n\t\"./tr\": 564,\n\t\"./tr.js\": 564,\n\t\"./tzl\": 565,\n\t\"./tzl.js\": 565,\n\t\"./tzm\": 567,\n\t\"./tzm-latn\": 566,\n\t\"./tzm-latn.js\": 566,\n\t\"./tzm.js\": 567,\n\t\"./uk\": 568,\n\t\"./uk.js\": 568,\n\t\"./ur\": 569,\n\t\"./ur.js\": 569,\n\t\"./uz\": 571,\n\t\"./uz-latn\": 570,\n\t\"./uz-latn.js\": 570,\n\t\"./uz.js\": 571,\n\t\"./vi\": 572,\n\t\"./vi.js\": 572,\n\t\"./x-pseudo\": 573,\n\t\"./x-pseudo.js\": 573,\n\t\"./yo\": 574,\n\t\"./yo.js\": 574,\n\t\"./zh-cn\": 575,\n\t\"./zh-cn.js\": 575,\n\t\"./zh-hk\": 576,\n\t\"./zh-hk.js\": 576,\n\t\"./zh-tw\": 577,\n\t\"./zh-tw.js\": 577\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 830;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/moment/locale ^\\.\\/.*$\n// module id = 830\n// module chunks = 0","module.exports = \"\\n.fullscreen-window {\\n    /*display: none;*/\\n    position: absolute;\\n    top: 0; right: 0; bottom: 0; left: 0;\\n    width: 100%;\\n    height: 100%;\\n    margin: auto;\\n    background: #111;\\n    z-index: 999;\\n    -webkit-transform: translate(0, -100%);\\n            transform: translate(0, -100%);\\n}\\n\\n.fullscreen-bar {\\n    padding: 10px 20px;\\n    position: fixed;\\n    top: 0; left: 0;\\n    width: 100%;\\n    height: 50px;\\n    background: #1b1b1b;\\n    z-index: 99;\\n}\\n\\n.fullscreen-container {\\n    display: none;\\n    position: absolute;\\n    top: 0; right: 0; bottom: 0; left: 0;\\n    width: 100%;\\n    height: 100%;\\n    padding-top: 50px;\\n    margin: auto;\\n}\\n\\n.fullscreen-utils {\\n    float: left;\\n}\\n\\n\\n.fullscreen-close {\\n    float: right;\\n    padding: 10px;\\n    font-size: 12px;\\n    font-weight: bold;\\n    line-height: 1;\\n    color: #999;\\n    text-transform: uppercase;  \\n    cursor: pointer;\\n}\\n\\n.fullscreen-window.is-open {\\n    -webkit-transform: translateY(0);\\n            transform: translateY(0);\\n    -webkit-animation: openwindow .3s ease-in;\\n            animation: openwindow .3s ease-in;\\n}\\n.fullscreen-window.is-closed {    \\n    -webkit-transform: translateY(-100%);    \\n            transform: translateY(-100%);\\n    -webkit-animation: closewindow .3s ease-out;\\n            animation: closewindow .3s ease-out;\\n    \\n}\\n\\n@-webkit-keyframes openwindow {\\n  0% { \\n      -webkit-transform: translate(0, -100%); \\n              transform: translate(0, -100%);\\n      opacity: 0;      \\n    }\\n  100% { \\n      -webkit-transform: translate(0, 0); \\n              transform: translate(0, 0); \\n      opacity: 1;\\n    }\\n}\\n\\n@keyframes openwindow {\\n  0% { \\n      -webkit-transform: translate(0, -100%); \\n              transform: translate(0, -100%);\\n      opacity: 0;      \\n    }\\n  100% { \\n      -webkit-transform: translate(0, 0); \\n              transform: translate(0, 0); \\n      opacity: 1;\\n    }\\n}\\n\\n@-webkit-keyframes closewindow {\\n  0% { -webkit-transform: translate(0, 0); transform: translate(0, 0); opacity: 1; }\\n  100% { -webkit-transform: translate(0, -100%); transform: translate(0, -100%); opacity: 0; }\\n}\\n\\n@keyframes closewindow {\\n  0% { -webkit-transform: translate(0, 0); transform: translate(0, 0); opacity: 1; }\\n  100% { -webkit-transform: translate(0, -100%); transform: translate(0, -100%); opacity: 0; }\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 845\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/bank-add/bank-add.component.css\n// module id = 846\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/bank-detail/bank-detail.component.css\n// module id = 847\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/bank/bank.component.css\n// module id = 848\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/banner/banner.component.css\n// module id = 849\n// module chunks = 0","module.exports = \".p-casino {\\n\\n}\\n\\n.p-casino__list {\\n    padding: 0;\\n    overflow: hidden;\\n}\\n.p-casino__list > li {\\n        float: left;\\n        width: 33.333%\\n}\\n\\n.c-block--casino {\\n    min-height: 250px;\\n    padding: 20px;\\n}\\n.c-block--casino .c-block__logo {\\n        margin-bottom: 1rem;\\n}\\n.c-block--casino .c-block__logo img {\\n        max-width: 200px;\\n}\\n.c-block--casino .c-block__text {\\n        font-family: \\\"Lasiver Bold\\\", Helvetica, Arial, sans-serif ;\\n        text-transform: uppercase;\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/casino/casino.component.css\n// module id = 850\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country/country.component.css\n// module id = 851\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/deposit-transaction/deposit-transaction.component.css\n// module id = 852\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/elements/language/language.component.css\n// module id = 853\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/elements/menu/menu.component.css\n// module id = 854\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/email-verification/email-verification.component.css\n// module id = 855\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/featured-games/featured-games.component.css\n// module id = 856\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forgot-password-reset/forgot-password-reset.component.css\n// module id = 857\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forgot-password/forgot-password.component.css\n// module id = 858\n// module chunks = 0","module.exports = \"/*:host {\\n    overflow: hidden;\\n    overflow-y: auto;\\n    position: relative;\\n}\\n.scrollable-content {\\n    top: 0;\\n    left: 0;\\n    width: 100%;\\n    height: 100%;\\n    position: absolute;\\n}\\n.total-padding {\\n    width: 1px;\\n    opacity: 0;\\n}\\n*/\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/games/games.component.css\n// module id = 859\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.css\n// module id = 860\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/footer/footer.component.css\n// module id = 861\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/header/header.component.css\n// module id = 862\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mobile-verification/mobile-verification.component.css\n// module id = 863\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/online-deposit-bank/online-deposit-bank.component.css\n// module id = 864\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/online-deposit/online-deposit.component.css\n// module id = 865\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.css\n// module id = 866\n// module chunks = 0","module.exports = \"\\n\\n/*.promo-detail .c-panel__body__wrapper {\\n    position: relative;       \\n}\\n.promo-detail [class^=\\\"col-md-\\\"] {\\n    float: left;\\n}\\n.promo-detail .col-md-8 {\\n    width: 60%;\\n    padding-right: 20px;\\n}\\n\\n.promo-detail .col-md-4 {\\n    width: 40%;\\n}\\n\\n.promo__title {\\n    text-transform: uppercase;\\n    padding: 20px;\\n    margin-bottom: 2rem;\\n    background: rgba(0,0,0, .8);\\n}\\n*/\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/promotion-detail/promotion-detail.component.css\n// module id = 867\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/promotion/promotion.component.css\n// module id = 868\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit-bank-account/quick-deposit-bank-account.component.css\n// module id = 869\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.component.css\n// module id = 870\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit-method/quick-deposit-method.component.css\n// module id = 871\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit-preferred-bank/quick-deposit-preferred-bank.component.css\n// module id = 872\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit/quick-deposit.component.css\n// module id = 873\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration/registration.component.css\n// module id = 874\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/security-question/security-question.component.css\n// module id = 875\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sports/sports.component.css\n// module id = 876\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/state-province/state-province.component.css\n// module id = 877\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/wechat/wechat.component.css\n// module id = 878\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/withdrawal-transaction/withdrawal-transaction.component.css\n// module id = 879\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/withdrawal/withdrawal.component.css\n// module id = 880\n// module chunks = 0","module.exports = \"\\n<div class=\\\"l-page__container g-grid\\\" *ngIf=\\\"authService.tokenId\\\">\\n\\n    <header app-header class=\\\"l-header\\\"></header>\\n    \\n    <div class=\\\"l-roller\\\">\\n        <div class=\\\"c-newstream\\\">\\n            <div class=\\\"c-newstream__wrapper\\\">\\n                <span>1 You spin me right round, baby. Like a record, baby.</span>\\n                <span>2 You spin me right round, baby. Like a record, baby.</span>\\n                <span>3 You spin me right round, baby. Like a record, baby.</span>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"o-divider o-divider--vertrical\\\"></div>\\n\\n        <div language-selector></div>\\n\\n    </div>\\n\\n    <div class=\\\"l-sidebar\\\">\\n\\n        <div class=\\\"l-sidebar__nav\\\">\\n            <app-menu></app-menu>\\n        </div>\\n\\n    </div>\\n\\n\\t<div class=\\\"l-main\\\">\\n\\t\\t<div class=\\\"l-main__container\\\">\\n            \\n            <router-outlet></router-outlet>\\n\\n            <!--<router-outlet name=\\\"aux\\\"></router-outlet>-->\\n\\n\\t\\t</div>\\n\\t</div>\\n\\n    <footer app-footer class=\\\"l-footer\\\"></footer>\\n\\n</div>\\n\\n<div class=\\\"c-dialog\\\" *ngIf=\\\"idleNow\\\">\\n    <p><strong>{{idleState}}</strong></p>\\n    <p *ngIf=\\\"lastPing\\\"><small>Last active <strong>{{lastPing | amTimeAgo}}</strong></small></p>\\n    <!--<button (click)=\\\"reset()\\\" *ngIf=\\\"timedOut\\\" class=\\\"o-buttton o-button--action o-button--tiny\\\">Restart</button>-->\\n</div>\\n\\n<div class=\\\"fullscreen-window\\\">\\n    <div class=\\\"fullscreen-bar\\\">\\n        <div class=\\\"fullscreen-utils\\\">\\n            <button class=\\\"o-button o-button--tiny\\\"><strong>{{userDetails.username}}</strong></button>\\n            <button (click)=\\\"addOnlineDeposit()\\\" class=\\\"o-button o-button--action o-button--tiny\\\">Online Deposit</button>\\n            <button (click)=\\\"addWechatDeposit()\\\" class=\\\"o-button o-button--action o-button--tiny\\\">WeChat Deposit</button>\\n        </div>\\n        <div class=\\\"fullscreen-close\\\" (click)=\\\"closeFullscreenWindow()\\\"><i class=\\\"icon icon-cancel\\\"></i> Close</div>\\n    </div>\\n    <div class=\\\"loader align-center\\\"> \\n        <div class=\\\"spinner\\\"></div>\\n        <div>{{ 'Loading Game...' }}</div>\\n    </div>\\n    <div class=\\\"fullscreen-container\\\"></div>    \\n</div>\\n\\n<router-outlet *ngIf=\\\"!authService.tokenId\\\"></router-outlet>\\n\\n<modal-placeholder></modal-placeholder>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 883\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!bankAdd\\\">\\n    <div class=\\\"spinner\\\"></div>\\n    <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div *ngIf=\\\"success\\\" class=\\\"c-alert hidden\\\">\\n    <div *ngIf=\\\"valid\\\" class=\\\"c-alert__wrapper align-center\\\">\\n        <h4  class=\\\"c-alert__title\\\">\\n        <i class=\\\"icon icon-info-circled\\\"></i> {{ 'BANKACCOUNTS.Success' | translate }}\\n        </h4>\\n        <p class=\\\"c-alert__desc\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eligendi nam nemo, quisquam praesentium adipisci, quia ratione sunt! Placeat earum eius impedit nulla recusandae maxime deleniti. Possimus ab rem doloremque praesentium!</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"grid c-article\\\" *ngIf=\\\"bankAdd\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col--xs-12\\\">\\n\\n            <div class=\\\"c-article__header\\\">\\n              <h2 class=\\\"c-article__title\\\">{{ 'BANKACCOUNTS.AddBankAccount' | translate }}</h2>\\n              <p class=\\\"c-article__desc\\\">{{ 'BANKACCOUNTS.AddNewBankAccountDetails' | translate }}</p>\\n            </div>\\n\\n            <div *ngIf=\\\"success && !valid \\\" class=\\\"c-alert c-alert--inline hidden\\\" style=\\\"display: block\\\">\\n                <div *ngFor=\\\"let error of dataError\\\">\\n                    <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n                </div>\\n            </div>\\n\\n            <form name=\\\"bankAdd\\\" autocomplete=\\\"off\\\" novalidate #BankAddForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\">{{ 'BANKACCOUNTS.AccountName' | translate }}</label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"accountName\\\"\\n                          required disabled\\n                          name=\\\"accountName\\\" [(ngModel)]=\\\"bankAdd.BankAccountName\\\"\\n                          placeholder=\\\"{{ 'BANKACCOUNTS.AccountName' | translate }}\\\" #accountName=\\\"ngModel\\\">\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\">{{ 'BANKACCOUNTS.AccountNumber' | translate }}</label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"addAccountNumber\\\"\\n                          required\\n                          name=\\\"addAccountNumber\\\" [(ngModel)]=\\\"bankAdd.AccountNumber\\\" [value]=\\\" bankAdd.AccountNumber \\\"\\n                          placeholder=\\\"{{ 'BANKACCOUNTS.AccountNumber' | translate }}\\\" #addAccountNumber=\\\"ngModel\\\">\\n                    <div [hidden]=\\\"addAccountNumber.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                        {{ 'BANKACCOUNTS.ErrorAccountNumber' | translate }}\\n                    </div>\\n                </div>\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"preferredBanks\\\">{{ 'BANKACCOUNTS.PreferredBanks' | translate }}</label>\\n                    <div class=\\\"c-form__select__wrapper\\\">\\n                        <select class=\\\"c-form__input c-form__select\\\" id=\\\"preferredBanks\\\"\\n                                #preferredBanks=\\\"ngModel\\\" name=\\\"preferredBanks\\\"\\n                                [(ngModel)]=\\\"bankAdd.BankId\\\">\\n                            <option disabled value=\\\"0\\\">{{ 'BANKACCOUNTS.ChooseYourBank' | translate }}</option>\\n                            <option *ngFor=\\\"let quickDepositPreferredBank of quickDepositPreferredBanks\\\"\\n                                    [ngValue]=\\\"quickDepositPreferredBank.Id\\\">\\n                                {{ quickDepositPreferredBank.BankName }}\\n                            </option>\\n                        </select>\\n                        <div [hidden]=\\\"preferredBanks.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'BANKACCOUNTS.ErrorPreferredBanks' | translate }}\\n                        </div>\\n                    </div>\\n                </div>\\n\\n              <div class=\\\"c-form__group\\\">\\n                <label class=\\\"c-form__label invisible\\\">{{ 'BANKACCOUNTS.BranchName' | translate }}</label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"addBranchName\\\"\\n                      required\\n                      name=\\\"addBranchName\\\" [(ngModel)]=\\\"bankAdd.BranchName\\\" [value]=\\\" bankAdd.BranchName \\\"\\n                      placeholder=\\\"{{ 'BANKACCOUNTS.BranchName' | translate }}\\\" #addBranchName=\\\"ngModel\\\">\\n                  <div [hidden]=\\\"addBranchName.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'BANKACCOUNTS.ErrorBranchName' | translate }}\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"c-form__group\\\">\\n                <label class=\\\"c-form__label invisible\\\">{{ 'BANKACCOUNTS.City' | translate }}</label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"addCity\\\"\\n                      required\\n                      name=\\\"addCity\\\" [(ngModel)]=\\\"bankAdd.City\\\" [value]=\\\" bankAdd.City \\\"\\n                      placeholder=\\\"{{ 'BANKACCOUNTS.City' | translate }}\\\" #addCity=\\\"ngModel\\\">\\n                  <div [hidden]=\\\"addCity.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'BANKACCOUNTS.ErrorCity' | translate }}\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"c-form__group\\\">\\n                <label class=\\\"c-form__label invisible\\\">{{ 'BANKACCOUNTS.Province' | translate }}</label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"addProvince\\\"\\n                      required\\n                      name=\\\"addProvince\\\" [(ngModel)]=\\\"bankAdd.Province\\\" [value]=\\\" bankAdd.Province \\\"\\n                      placeholder=\\\"{{ 'BANKACCOUNTS.Province' | translate }}\\\" #addProvince=\\\"ngModel\\\">\\n                  <div [hidden]=\\\"addProvince.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                      {{ 'BANKACCOUNTS.ErrorProvince' | translate }}\\n                  </div>\\n              </div>\\n\\n              <div class=\\\"c-form__group\\\">\\n                <button class=\\\"o-button\\\" (click)=\\\"goBack()\\\">{{ 'BANKACCOUNTS.Cancel' | translate }}</button>\\n                <button type=\\\"submit\\\" (click)=\\\"create(bankAdd)\\\" class=\\\"o-button o-button--action\\\">\\n                    <span *ngIf=\\\"!submitting\\\">{{ 'BANKACCOUNTS.Add' | translate }}</span>\\n                    <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                </button>\\n              </div>\\n\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/bank-add/bank-add.component.html\n// module id = 884\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!bankDetails\\\">\\n    <div class=\\\"spinner\\\"></div>\\n    <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div class=\\\"c-alert hidden\\\" style=\\\"display: none\\\">\\n    <div class=\\\"c-alert__wrapper align-center\\\">\\n        <h4 class=\\\"c-alert__title\\\">\\n        <i class=\\\"icon icon-info-circled\\\"></i> Success\\n        </h4>\\n        <p class=\\\"c-alert__desc\\\">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Eligendi nam nemo, quisquam praesentium adipisci, quia ratione sunt! Placeat earum eius impedit nulla recusandae maxime deleniti. Possimus ab rem doloremque praesentium!</p>\\n        {{ errorMessage | json}} {{successMessage | json}}\\n    </div>\\n</div>\\n\\n<div id=\\\"bankDetailPage\\\" class=\\\"grid c-article\\\" *ngIf=\\\"bankDetails\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col--xs-12\\\" id=\\\"scrollable\\\" autoheight>\\n\\n            <div class=\\\"c-article__header\\\">\\n              <h2 class=\\\"c-article__title\\\">Edit Bank Account</h2>\\n              <p class=\\\"c-article__desc\\\">Modify existing bank account details.</p>\\n            </div>\\n\\n            <form name=\\\"bankDetails\\\" autocomplete=\\\"off\\\" novalidate #BankDetailForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n\\n                <div class=\\\"c-form__group\\\">\\n                  <label for=\\\"status\\\" class=\\\"c-form__label invisible\\\">Status</label>\\n                  <div class=\\\"c-form__select__wrapper\\\">\\n                    <select class=\\\"c-form__input c-form__select\\\" id=\\\"status\\\" name=\\\"status\\\" [(ngModel)]=\\\"bankDetails.IsActiveAccount\\\">\\n                      <option value=\\\"\\\" disabled>Choose your Bank Status</option>\\n                      <option value=\\\"true\\\">Active</option>\\n                      <option value=\\\"false\\\">Inactive</option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                  <label for=\\\"accountName\\\" class=\\\"c-form__label invisible\\\">AccountName</label>\\n                  <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"accountName\\\"\\n                        required disabled\\n                        name=\\\"username\\\" [(ngModel)]=\\\"bankDetails.AccountName\\\" [value]=\\\" bankDetails.AccountName \\\"\\n                        placeholder=\\\"* Account Name\\\" #accountName=\\\"ngModel\\\">\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                  <label for=\\\"AccountNumber\\\" class=\\\"c-form__label invisible\\\">Account Number</label>\\n                  <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"AccountNumber\\\"\\n                        required\\n                        name=\\\"AccountNumber\\\" [(ngModel)]=\\\"bankDetails.AccountNumber\\\" [value]=\\\" bankDetails.AccountNumber \\\"\\n                        placeholder=\\\"* Account Number\\\" #AccountNumber=\\\"ngModel\\\">\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                  <label for=\\\"preferredBanks\\\" class=\\\"c-form__label invisible\\\">Preferred Banks</label>\\n\\n                  <div class=\\\"c-form__select__wrapper\\\">\\n                    <select  class=\\\"c-form__input c-form__select\\\" id=\\\"preferredBanks\\\" name=\\\"preferredBanks\\\" [(ngModel)]=\\\"bankDetails.BankId\\\">\\n                      <option value=\\\"\\\" disabled>Choose your Bank</option>\\n                      <option *ngFor=\\\"let quickDepositPreferredBank of quickDepositPreferredBanks\\\"\\n                              [ngValue]=\\\"quickDepositPreferredBank.Id\\\">\\n                        {{ quickDepositPreferredBank.BankName }}\\n                      </option>\\n                    </select>\\n                  </div>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                  <label for=\\\"branchName\\\" class=\\\"c-form__label invisible\\\">BranchName</label>\\n                  <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"branchName\\\"\\n                        required\\n                        name=\\\"branchName\\\" [(ngModel)]=\\\"bankDetails.BranchName\\\" [value]=\\\" bankDetails.BranchName \\\"\\n                        placeholder=\\\"* Branch Name\\\" #branchName=\\\"ngModel\\\">\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                  <label for=\\\"city\\\" class=\\\"c-form__label invisible\\\">City</label>\\n                  <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"city\\\"\\n                        required\\n                        name=\\\"city\\\" [(ngModel)]=\\\"bankDetails.City\\\" [value]=\\\" bankDetails.City \\\"\\n                        placeholder=\\\"* City\\\" #city=\\\"ngModel\\\">\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                  <label for=\\\"province\\\" class=\\\"c-form__label invisible\\\">Province</label>\\n                  <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"province\\\"\\n                        required\\n                        name=\\\"province\\\" [(ngModel)]=\\\"bankDetails.Province\\\" [value]=\\\" bankDetails.Province \\\"\\n                        placeholder=\\\"* Province\\\" #province=\\\"ngModel\\\">\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                  <button class=\\\"o-button\\\" (click)=\\\"goBack()\\\">Back</button>\\n                  <button type=\\\"submit\\\" (click)=\\\"bankUpdate(bankDetails)\\\" class=\\\"o-button o-button--action\\\"\\n                          [disabled]=\\\"!BankDetailForm.form.valid\\\">Save</button>\\n                </div>\\n                \\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/bank-detail/bank-detail.component.html\n// module id = 885\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!profiles\\\"> \\n  <div class=\\\"spinner\\\"></div>\\n  <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div class=\\\"grid c-article\\\" *ngIf=\\\"profiles\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col--xs-12\\\">\\n\\n            <div class=\\\"c-article__header\\\">\\n              <h2 class=\\\"c-article__title\\\">{{ 'BANKACCOUNTS.BankAccounts' | translate }}</h2>\\n              <p class=\\\"c-article__desc\\\">{{ 'BANKACCOUNTS.AddAsMyWithdrawal' | translate }}</p>\\n            </div>\\n\\n            <table class=\\\"c-table\\\">\\n                <thead>\\n                    <tr>\\n                        <th>{{ 'BANKACCOUNTS.AccountName' | translate }}</th>\\n                        <th>{{ 'BANKACCOUNTS.AccountNo' | translate }}</th>\\n                        <th>{{ 'BANKACCOUNTS.BankName' | translate }}</th>\\n                        <th>{{ 'BANKACCOUNTS.Status' | translate }}</th>\\n                        <th>{{ 'BANKACCOUNTS.Edit' | translate }}</th>\\n                    </tr>\\n                </thead>\\n                <tbody id=\\\"list-withdrawal-transaction\\\">\\n                    <tr *ngFor=\\\"let profile of profiles.PlayerBankAccounts\\\">\\n                        <td>{{ profile.BankAccountName }}</td>\\n                        <td>{{ profile.AccountNumber }}</td>\\n                        <td>{{ profile.BranchName }}</td>\\n                        <td>{{ profile.IsActiveAccount === true ? 'Active' : 'Inactive'}}</td>\\n                        <td>\\n                            <div class=\\\"c-table__action\\\" routerLink=\\\"/bank/{{profile.Id}}\\\">\\n                                <i class=\\\"icon icon-pencil\\\"></i>\\n                            </div>\\n                        </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n\\n            <hr/>\\n            <button routerLink=\\\"/bank-add\\\" class=\\\"o-button o-button--action\\\">\\n                {{ 'BANKACCOUNTS.AddBankAccount' | translate }}\\n            </button>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/bank/bank.component.html\n// module id = 886\n// module chunks = 0","module.exports = \"\\n<div *ngIf=\\\"banner\\\" class=\\\"c-carousel c-carousel--single grid grid--container grid--no-gutters js-carousel\\\">\\n    <div class=\\\"row row--no-gutters\\\">\\n    <!--<slick-slider>-->\\n    <div *ngFor=\\\"let game of banner | slice:1:3\\\" class=\\\"c-carousel__item col col--sm-12 col--no-gutters\\\">\\n        <div class=\\\"c-block c-block--banner\\\" [ngStyle]=\\\"{'background-image': 'url(' + game.thumb_image.src + ')'}\\\">   \\n            <div class=\\\"c-block__content\\\">\\n                <h1>{{ game.title }}</h1>                        \\n                <a (click)=\\\"loadiframe(game.game_platform_code, game.game_code)\\\" class=\\\"o-button o-button--action\\\">\\n                     {{ 'CASINO.PlayNow' | translate }}\\n                </a>\\n            </div>\\n            \\n        </div>\\n    </div>\\n    <!--</slick-slider>-->\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/banner/banner.component.html\n// module id = 887\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!casinos\\\">\\n  <div class=\\\"spinner\\\"></div>\\n  <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div class=\\\"c-panel\\\" *ngIf=\\\"casinos\\\">\\n  <div class=\\\"c-panel__header\\\">            \\n        <div class=\\\"c-panel__title\\\">\\n            <span>{{ 'CASINO.Casino' | translate }}</span>\\n        </div> \\n    </div>\\n  <div class=\\\"c-panel__body\\\" autoheight>\\n    <div id=\\\"scrollable\\\" class=\\\"c-panel__body__wrapper\\\" autoheight>         \\n      <ul class=\\\"c-panel__list c-list row\\\">\\n        <li *ngFor=\\\"let casino of casinos\\\" class=\\\"col col--xs-4\\\">\\n          <div class=\\\"c-block c-block--casino\\\" [ngStyle]=\\\"{'background-image': 'url(' + casino.thumb_image.src + ')'}\\\">\\n            <div class=\\\"c-block__logo\\\">\\n              <img src=\\\"{{ casino.logo.src }}\\\" alt=\\\"{{ casino.logo.alt }}\\\">\\n            </div>\\n            <div class=\\\"c-block__text\\\">\\n              <p>{{ casino.title }}</p>\\n            </div>\\n            <a (click)=\\\"loadiframe(casino.game_platform_code, casino.game_code)\\\" class=\\\"o-button o-button--action\\\">{{ 'BANNER.PlayNow' | translate }}</a>\\n          </div>\\n        </li>\\n      </ul>\\n    </div>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/casino/casino.component.html\n// module id = 888\n// module chunks = 0","module.exports = \"<section *ngIf=\\\"errorMessage\\\">\\n            <pre>\\n                 {{ errorMessage }}\\n            </pre>\\n\\n</section>\\n\\n<div class=\\\"container\\\">\\n    <h1>Country Form </h1>\\n    <form name=\\\"Countries\\\" #CountriesForm=\\\"ngForm\\\">\\n        <section *ngIf=\\\"countries\\\">\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Country\\\">Country</label>\\n                <select name=\\\"state\\\" ngModel>\\n                    <option value=\\\"\\\" disabled>Choose your Country</option>\\n                    <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.CountryCode\\\">\\n                        {{ country.CountryName }}\\n                    </option>\\n                </select>\\n            </div>\\n\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Mobile Country Code\\\">Mobile Country Code</label>\\n                <select name=\\\"countryCode\\\" ngModel>\\n                    <option value=\\\"\\\" disabled>Choose your Mobile Country Code </option>\\n                    <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.CountryCode\\\" >\\n                        {{ country.CountryCallCode}}\\n                    </option>\\n\\n                </select>\\n            </div>\\n\\n        </section>\\n    </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/country/country.component.html\n// module id = 889\n// module chunks = 0","import {BrowserModule}                                              from '@angular/platform-browser';\nimport {NgModule}                                                   from '@angular/core';\nimport {CommonModule}                                               from '@angular/common';\nimport {FormsModule}                                                from '@angular/forms';\nimport {HttpModule, Http}                                           from '@angular/http';\nimport {TranslateModule, TranslateLoader}                           from '@ngx-translate/core';\nimport {TranslateHttpLoader}                                        from '@ngx-translate/http-loader';\nimport {SignalRModule, SignalRConfiguration}                        from 'ng2-signalr';\n\nimport {AppRoutingModule}                                           from './app-routing';\n\nimport {AppComponent}                                               from './app.component';\nimport {RegistrationComponent}                                      from './registration/registration.component';\nimport {LoginComponent}                                             from './login/login.component';\nimport {ForgotPasswordComponent}                                    from './forgot-password/forgot-password.component';\nimport {ForgotPasswordResetComponent}                               from './forgot-password-reset/forgot-password-reset.component';\nimport {ProfileComponent}                                           from './profile/profile.component';\nimport {SecurityQuestionComponent}                                  from './security-question/security-question.component';\nimport {CountryComponent}                                           from './country/country.component';\nimport {StateProvinceComponent}                                     from './state-province/state-province.component';\nimport {OnlineDepositComponent}                                     from './online-deposit/online-deposit.component';\nimport {OnlineDepositBankComponent}                                 from './online-deposit-bank/online-deposit-bank.component';\nimport {QuickDepositComponent}                                      from './quick-deposit/quick-deposit.component';\nimport {QuickDepositMethodComponent}                                from './quick-deposit-method/quick-deposit-method.component';\nimport {QuickDepositPreferredBankComponent}                         from './quick-deposit-preferred-bank/quick-deposit-preferred-bank.component';\nimport {QuickDepositBankAccountComponent}                           from './quick-deposit-bank-account/quick-deposit-bank-account.component';\nimport {QuickDepositGenerateUdaIdComponent}                         from './quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.component';\nimport {WechatComponent}                                            from './wechat/wechat.component';\nimport {WithdrawalComponent}                                        from './withdrawal/withdrawal.component';\nimport {WithdrawalTransactionComponent}                             from './withdrawal-transaction/withdrawal-transaction.component';\nimport {BankComponent}                                              from './bank/bank.component';\nimport {BankDetailComponent}                                        from './bank-detail/bank-detail.component';\nimport {BankAddComponent}                                           from './bank-add/bank-add.component';\nimport {DepositTransactionComponent}                                from './deposit-transaction/deposit-transaction.component';\nimport { EmailVerificationComponent }                               from './email-verification/email-verification.component';\nimport { MobileVerificationComponent }                              from './mobile-verification/mobile-verification.component';\n\n\nimport {GamesComponent}                                             from './games/games.component';\n\nimport {CasinoComponent}                                            from './casino/casino.component';\nimport {PromotionComponent}                                         from './promotion/promotion.component';\nimport {PromotionDetailComponent}                                   from './promotion-detail/promotion-detail.component';\nimport {BannerComponent}                                            from './banner/banner.component';\nimport {SportsComponent}                                            from './sports/sports.component';\nimport { HomeComponent }                                            from './home/home.component';\nimport { FeaturedGamesComponent }                                   from './featured-games/featured-games.component';\n\nimport {RegistrationService}                                        from './registration/registration.service';\nimport {LoginService}                                               from './login/login.service';\nimport {ForgotPasswordService}                                      from './forgot-password/forgot-password.service';\nimport {ForgotPasswordResetService}                                 from './forgot-password-reset/forgot-password-reset.service';\nimport {ProfileService}                                             from './profile/profile.service';\nimport {SecurityQuestionService}                                    from './security-question/security-question.service';\nimport {CountryService}                                             from './country/country.service';\nimport {StateProvinceService}                                       from './state-province/state-province.service';\nimport {OnlineDepositService}                                       from './online-deposit/online-deposit.service';\nimport {OnlineDepositBankService}                                   from './online-deposit-bank/online-deposit-bank.service';\nimport {QuickDepositService}                                        from './quick-deposit/quick-deposit.service';\nimport {QuickDepositMethodService}                                  from './quick-deposit-method/quick-deposit-method.service';\nimport {QuickDepositPreferredBankService}                           from './quick-deposit-preferred-bank/quick-deposit-preferred-bank.service';\nimport {QuickDepositBankAccountService}                             from './quick-deposit-bank-account/quick-deposit-bank-account.service';\nimport {QuickDepositGenerateUdaIdService}                           from './quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.service';\nimport {WechatService}                                              from './wechat/wechat.service';\nimport {WithdrawalService}                                          from './withdrawal/withdrawal.service';\nimport {WithdrawalTransactionService}                               from './withdrawal-transaction/withdrawal-transaction.service';\nimport {BankDetailService}                                          from './bank-detail/bank-detail.service';\nimport {BankAddService}                                             from './bank-add/bank-add.service';\nimport {DepositTransactionService}                                  from './deposit-transaction/deposit-transaction.service';\nimport {HeaderService}                                              from './layout/header/header.service';\nimport {EmailVerificationService}                                   from './email-verification/email-verification.service';\nimport {MobileVerificationService}                                  from './mobile-verification/mobile-verification.service';\nimport {GamesService}                                               from './games/games.service';\nimport {CasinoService}                                              from './casino/casino.service';\nimport {PromotionService}                                           from './promotion/promotion.service';\nimport {PromotionDetailService}                                     from './promotion-detail/promotion-detail.service';\nimport {BannerService}                                              from './banner/banner.service';\nimport {SportsService}                                              from './sports/sports.service';\nimport {FeaturedGamesService}                                       from './featured-games/featured-games.service';\n\nimport {requestOptionsProvider}                                     from './default-request-option.service';\nimport {AuthService}                                                from './auth/auth.service';\nimport {AuthGuard}                                                  from './auth/auth-guard.service';\n\n// import {DefaultLayoutComponent}                                  from './layout/default.component';\nimport {HeaderComponent}                                            from './layout/header/header.component';\nimport {FooterComponent}                                            from './layout/footer/footer.component';\n\nimport {MenuComponent}                                              from './elements/menu/menu.component';\nimport {LanguageComponent}                                          from './elements/language/language.component';\n\nimport {ModalModule}                                                from './elements/modal/modal.module';\nimport {SuccessModalComponent}                                      from \"./elements/modal/success-modal.component\";\n\n// Shared\nimport {SharedModule}                                               from './shared/shared.module';\n\n// Vendors\nimport { MalihuScrollbarModule, MalihuScrollbarService } from 'ngx-malihu-scrollbar';\nimport { GameFilterPipe } from './shared/game-filter.pipe';\nimport { MyDatePickerModule } from 'mydatepicker';\nimport { NgIdleKeepaliveModule } from '@ng-idle/keepalive'; // this includes the core NgIdleModule but includes keepalive providers for easy wireup\nimport { MomentModule } from 'angular2-moment'; // optional, provides moment-style pipes for date formatting\n\nexport function createTranslateLoader(http: Http) {\n    return new TranslateHttpLoader(http, './assets/i18n/', '.json');\n}\n\n// v2.0.0\nexport function createConfig(): SignalRConfiguration {\n    const c = new SignalRConfiguration();\n    c.hubName = 'walletBalance';\n    c.url = 'http://uat.beachheadsolutionsinc.com/';\n    //c.jsonp = true;\n    //c.qs = 'myBalance';\n    //c.createHubProxy('walletBalance');\n    c.logging = true;\n    //console.log(c);\n    //c.qs = { SignalRTokenId: localStorage.getItem('SignalRTokenId') };\n\n    return c;\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        RegistrationComponent,\n        LoginComponent,\n        ForgotPasswordComponent,\n        ForgotPasswordResetComponent,\n        ProfileComponent,\n        SecurityQuestionComponent,\n        CountryComponent,\n        StateProvinceComponent,\n        OnlineDepositComponent,\n        OnlineDepositBankComponent,\n        QuickDepositComponent,\n        QuickDepositMethodComponent,\n        QuickDepositPreferredBankComponent,\n        QuickDepositBankAccountComponent,\n        QuickDepositGenerateUdaIdComponent,\n        WechatComponent,\n        WithdrawalComponent,\n        WithdrawalTransactionComponent,\n        BankComponent,\n        BankDetailComponent,\n        GamesComponent,\n        CasinoComponent,\n        PromotionComponent,\n        BankAddComponent,\n        PromotionDetailComponent,\n        MenuComponent,\n        BannerComponent,\n        SportsComponent,\n        HeaderComponent,\n        FooterComponent,\n        LanguageComponent,\n        HomeComponent,\n        FeaturedGamesComponent,\n        SuccessModalComponent,\n        DepositTransactionComponent,\n        EmailVerificationComponent,\n        MobileVerificationComponent,\n        GameFilterPipe\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpModule,\n        TranslateModule.forRoot({\n            loader: {\n                provide: TranslateLoader,\n                useFactory: (createTranslateLoader),\n                deps: [Http]\n            }\n        }),\n        SignalRModule.forRoot(createConfig),\n        CommonModule,\n        ModalModule,\n        MalihuScrollbarModule.forRoot(),\n        SharedModule,\n        AppRoutingModule,\n        MyDatePickerModule,\n        MomentModule,\n        NgIdleKeepaliveModule.forRoot()\n    ],\n    providers: [\n        RegistrationService,\n        LoginService,\n        ForgotPasswordService,\n        ForgotPasswordResetService,\n        ProfileService,\n        SecurityQuestionService,\n        CountryService,\n        StateProvinceService,\n        OnlineDepositService,\n        OnlineDepositBankService,\n        QuickDepositService,\n        QuickDepositMethodService,\n        QuickDepositPreferredBankService,\n        QuickDepositBankAccountService,\n        QuickDepositGenerateUdaIdService,\n        WechatService,\n        WithdrawalService,\n        WithdrawalTransactionService,\n        BankDetailService,\n        BankAddService,\n        HeaderService,\n        EmailVerificationService,\n        MobileVerificationService,\n        requestOptionsProvider,\n        GamesService,\n        CasinoService,\n        PromotionService,\n        PromotionDetailService,\n        BannerService,\n        SportsService,\n        FeaturedGamesService,\n        AuthGuard,\n        AuthService,\n        MalihuScrollbarService,\n        DepositTransactionService\n    ],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!depositTransactions\\\">\\n  <div class=\\\"spinner\\\"></div>\\n  <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div id=\\\"depositTransactionsPage\\\" class=\\\"grid c-article\\\" *ngIf=\\\"depositTransactions\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col col--xs-12\\\">\\n\\n      <div class=\\\"c-article__header\\\">\\n        <h2 class=\\\"c-article__title\\\">{{ 'DEPOSITTRANSACTION.DepositTransaction' | translate }}</h2>\\n        <p class=\\\"c-article__desc\\\">{{ 'DEPOSITTRANSACTION.WeWillProcess' | translate }}</p>\\n      </div>\\n\\n      <table class=\\\"c-table\\\">\\n        <thead>\\n        <tr>\\n          <th>{{ 'DEPOSITTRANSACTION.DateTimeRequested' | translate }}</th>\\n          <th>{{ 'DEPOSITTRANSACTION.Method' | translate }}</th>\\n          <th>{{ 'DEPOSITTRANSACTION.TransactionNumber' | translate }}</th>\\n          <th>{{ 'DEPOSITTRANSACTION.Status' | translate }}</th>\\n          <th>{{ 'DEPOSITTRANSACTION.RequestedAmount' | translate }}</th>\\n          <th>{{ 'DEPOSITTRANSACTION.CreditedAmount' | translate }}</th>\\n          <th>{{ 'DEPOSITTRANSACTION.BonusAmount' | translate }}</th>\\n        </tr>\\n        </thead>\\n        <tbody id=\\\"list-deposit-transaction\\\">\\n        <tr *ngFor=\\\"let depositTransaction of depositTransactions\\\">\\n          <td>{{ depositTransaction.DepositDate + '+0800' | date: 'MM/dd/yyyy hh:mm:ss a' }}</td>\\n          <td>{{ depositTransaction.PaymentMethodName }}</td>\\n          <td>{{ depositTransaction.TransactionNo }}</td>\\n          <td>{{ depositTransaction.Status }}</td>\\n          <td>{{ depositTransaction.DepositAmount }}</td>\\n          <td>{{ depositTransaction.CreditAmount }}</td>\\n          <td>{{ depositTransaction.BonusAmount }}</td>\\n        </tr>\\n        </tbody>\\n      </table>\\n      <hr/>\\n    </div>\\n  </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/deposit-transaction/deposit-transaction.component.html\n// module id = 890\n// module chunks = 0","module.exports = \"<div class=\\\"c-language align-center\\\">\\n    <div class=\\\"c-language__selected\\\">\\n      <div (click)=\\\"toggleLangOptns()\\\">\\n        <img src=\\\"assets/images/lang/lang-{{translate.currentLang}}.png\\\" alt=\\\"\\\" />\\n        <span>{{ translate.currentLang }}</span>\\n      </div>\\n    </div>\\n    <ul class=\\\"c-language__options\\\" [ngClass]=\\\"!showLangOptns ? 'is-close' : 'is-open'\\\">\\n        <li *ngFor=\\\"let lang of translate.getLangs()\\\">\\n          <div (click)=\\\"translate.use(lang); changeLang($event)\\\">\\n            <img src=\\\"assets/images/lang/lang-{{ lang }}.png\\\" alt=\\\"{{ lang }}\\\" />\\n            <span>{{ lang }}</span>\\n          </div>\\n        </li>\\n    </ul>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/elements/language/language.component.html\n// module id = 891\n// module chunks = 0","module.exports = \"\\n<nav id=\\\"mainNav\\\" class=\\\"c-nav\\\" [ngClass]=\\\"!showNavOptns ? 'is-toggled-close' : 'is-toggled-open'\\\">\\n\\n    <ul class=\\\"c-nav__list c-nav__list--main\\\">\\n        <li class=\\\"c-nav__item\\\" routerLinkActive=\\\"is-current\\\">\\n            <a [routerLink]=\\\"['/home']\\\" title=\\\"{{ 'MENU.HOME' | translate }}\\\">\\n                <i class=\\\"icon icon-home\\\"></i>\\n                <span>{{ 'MENU.HOME' | translate }}</span>\\n            </a>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <a [routerLink]=\\\"['/casino']\\\" title=\\\"{{ 'MENU.CASINO' | translate }}\\\">\\n                <i class=\\\"icon icon-casino\\\"></i>\\n                <span>{{ 'MENU.CASINO' | translate }}</span>\\n            </a>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <a title=\\\"{{ 'MENU.GAMES' | translate }}\\\" (click)=\\\"navSubLink()\\\">\\n                <i class=\\\"icon icon-games\\\"></i>\\n                <span>{{ 'MENU.GAMES' | translate }}</span>\\n            </a>\\n            <div class=\\\"menu-sub-toggler js-menuSubToggler\\\">\\n                <i class=\\\"icon icon-angle-down\\\"></i>\\n            </div>\\n            <ul class=\\\"c-nav__list c-nav__list--sub\\\">\\n                <li>\\n                    <a [routerLink]=\\\"['/games/Featured Games']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-gamesmini\\\"></i>\\n                        <span>{{ 'MENU.FeaturedGames' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/games/jackpot']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-gamesmini\\\"></i>\\n                        <span>{{ 'MENU.Jackpot' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/games/slots']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-gamesmini\\\"></i>\\n                        <span>{{ 'MENU.Slots' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/games/Table Games']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-gamesmini\\\"></i>\\n                        <span>{{ 'MENU.TableGames' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/games/Video Poker']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-gamesmini\\\"></i>\\n                        <span>{{ 'MENU.VideoPoker' | translate }}</span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <a [routerLink]=\\\"['/sports']\\\" title=\\\"{{ 'MENU.SportsBook' | translate }}\\\">\\n                <i class=\\\"icon icon-soccer-ball\\\"></i>\\n                <span>{{ 'MENU.SportsBook' | translate }}</span>\\n            </a>\\n        </li>\\n        <li>\\n            <div class=\\\"o-divider o-divider--horizontal\\\"></div>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <a [routerLink]=\\\"['/promotion']\\\" title=\\\"{{ 'MENU.Promotions' | translate }}\\\">\\n                <i class=\\\"icon icon-gift\\\"></i>\\n                <span>{{ 'MENU.Promotions' | translate }}</span>\\n            </a>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <a href=\\\"http://aff.orange88.com\\\" target=\\\"_blank\\\" title=\\\"{{ 'MENU.Affiliate' | translate }}\\\">\\n                <i class=\\\"icon icon-promotions\\\"></i>\\n                <span>{{ 'MENU.Affiliate' | translate }}</span>\\n            </a>\\n        </li>\\n        <li>\\n            <div class=\\\"o-divider o-divider--horizontal\\\"></div>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <!--<a [routerLink]=\\\"['/', { outlets: { 'aux': 'bank' } }]\\\" title=\\\"Bank Accounts\\\">-->\\n            <a href=\\\"javascript:void();\\\" title=\\\"{{ 'MENU.BankAccounts' | translate }}\\\" (click)=\\\"navSubLink()\\\">\\n                <i class=\\\"icon icon-bank\\\"></i>\\n                <span>{{ 'MENU.BankAccounts' | translate }}</span>\\n            </a>\\n            <div class=\\\"menu-sub-toggler js-menuSubToggler\\\">\\n                <i class=\\\"icon icon-angle-down\\\"></i>\\n            </div>\\n            <ul class=\\\"c-nav__list c-nav__list--sub\\\">\\n                <li>\\n                    <a [routerLink]=\\\"['/bank']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-book\\\"></i>\\n                        <span>{{ 'MENU.BankAccountsList' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/bank-add']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-bank\\\"></i>\\n                        <span>{{ 'MENU.AddBankAccounts' | translate }}</span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <a href=\\\"javascript:void();\\\" title=\\\"{{ 'MENU.Deposit' | translate }}\\\" (click)=\\\"navSubLink()\\\">\\n                <i class=\\\"icon icon-deposit\\\"></i>\\n                <span>{{ 'MENU.Deposit' | translate }}</span>\\n            </a>\\n            <div class=\\\"menu-sub-toggler js-menuSubToggler\\\">\\n                <i class=\\\"icon icon-angle-down\\\"></i>\\n            </div>\\n            <ul class=\\\"c-nav__list c-nav__list--sub\\\">\\n                <li>\\n                    <a [routerLink]=\\\"['/online-deposit']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-globe\\\"></i>\\n                        <span>{{ 'MENU.OnlineDeposit' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/quick-deposit']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-angle-double-right\\\"></i>\\n                        <span>{{ 'MENU.QuickDeposit' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/wechat']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-wechat\\\"></i>\\n                        <span>{{ 'MENU.WeChatDeposit' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/deposit-history']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-clock\\\"></i>\\n                        <span>{{ 'MENU.DepositHistory' | translate }}</span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <a href=\\\"javascript:void();\\\" title=\\\"{{ 'MENU.Withdrawal' | translate }}\\\" (click)=\\\"navSubLink()\\\">\\n                <i class=\\\"icon icon-withdrawal\\\"></i>\\n                <span>{{ 'MENU.Withdrawal' | translate }}</span>\\n            </a>\\n            <div class=\\\"menu-sub-toggler js-menuSubToggler\\\">\\n                <i class=\\\"icon icon-angle-down\\\"></i>\\n            </div>\\n            <ul class=\\\"c-nav__list c-nav__list--sub\\\">\\n                <li>\\n                    <a [routerLink]=\\\"['/withdrawal']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-upload\\\"></i>\\n                        <span>{{ 'MENU.CreateWithdrawal' | translate }}</span>\\n                    </a>\\n                </li>\\n                <li>\\n                    <a [routerLink]=\\\"['/withdrawal-transaction']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-clock\\\"></i>\\n                        <span>{{ 'MENU.WithdrawalHistory' | translate }}</span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </li>\\n        <li>\\n            <div class=\\\"o-divider o-divider--horizontal\\\"></div>\\n        </li>\\n        <li class=\\\"c-nav__item \\\" routerLinkActive=\\\"is-current\\\">\\n            <a href=\\\"javascript:void();\\\" title=\\\"{{ 'MENU.Settings' | translate }}\\\" (click)=\\\"navSubLink()\\\">\\n                <i class=\\\"icon icon-cog\\\"></i>\\n                <span>{{ 'MENU.Settings' | translate }}</span>\\n            </a>\\n            <div class=\\\"menu-sub-toggler js-menuSubToggler\\\">\\n                <i class=\\\"icon icon-angle-down\\\"></i>\\n            </div>\\n            <ul class=\\\"c-nav__list c-nav__list--sub\\\">\\n                <li>\\n                    <a [routerLink]=\\\"['/profile']\\\" (click)=\\\"navLink()\\\">\\n                        <i class=\\\"icon icon-user\\\"></i>\\n                        <span>{{ 'MENU.EditProfile' | translate }}</span>\\n                    </a>\\n                </li>\\n                <!--<li>-->\\n                    <!--<a [routerLink]=\\\"['/security']\\\">-->\\n                        <!--<i class=\\\"icon icon-lock\\\"></i>-->\\n                        <!--<span>{{ 'MENU.SecuritySettings' | translate }}</span>-->\\n                    <!--</a>-->\\n                <!--</li>-->\\n            </ul>\\n        </li>\\n    </ul>\\n</nav>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/elements/menu/menu.component.html\n// module id = 892\n// module chunks = 0","module.exports = \"\\n<div id=\\\"{{modalId}}\\\" class=\\\"c-modal\\\">\\n    <div class=\\\"c-modal__wrapper\\\">\\n\\n      <div class=\\\"c-modal__body\\\">\\n          <div class=\\\"c-modal__title align-center\\\">\\n              <h3 class=\\\"uppercase\\\">{{ 'SUCCESS.Success' | translate }}</h3>\\n              <div [ngSwitch]=\\\"successType\\\">\\n                <p *ngSwitchCase=\\\"'register'\\\">{{ 'SUCCESS.SuccessfullyCreated' | translate }}</p>\\n                <p *ngSwitchCase=\\\"'changePassword'\\\">{{ 'SUCCESS.ModifiedPassword' | translate }}</p>\\n              </div>\\n          </div>\\n      </div>\\n      <div class=\\\"c-modal__footer\\\">\\n\\n        <div [ngSwitch]=\\\"successType\\\">\\n          <button *ngSwitchCase=\\\"'register'\\\" type=\\\"button\\\" (click)=\\\"onOk()\\\" class=\\\"c-form__submit o-button o-button--success\\\">\\n              {{ 'SUCCESS.PlayNow' | translate }}\\n          </button>\\n          <button *ngSwitchCase=\\\"'changePassword'\\\" type=\\\"button\\\" (click)=\\\"onOkChwd()\\\" class=\\\"c-form__submit o-button o-button--success\\\">\\n              {{ 'SUCCESS.LoginNow' | translate }}\\n          </button>\\n        </div>\\n\\n      </div>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/elements/modal/success-modal.component.html\n// module id = 893\n// module chunks = 0","module.exports = \"<div id=\\\"{{modalId}}\\\" class=\\\"c-modal\\\">\\n  <div class=\\\"c-modal__wrapper\\\">\\n    <button type=\\\"button\\\" class=\\\"c-modal__close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCancel()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n      <div class=\\\"loader align-center\\\" *ngIf=\\\"!profile\\\">\\n          <div class=\\\"spinner\\\"></div>\\n          <div>{{ 'Loading...' }}</div>\\n      </div>\\n\\n      <form *ngIf=\\\"profile\\\" name=\\\"emailVerification\\\" #emailVerification=\\\"ngForm\\\" class=\\\"c-form\\\">\\n        <div class=\\\"c-modal__body\\\">\\n            <div class=\\\"c-modal__title align-center\\\">\\n                <h3>Verify / Change Email Account</h3>\\n                <p>This step is necessary to verify your identity. Follow the instruction below.</p>\\n            </div>\\n\\n            <div *ngIf=\\\"success && !valid\\\" class=\\\"c-alert c-alert--inline hidden\\\" style=\\\"display: block\\\">\\n                <div *ngFor=\\\"let error of dataError.Errors\\\">\\n                    <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n                </div>\\n            </div>\\n\\n            <div *ngIf=\\\"submitted && valid && verifyEmailto\\\" class=\\\"c-alert c-alert--inline\\\">\\n                <i class=\\\"icon icon-info-circled\\\"></i>Verification code has been sent to your Email Address.\\n            </div>\\n\\n            <div class=\\\"c-form__group\\\">\\n                <label class=\\\"c-form__label invisible\\\">{{ 'PROFILE.EmailAddress' | translate }}</label>\\n                <input type=\\\"email\\\" class=\\\"c-form__input\\\" id=\\\"emailAddress\\\" required [(ngModel)]=\\\"profile.Email\\\" name=\\\"Email\\\" placeholder=\\\"Email Address\\\"\\n                #Email=\\\"ngModel\\\">\\n            </div>\\n\\n            <div class=\\\"c-form__group\\\">\\n                <label class=\\\"c-form__label invisible\\\"> Code </label>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"code\\\" [(ngModel)]=\\\"profile.EmailResetCode\\\" name=\\\"EmailResetCode\\\" placeholder=\\\"Code\\\"\\n                #EmailResetCode=\\\"ngModel\\\" minlength=\\\"6\\\" maxlength=\\\"6\\\" onkeyup=\\\"this.value=this.value.replace(/[^\\\\d]/,'')\\\">\\n            </div>\\n\\n            <div role=\\\"separator\\\" class=\\\"c-form__group c-form__divider\\\">\\n                <span><i class=\\\"icon icon-angle-up\\\"></i></span>\\n            </div>\\n            <div *ngIf=\\\"!hasSend\\\" class=\\\"c-form__group\\\">\\n                <button type=\\\"submit\\\" (click)=\\\"verifyEmail(profile)\\\" class=\\\"o-button o-button--action o-button--med\\\">\\n                    <span *ngIf=\\\"!submitting\\\">GET CODE</span>\\n                    <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                </button>\\n            </div>\\n            <div *ngIf=\\\"hasSend\\\" class=\\\"c-form__group\\\">\\n                <button type=\\\"submit\\\" (click)=\\\"verifyEmail(profile)\\\" class=\\\"o-button o-button--action o-button--med\\\">\\n                    <span *ngIf=\\\"!submitting\\\">RESEND CODE</span>\\n                    <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                </button>\\n            </div>\\n        </div>\\n        <div class=\\\"c-modal__footer\\\">\\n            <button id=\\\"goBack\\\" type=\\\"submit\\\" (click)=\\\"resetEmail(profile)\\\" class=\\\"c-form__submit o-button\\\" [class.o-button--action]=\\\"hasSend\\\">\\n                <span *ngIf=\\\"!submittingResend\\\">SUBMIT</span>\\n                <span *ngIf=\\\"submittingResend\\\" class=\\\"spinner-bar\\\"></span>\\n            </button>\\n        </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/email-verification/email-verification.component.html\n// module id = 894\n// module chunks = 0","module.exports = \"<div class=\\\"c-carousel c-carousel--multi grid\\\" *ngIf=\\\"games\\\">\\n    <div class=\\\"row js-carousel\\\">\\n        <!--<slick-slider>-->\\n            <div *ngFor=\\\"let game of games | slice:0:6\\\" class=\\\"c-carousel__item col col--xs-4 col--lg-2\\\">\\n                <div class=\\\"c-block c-block--game\\\" [ngStyle]=\\\"{'background-image': 'url(' + game.thumb_image.src + ')'}\\\">  \\n                    <a (click)=\\\"loadiframe(game.game_platform_code, game.game_code)\\\" class=\\\"o-button o-button--action o-button--med\\\">\\n                        {{ 'LANDINGPAGE.PlayNow' | translate }}\\n                    </a>\\n                </div>\\n                <!--<p> {{ game.game_platform }} {{ game.title}}</p>    -->\\n            </div>\\n        <!--</slick-slider>-->\\n\\n        <!--<owl-carousel\\n            [options]=\\\"{dots: false, navigation: true}\\\"\\n            [items]=\\\"games\\\"\\n            [carouselClasses]=\\\"['owl-theme', 'row', 'sliding']\\\">-->                    \\n        <!--</owl-carousel>-->\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/featured-games/featured-games.component.html\n// module id = 895\n// module chunks = 0","module.exports = \"<div id=\\\"{{modalId}}\\\" class=\\\"c-modal\\\">\\n    <div class=\\\"c-modal__wrapper\\\">\\n\\n        <button type=\\\"button\\\" class=\\\"c-modal__close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCancel()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n\\n        <form name=\\\"resetPassword\\\" autocomplete=\\\"off\\\" novalidate (ngSubmit)=\\\"onSubmit()\\\" #ResetPasswordForm=\\\"ngForm\\\"\\n              class=\\\"c-form\\\">\\n            <div class=\\\"c-modal__body\\\">\\n                <div class=\\\"c-modal__title align-center\\\">\\n                    <h3>Quick Security Check</h3>\\n                    <p>Please provide necessary information to continue.</p>\\n                </div>\\n                <!--<div *ngIf=\\\"errorMessage\\\">-->\\n                <!--<pre>-->\\n                <!--{{ errorMessage | json }} -->\\n                <!--{{ successMessage | json }}-->\\n\\n                <!--</pre>-->\\n                <!--</div>-->\\n\\n                <div *ngIf=\\\"successMessage && !valid\\\" class=\\\"c-alert c-alert--inline hidden\\\" style=\\\"display: block\\\">\\n                    <div *ngFor=\\\"let error of dataError.Errors\\\">\\n                        <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n                    </div>\\n                    <!--{{ dataError.Errors | json }}-->\\n                </div>\\n                <div class=\\\"c-form__group\\\">\\n                    <label for=\\\"ResetCode\\\" class=\\\"c-form__label invisible\\\">Send Code</label>\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col col--xs-7\\\">\\n                            <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"resetCode\\\"\\n                                   [(ngModel)]=\\\"resetPassword.ResetCode\\\"\\n                                   name=\\\"resetCode\\\" placeholder=\\\"Reset Code\\\"\\n                                   #resetCode=\\\"ngModel\\\" minlength=\\\"6\\\" maxlength=\\\"6\\\">\\n                        </div>\\n                        <div class=\\\"col col--xs-5\\\">\\n                            <button type=\\\"button\\\" (click)=\\\"sendResetCode(forgotPassword)\\\"\\n                                    class=\\\"o-button o-button--action o-button--med\\\">\\n                                <span *ngIf=\\\"!submittingResend\\\">Resend Code</span>\\n                                <span *ngIf=\\\"submittingResend\\\" class=\\\"spinner-bar\\\"></span>\\n                            </button>\\n                        </div>\\n                        <!--<div [hidden]=\\\"resetCode.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">-->\\n                            <!--Reset Code is required-->\\n                        <!--</div>-->\\n\\n                    </div>\\n                </div>\\n                <div class=\\\"c-form__group\\\">\\n                    <label for=\\\"Password\\\" class=\\\"c-form__label invisible\\\">Password</label>\\n                    <input type=\\\"password\\\" class=\\\"c-form__input\\\" id=\\\"password\\\"\\n                           required [(ngModel)]=\\\"resetPassword.Password\\\"\\n                           #password=\\\"ngModel\\\"\\n                           name=\\\"password\\\" placeholder=\\\"Password\\\" minlength=\\\"6\\\" maxlength=\\\"30\\\">\\n                    <div [hidden]=\\\"password.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                        Password is required\\n                    </div>\\n                    <!--<div [hidden]=\\\"!password.errors.minlength\\\" *ngIf=\\\"submitted\\\">-->\\n                        <!--Name must be at least 6 characters long.-->\\n                    <!--</div>-->\\n                </div>\\n                <div class=\\\"c-form__group\\\">\\n                    <label for=\\\"ConfirmPassword\\\" class=\\\"c-form__label invisible\\\">Confirm Password</label>\\n                    <input type=\\\"password\\\" class=\\\"c-form__input\\\" id=\\\"confirmPassword\\\" required\\n                           [(ngModel)]=\\\"resetPassword.ConfirmPassword\\\" name=\\\"confirmPassword\\\"\\n                           placeholder=\\\"Confirm Password\\\" #confirmPassword=\\\"ngModel\\\" minlength=\\\"6\\\" maxlength=\\\"30\\\">\\n                    <div [hidden]=\\\"confirmPassword.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                        Confirm Password is required\\n                    </div>\\n                    <!--<div [hidden]=\\\"!confirmPassword.errors.minlength\\\" *ngIf=\\\"submitted\\\">-->\\n                        <!--Name must be at least 6 characters long.-->\\n                    <!--</div>-->\\n                    <div *ngIf=\\\"submitted\\\">\\n                        <span *ngIf=\\\"resetPassword.Password != resetPassword.ConfirmPassword\\\"\\n                              class=\\\"alert alert-danger\\\">\\n                        Password did not match\\n                    </span>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"c-modal__footer\\\">\\n                <button (click)=\\\"onSubmit(resetPassword)\\\" type=\\\"submit\\\"\\n                        [disabled]=\\\"ResetPasswordForm.invalid\\\" class=\\\"c-form__submit o-button o-button--action\\\">\\n                    <span *ngIf=\\\"!submitting\\\"> Submit </span>\\n                    <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                </button>\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forgot-password-reset/forgot-password-reset.component.html\n// module id = 896\n// module chunks = 0","module.exports = \"<div id=\\\"{{modalId}}\\\" class=\\\"c-modal\\\">\\n    <div class=\\\"c-modal__wrapper\\\">\\n\\n        <button type=\\\"button\\\" class=\\\"c-modal__close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCancel()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n        <form autocomplete=\\\"off\\\" novalidate name=\\\"resetPassword\\\" #ForgotPasswordForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n            <div class=\\\"c-modal__body\\\">\\n                <div class=\\\"c-modal__title align-center\\\">\\n                    <h3>{{ 'FORGOTPASSWORD.Header' | translate }}</h3>\\n                    <p>{{ 'FORGOTPASSWORD.Info' | translate }}</p>\\n                </div>\\n                <div *ngIf=\\\"success && !valid\\\" class=\\\"c-alert c-alert--inline hidden\\\" style=\\\"display: block\\\">\\n                    <div *ngFor=\\\"let error of dataError.Errors\\\">\\n                        <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n                    </div>\\n                    <!--{{ dataError.Errors | json }}-->\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"username\\\">\\n                        <span>{{ 'FORGOTPASSWORD.Username' | translate }}</span>\\n                    </label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"username\\\"\\n                           required\\n                        [(ngModel)]=\\\"forgotPassword.UserName\\\" #username=\\\"ngModel\\\" \\n                        name=\\\"username\\\" placeholder=\\\"{{ 'FORGOTPASSWORD.Username' | translate }}\\\">\\n                    <div [hidden]=\\\"username.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                        {{ 'FORGOTPASSWORD.ErrorUsername' | translate }}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"emailAddress\\\">\\n                        <span>{{ 'FORGOTPASSWORD.Email' | translate }}</span>\\n                    </label>\\n                    <input type=\\\"email\\\" class=\\\"c-form__input\\\" id=\\\"emailAddress\\\"\\n                           required\\n                        [(ngModel)]=\\\"forgotPassword.Email\\\" #emailAddress=\\\"ngModel\\\" \\n                        name=\\\"emailAddress\\\" placeholder=\\\"{{ 'FORGOTPASSWORD.Email' | translate }}\\\" >\\n                    <div [hidden]=\\\"emailAddress.valid\\\"  *ngIf=\\\"emailAddress.errors?.email || submitted\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                        {{ 'FORGOTPASSWORD.ErrorEmail' | translate }}\\n                    </div>\\n                </div>\\n                <div role=\\\"separator\\\" class=\\\"c-form__group c-form__divider\\\">\\n                    <span>{{ 'FORGOTPASSWORD.Or' | translate }}</span>\\n                </div>\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"mobileCode\\\">\\n                        <span>{{ 'Mobile Number' | translate }}</span>\\n                    </label>\\n                    <div class=\\\"c-form__input-group\\\">\\n                        <div class=\\\"c-form__input-group-add\\\">\\n                            <div class=\\\"c-form__select__wrapper\\\">\\n                                <select class=\\\"c-form__input c-form__select\\\" id=\\\"mobileCode\\\"\\n                                    [(ngModel)]=\\\"forgotPassword.MobileCountryCode\\\" name=\\\"mobileCode\\\" #mobileCode=\\\"ngModel\\\">\\n                                    <option disabled value=\\\"0\\\">{{ 'FORGOTPASSWORD.CountryCode' | translate }}</option>\\n                                    <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.CountryCallCode\\\">\\n                                            {{ country.CountryCallCode }}\\n                                    </option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"mobileNumber\\\"\\n                            [(ngModel)]=\\\"forgotPassword.MobileNo\\\" #mobileNumber=\\\"ngModel\\\" \\n                            name=\\\"mobileNumber\\\" placeholder=\\\"{{ 'FORGOTPASSWORD.MobileNumber' | translate }}\\\"\\n                            minlength=\\\"10\\\" maxlength=\\\"10\\\"\\n                            onkeyup=\\\"this.value=this.value.replace(/[^\\\\d]/,'')\\\"/>\\n                    </div>\\n                    <!--<div [hidden]=\\\"mobileNumber.valid\\\"  *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">-->\\n                        <!--<span *ngIf=\\\"!submitting\\\">{{ 'FORGOTPASSWORD.ErrorMobile' | translate }}</span>-->\\n                        <!--<span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>-->\\n                    <!--</div>-->\\n                </div>\\n            </div>\\n            <div class=\\\"c-modal__footer\\\">\\n                <button (click)=\\\"onSubmit(forgotPassword)\\\" type=\\\"submit\\\" class=\\\"c-form__submit o-button o-button--action\\\">\\n                    <span *ngIf=\\\"!submitting\\\">{{ 'FORGOTPASSWORD.Submit' | translate }}</span>\\n                    <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n\\n                </button>\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/forgot-password/forgot-password.component.html\n// module id = 897\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!games\\\"> \\n  <div class=\\\"spinner\\\"></div>\\n  <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div class=\\\"c-panel\\\" *ngIf=\\\"games\\\">\\n    <div class=\\\"c-panel__header\\\">            \\n        <div class=\\\"c-panel__title\\\">\\n            <span>{{ 'FILTERATION.Games' | translate }}</span>\\n        </div>            \\n        <div class=\\\"c-panel__utils\\\">\\n            <ul class=\\\"o-sorter\\\">\\n                <li><a (click)=\\\"getActivePlatform('')\\\">{{ 'FILTERATION.All' | translate }}</a></li>\\n                <li><a (click)=\\\"getActivePlatform('GD')\\\">{{ 'FILTERATION.GD' | translate }}</a></li>\\n                <li><a (click)=\\\"getActivePlatform('TGP')\\\">{{ 'FILTERATION.TGP' | translate }}</a></li>\\n                <!--<li><a (click)=\\\"getActivePlatform('HG')\\\">{{ 'FILTERATION.HG' | translate }}</a></li>-->\\n                <li><a (click)=\\\"getActivePlatform('PT')\\\">{{ 'FILTERATION.PT' | translate }}</a></li>\\n                <li><a (click)=\\\"getActivePlatform('AG')\\\">{{ 'FILTERATION.AG' | translate }}</a></li>\\n                <li><a (click)=\\\"getActivePlatform('Betsoft')\\\">{{ 'FILTERATION.BETSOFT' | translate }}</a></li>\\n                <li><a (click)=\\\"getActivePlatform('MG')\\\">{{ 'FILTERATION.MG' | translate }}</a></li>\\n                <li><a (click)=\\\"getActivePlatform('TTG')\\\">{{ 'FILTERATION.TTG' | translate }}</a></li>\\n            </ul>\\n            <div class=\\\"o-search\\\">\\n                <div class=\\\"o-search__wrapper\\\">\\n                    <i class=\\\"icon icon-search float-right\\\"></i>\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"filter.title\\\" placeholder=\\\"{{ 'FILTERATION.Search' | translate }}\\\">\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"c-panel__body\\\">\\n        <div id=\\\"scrollable\\\" class=\\\"c-panel__body__wrapper\\\" autoheight>    \\n            <div class=\\\"c-panel__list c-list row\\\">\\n                <div *ngFor=\\\"let game of games | gameFilter: filter\\\" class=\\\"col col--md-3 col--lg-2\\\">\\n                    <div class=\\\"c-block c-block--game\\\" [ngStyle]=\\\"{'background-image': 'url(' + game.thumb_image.src + ')'}\\\">\\n                        <!--<div class=\\\"c-block__text\\\">\\n                            <p>{{ game.id }}</p>\\n                            <p>{{ game.game_platform }} {{ game.title}}</p>\\n                        </div>-->\\n                        <a (click)=\\\"loadiframe(game.game_platform_code, game.game_code)\\\" class=\\\"o-button o-button--action o-button--med\\\">\\n                            {{ 'FILTERATION.PlayNow' | translate }}\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/games/games.component.html\n// module id = 898\n// module chunks = 0","module.exports = \"<div class=\\\"g-grid g-gap g-rowrepeat-3s\\\">\\n\\n    <div id=\\\"homeFeaturedBanners\\\" class=\\\"grid \\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col col--xs-6\\\">\\n                <div class=\\\"c-panel c-panel--carousel\\\">\\n                    <!--<div class=\\\"c-carousel c-carousel--single\\\">\\n                        <div class=\\\"c-block c-block--banner\\\">\\n                            <div class=\\\"c-block__content\\\">\\n                                <h1>{{ 'LANDINGPAGE.SportsBook' | translate }}</h1>\\n                                <h3>{{ 'LANDINGPAGE.StayInTheGame' | translate }}</h3>\\n                                <a href=\\\"#\\\" class=\\\"o-button\\\">{{ 'LANDINGPAGE.BetNow' | translate }}</a>\\n                            </div>\\n                        </div>\\n                    </div>-->\\n                    <app-banner></app-banner>\\n                </div>\\n            </div>\\n            <div class=\\\"col col--xs-6\\\">\\n                <div class=\\\"c-block c-block--banner\\\" style=\\\"background-image: url('assets/images/main-deposit-banner.jpg')\\\">\\n                    <div class=\\\"c-block__content\\\">\\n                        <h1>{{ 'LANDINGPAGE.Header1' | translate }}</h1>\\n                        <a [routerLink]=\\\"['/online-deposit']\\\" class=\\\"o-button o-button--action o-button--med\\\">{{ 'LANDINGPAGE.DepositNow' | translate }}</a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col col--xs-6\\\">\\n                <div class=\\\"c-block c-block--banner\\\" style=\\\"background-image: url('assets/images/main-sports-book-banner.jpg')\\\">\\n                    <div class=\\\"c-block__content\\\">\\n                        <h1>{{ 'LANDINGPAGE.SportsBook' | translate }}</h1>\\n                        <h3>{{ 'LANDINGPAGE.StayInTheGame' | translate }}</h3>\\n                        <a [routerLink]=\\\"['/sports']\\\" class=\\\"o-button o-button--action o-button--med\\\">{{ 'LANDINGPAGE.BetNow' | translate }}</a>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col col--xs-6\\\">\\n                <div class=\\\"c-panel c-panel--mini c-panel--carousel\\\" style=\\\"background-image: url('assets/images/main-livecasino-bg.png')\\\">\\n                    <div class=\\\"c-panel__header\\\">\\n                        <div class=\\\"c-panel__title\\\">\\n                            <span>{{ 'LANDINGPAGE.LiveCasino' | translate }}</span>\\n                        </div>\\n                        <div class=\\\"c-panel__utils\\\">\\n                            <div class=\\\"return-link\\\">\\n                                <a [routerLink]=\\\"['/games/slots']\\\" [ngStyle]=\\\"{'color': '#f5f5f5'}\\\">{{ 'LANDINGPAGE.More' | translate }}</a>\\n                                <i class=\\\"icon  icon-right-open\\\"></i>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"c-panel__body grid\\\">\\n                        <div class=\\\"row\\\">\\n                            <div *ngFor=\\\"let casino of casinos | slice:0:3\\\" class=\\\"col col--xs-4\\\">\\n                                <div class=\\\"c-block c-block--game c-block--mini\\\" [ngStyle]=\\\"{'background-image': 'url(' + casino.thumb_image.src + ')'}\\\">\\n                                    <div class=\\\"c-block__logo\\\">\\n                                        <img src=\\\"{{ casino.logo.src }}\\\" alt=\\\"{{ casino.logo.alt }}\\\">\\n                                    </div>\\n                                    <a (click)=\\\"loadiframe(casino.game_platform_code, casino.game_code)\\\" class=\\\"o-button o-button--action\\\">{{ 'LANDINGPAGE.PlayNow' | translate }}</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div id=\\\"homeFeaturedGames\\\" class=\\\"grid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col col--xs-12\\\">\\n                <div class=\\\"c-panel c-panel--mini c-panel--carousel\\\">\\n                    <div class=\\\"c-panel__header\\\">            \\n                        <div class=\\\"c-panel__title\\\">\\n                            <span>{{ 'LANDINGPAGE.FeaturedSlotGames' | translate }}</span>\\n                        </div>            \\n                        <div class=\\\"c-panel__utils\\\">\\n                            <div class=\\\"return-link\\\">\\n                                <a href=\\\"javascript:void();\\\" [routerLink]=\\\"['/games/slots']\\\">{{ 'LANDINGPAGE.MoreGames' | translate }}</a>\\n                                <i class=\\\"icon  icon-right-open\\\"></i>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"c-panel__body\\\">\\n                        <app-featured-games></app-featured-games>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div> \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/home/home.component.html\n// module id = 899\n// module chunks = 0","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {Countries}                                from './country';\n\nimport {AppSettings}                              from '../app.config';\nimport  {requestOptionsProvider}                  from  '../default-request-option.service';\n\n@Injectable()\nexport class CountryService {\n\n    private urlGetCountries = AppSettings.API_ENDPOINT + 'PandoraCommon/GetCountries'; // This is the API Endpoint for getting the list of Countries\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<Countries[]>}\n     * GET Security Question\n     */\n    getCountries(): Observable<Countries[]> {\n        return this.http\n            .get(this.urlGetCountries, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     * @param res\n     * @returns {Response}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (body.Data == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            };\n        } else {\n            rejectMsg = bodyData;\n        }\n\n        return rejectMsg;\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body reponse\n     */\n    private handleError(error: Response | any) {\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/country/country.service.ts","module.exports = \"<!--<footer class=\\\"l-footer\\\">-->\\n  <div class=\\\"l-footer__top\\\">\\n    <ul class=\\\"c-footer-links list--unstyled\\\">\\n      <li>\\n        <a href=\\\"http://orange88.com/{{lang}}/about-us\\\" target=\\\"_blank\\\" title=\\\"{{ 'FOOTER.AboutOrange88' | translate }}\\\">{{ 'FOOTER.AboutOrange88' | translate }}</a>\\n      </li>\\n      <li>\\n        <a href=\\\"http://orange88.com/{{lang}}/privacy-policy\\\" target=\\\"_blank\\\" title=\\\"{{ 'FOOTER.Privacy' | translate }}\\\">{{ 'FOOTER.Privacy' | translate }}</a>\\n      </li>\\n      <li>\\n        <a href=\\\"http://orange88.com/{{lang}}/terms-and-conditions\\\" target=\\\"_blank\\\" title=\\\"{{ 'FOOTER.Terms' | translate }}\\\">{{ 'FOOTER.Terms' | translate }}</a>\\n      </li>\\n      <li>\\n        <a href=\\\"http://orange88.com/index.php/{{lang}}/faq\\\" target=\\\"_blank\\\" title=\\\"{{ 'FOOTER.Help' | translate }}\\\">{{ 'FOOTER.Help' | translate }}</a>\\n      </li>\\n    </ul>\\n  </div>\\n  <div class=\\\"l-footer__bottom\\\">\\n    <div>{{ 'FOOTER.Copyright' | translate }}</div>\\n  </div>\\n<!--</footer>-->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/footer/footer.component.html\n// module id = 900\n// module chunks = 0","module.exports = \"\\n    <div class=\\\"o-logo\\\">\\n        <a routerLink=\\\"/home\\\" title=\\\"{{ 'HEADER.Home' | translate }}\\\">\\n            <img src=\\\"assets/images/logo-en.png\\\" alt=\\\"logo\\\">\\n        </a>\\n    </div>\\n\\n    <div class=\\\"c-utilities\\\">\\n        <div class=\\\"c-overview-user\\\">\\n            <div class=\\\"c-overview-name\\\">\\n                <i class=\\\"icon icon-user\\\"></i>\\n                <a [routerLink]=\\\"['/profile']\\\"><span>{{userDetails.username}}</span></a>\\n            </div>\\n            <div class=\\\"o-divider o-divider--vertical\\\">&nbsp;</div>\\n            <div class=\\\"c-overview-balance\\\">\\n                <i class=\\\"icon icon-database\\\"></i>\\n                <span *ngIf=\\\"!balance\\\">{{ currentBal | number : '1.2-2' }}</span>\\n                <span *ngIf=\\\"balance\\\">{{ balance | number : '1.2-2' }}</span>\\n            </div>\\n        </div>\\n        <div class=\\\"c-date\\\">\\n            {{ userDetails.date | date:'EEEE, MMM, d, y, h:m' }}\\n        </div>\\n        <div class=\\\"o-divider o-divider--vertical\\\">&nbsp;</div>\\n        <div class=\\\"c-controls\\\">\\n            <button (click)=\\\"logout()\\\">\\n                <i class=\\\"icon icon-logout\\\"></i>\\n                <span>{{ 'HEADER.Logout' | translate }}</span>\\n            </button>\\n            <div>\\n                <div class=\\\"o-dropselect align-center\\\" [ngClass]=\\\"!showWindowOptns ? 'is-close' : 'is-open'\\\">\\n                    <button class=\\\"o-dropselect__toggler\\\" (click)=\\\"toggleWindowOptns()\\\">\\n                        <i class=\\\"icon icon-ellipsis-vert\\\"></i>\\n                        <span>{{ 'HEADER.More' | translate }}</span>\\n                    </button>\\n                    <ul class=\\\"o-dropselect__options\\\">\\n                        <li id=\\\"minWwindow\\\"><i class=\\\"icon icon-window-minimize\\\"></i></li>\\n                        <li id=\\\"maxWindow\\\"><i class=\\\"icon icon-window-maximize\\\"></i></li>\\n                        <li id=\\\"closeWindow\\\"><i class=\\\"icon icon-cancel\\\"></i></li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n    \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/layout/header/header.component.html\n// module id = 901\n// module chunks = 0","module.exports = \"<div id=\\\"login\\\" class=\\\"c-access c-login center-absolute\\\">\\n\\n    <div class=\\\"o-logo\\\">\\n        <a href=\\\"/\\\" title=\\\"Orange88\\\">\\n            <img src=\\\"assets/images/logo-en.png\\\" alt=\\\"logo\\\">\\n        </a>\\n    </div>\\n\\n    <div *ngIf=\\\"!submitted && !valid \\\" >\\n        <div *ngFor=\\\"let error of dataError\\\" class=\\\"c-alert c-alert--inline\\\">\\n            <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n        </div>\\n    </div>\\n\\n    <form class=\\\"c-form\\\" autocomplete=\\\"off\\\" novalidate name=\\\"login\\\" #LoginForm=\\\"ngForm\\\">\\n        <div class=\\\"c-form__group\\\">\\n            <label class=\\\"c-form__label invisible\\\" for=\\\"Username\\\">>\\n                <span>{{ 'LOGIN.Username' | translate }}</span>\\n            </label>\\n            <input type=\\\"text\\\" class=\\\"c-form__input c-login__user\\\" name=\\\"username\\\" value=\\\"\\\" placeholder=\\\" {{ 'LOGIN.Username' | translate }}\\\" id=\\\"username\\\"\\n                    required\\n                    [(ngModel)]=\\\"login.UserName\\\"\\n                    #username=\\\"ngModel\\\"\\n                   minlength=\\\"5\\\" maxlength=\\\"30\\\">\\n            <div [hidden]=\\\"username.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                {{ 'LOGIN.ErrorUsername' | translate }}\\n            </div>\\n        </div>\\n        <div class=\\\"c-form__group\\\">\\n            <label for=\\\"password\\\" class=\\\"c-form__label invisible\\\">\\n                <span>{{ 'LOGIN.Password' | translate }}</span>\\n            </label>\\n            <input type=\\\"password\\\" class=\\\"c-form__input c-login__password\\\" name=\\\"password\\\" value=\\\"\\\" placeholder=\\\"{{ 'LOGIN.Password' | translate }}\\\" id=\\\"password\\\"\\n                    required\\n                    [(ngModel)]=\\\"login.Password\\\"\\n                    #password=\\\"ngModel\\\"\\n                    minlength=\\\"6\\\" maxlength=\\\"30\\\">\\n            <div [hidden]=\\\"password.valid\\\" *ngIf=\\\"submitted\\\"\\n                 class=\\\"alert alert-danger\\\">\\n                {{ 'LOGIN.ErrorPassword' | translate }}\\n            </div>\\n        </div>\\n        <div class=\\\"c-form__group padding-horizontal\\\">\\n            <div class=\\\"c-form__control c-form__control--checkbox\\\">\\n                <label class=\\\"c-form__label\\\">\\n                    {{ 'LOGIN.RememberUsername' | translate }}\\n                    <input type=\\\"checkbox\\\" name=\\\"rememberme\\\" [(ngModel)]=\\\"login.RememberMe\\\">\\n                    <div class=\\\"c-form__control-pseudo\\\"></div>\\n                </label>\\n            </div>\\n            <div (click)=\\\"openModalForgotPassword()\\\" title=\\\"Forgot Password\\\" class=\\\"float-right\\\">{{ 'LOGIN.ForgotPassword' | translate }}</div>\\n        </div>\\n        <div class=\\\"c-form__group\\\">\\n            <button type=\\\"submit\\\" class=\\\"c-form__submit o-button o-button--action o-button--full\\\" (click)=\\\"loginUser(login)\\\" [disabled]=\\\"LoginForm.invalid\\\">\\n                <span *ngIf=\\\"!submitting\\\">{{ 'LOGIN.Submit' | translate }}</span>\\n                <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n            </button>\\n        </div>\\n    </form>\\n\\n    <div class=\\\"c-access__cta align-center\\\">\\n        <p (click)=\\\"openModalRegistration()\\\">{{ 'LOGIN.NewUser' | translate }} <span>{{ 'LOGIN.SignUp' | translate }}</span></p>\\n    </div>\\n\\n    <div language-selector></div>\\n\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/login/login.component.html\n// module id = 902\n// module chunks = 0","module.exports = \"<div id=\\\"{{modalId}}\\\" class=\\\"c-modal\\\">\\n  <div class=\\\"c-modal__wrapper\\\">\\n\\n    <button type=\\\"button\\\" class=\\\"c-modal__close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCancel()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n      <div class=\\\"loader align-center\\\" *ngIf=\\\"!profile\\\">\\n          <div class=\\\"spinner\\\"></div>\\n          <div>{{ 'Loading...' }}</div>\\n      </div>\\n\\n    <form *ngIf=\\\"profile\\\" name=\\\"mobileVerification\\\" #mobileVerification=\\\"ngForm\\\" class=\\\"c-form\\\">\\n      <div class=\\\"c-modal__body\\\">\\n        <div class=\\\"c-modal__title align-center\\\">\\n          <h3>Verify / Change Mobile Account</h3>\\n          <p>This step is necessary to verify your identity. Follow the instruction below.</p>\\n        </div>\\n\\n          <div *ngIf=\\\"success && !valid\\\" class=\\\"c-alert c-alert--inline hidden\\\" style=\\\"display: block\\\">\\n              <div *ngFor=\\\"let error of dataError.Errors\\\">\\n                  <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n              </div>\\n          </div>\\n\\n        <div *ngIf=\\\"submitted && valid && verifyMobileto\\\" class=\\\"c-alert c-alert--inline\\\">\\n          <i class=\\\"icon icon-info-circled\\\"></i>Verification code has been sent to your Mobile.\\n        </div>\\n\\n        <div class=\\\"c-form__group\\\">\\n          <label class=\\\"c-form__label invisible\\\" for=\\\"countryCode\\\">\\n                <span>{{ 'Mobile Number' | translate }}</span>\\n            </label>\\n          <div class=\\\"c-form__input-group\\\">\\n            <div class=\\\"c-form__input-group-add\\\">\\n              <div class=\\\"c-form__select__wrapper\\\">\\n                <select class=\\\"c-form__input c-form__select\\\" id=\\\"countryCode\\\" #countryCode=\\\"ngModel\\\" name=\\\"countryCode\\\" [(ngModel)]=\\\"profile.MobileCountryCodeNumber\\\">\\n                                <option disabled value=\\\"0\\\">{{ 'PROFILE.ChooseYourMobileCountryCode' | translate }}</option>\\n                                <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.CountryCallCode\\\">\\n                                    {{ country.CountryCallCode }}\\n                                </option>\\n                            </select>\\n              </div>\\n            </div>\\n            <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"mobile-number\\\" required [(ngModel)]=\\\"profile.MobileNumber\\\" name=\\\"mobileNumber\\\"\\n              placeholder=\\\"{{ 'PROFILE.MobileNumber' | translate }}\\\" #mobileNumber=\\\"ngModel\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\"\\n              onkeyup=\\\"this.value=this.value.replace(/[^\\\\d]/,'')\\\">\\n          </div>\\n          <div [hidden]=\\\"mobileNumber.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n            {{ 'PROFILE.ErrorMobile' | translate }}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"c-form__group\\\">\\n          <label class=\\\"c-form__label invisible\\\"> Code </label>\\n          <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"code\\\" [(ngModel)]=\\\"profile.MobileResetCode\\\" name=\\\"MobileResetCode\\\" placeholder=\\\"Code\\\"\\n            #MobileResetCode=\\\"ngModel\\\" minlength=\\\"6\\\" maxlength=\\\"6\\\" onkeyup=\\\"this.value=this.value.replace(/[^\\\\d]/,'')\\\">\\n        </div>\\n        <div role=\\\"separator\\\" class=\\\"c-form__group c-form__divider\\\">\\n            <span><i class=\\\"icon icon-angle-up\\\"></i></span>\\n        </div>\\n        <div *ngIf=\\\"!hasSend\\\" class=\\\"c-form__group\\\">\\n          <button type=\\\"submit\\\" (click)=\\\"verifyMobile(profile)\\\" class=\\\"o-button o-button--action o-button--med\\\">\\n              <span *ngIf=\\\"!submitting\\\">GET CODE</span>\\n              <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n            </button>\\n        </div>\\n        <div *ngIf=\\\"hasSend\\\" class=\\\"c-form__group\\\">\\n          <button type=\\\"submit\\\" (click)=\\\"verifyMobile(profile)\\\" class=\\\"o-button o-button--action o-button--med\\\">\\n              <span *ngIf=\\\"!submitting\\\">RESEND CODE</span>\\n              <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n        </button>\\n        </div>\\n      </div>\\n      <div class=\\\"c-modal__footer\\\">\\n        <button id=\\\"goBack\\\" type=\\\"submit\\\" (click)=\\\"resetMobile(profile)\\\" class=\\\"c-form__submit o-button\\\" [class.o-button--action]=\\\"hasSend\\\">\\n            <span *ngIf=\\\"!submittingResend\\\">SUBMIT</span>\\n            <span *ngIf=\\\"submittingResend\\\" class=\\\"spinner-bar\\\"></span>\\n            </button>\\n      </div>\\n    </form>\\n\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/mobile-verification/mobile-verification.component.html\n// module id = 903\n// module chunks = 0","module.exports = \"<pre>\\n     {{ errorMessage | json}} {{successMessage | json}}\\n</pre>\\n\\n<div class=\\\"container\\\">\\n    <h1>Online Deposit Bank Form</h1>\\n    <form autocomplete=\\\"off\\\" novalidate name=\\\"onlineDepositBank\\\" #OnlineDepositBankForm=\\\"ngForm\\\">\\n        <section *ngIf=\\\"onlineDepositBanks\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"OnlineDepositBank\\\">OnlineDepositBank</label>\\n                <select name=\\\"onlineDepositBank\\\" [(ngModel)]=\\\"onlineDepositBanks.Id\\\">\\n                    <option value=\\\"\\\" disabled>Choose your Online Deposit Bank</option>\\n                    <option *ngFor=\\\"let onlineDepositBank of onlineDepositBanks\\\" [ngValue]=\\\"onlineDepositBank.Id\\\">\\n                        {{ onlineDepositBank.BankNameEn }}\\n                    </option>\\n                </select>\\n            </div>\\n        </section>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/online-deposit-bank/online-deposit-bank.component.html\n// module id = 904\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!onlineDepositBanks\\\">\\n    <div class=\\\"spinner\\\"></div>\\n    <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div *ngIf=\\\"submitted && valid\\\" class=\\\"c-alert hidden\\\" style=\\\"display: block\\\">\\n    <div class=\\\"c-alert__wrapper align-center\\\">\\n        <h4 class=\\\"c-alert__title\\\">\\n            <i class=\\\"icon icon-info-circled\\\"></i> {{ 'ONLINEDEPOSIT.ConfirmDepositAmount' | translate }}\\n        </h4>\\n        <p class=\\\"c-alert__desc uppercase\\\" style=\\\"font-size: 1.2rem\\\">{{ 'ONLINEDEPOSIT.DepositAmount' | translate }}: <strong>{{ onlineDeposit.Amount\\n            }}</strong></p>\\n        <div>\\n            <a (click)=\\\"proceedLink(success.url)\\\" target=\\\"_blank\\\" class=\\\"o-button o-button--success\\\">{{ 'ONLINEDEPOSIT.Proceed' | translate }}</a>\\n            <button (click)=\\\"onCancel()\\\" class=\\\"o-button o-button--action\\\">{{ 'ONLINEDEPOSIT.Cancel' | translate }}</button>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"grid c-article\\\" *ngIf=\\\"onlineDepositBanks\\\" [ngClass]=\\\"submitted ? 'is-temporary-disabled' : ''\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col--xs-12\\\">\\n\\n            <div class=\\\"c-article__header\\\">\\n                <h2 class=\\\"c-article__title\\\">{{ 'ONLINEDEPOSIT.OnlineDeposit' | translate }}</h2>\\n                <p class=\\\"c-article__desc\\\">{{ 'ONLINEDEPOSIT.OnlineDepositIsAnOnline' | translate }}</p>\\n            </div>\\n            <div *ngIf=\\\"success && !valid \\\" class=\\\"c-alert c-alert--inline\\\">\\n                <div *ngFor=\\\"let error of dataError\\\">\\n                    <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"c-alert c-alert--inline\\\">\\n                <i class=\\\"icon icon-info-circled\\\"></i>{{ 'ONLINEDEPOSIT.MinimumAndMaximumDeposit' | translate }}\\n            </div>\\n\\n            <form name=\\\"onlineDeposit\\\" autocomplete=\\\"off\\\" novalidate #OnlineDepositBankForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\">{{ 'ONLINEDEPOSIT.OnlineDepositBank' | translate }}</label>\\n                    <div class=\\\"c-form__select__wrapper\\\">\\n                        <select class=\\\"c-form__input c-form__select\\\" id=\\\"onlineDepositBank\\\" name=\\\"onlineDepositBank\\\"\\n                                [(ngModel)]=\\\"onlineDeposit.BankId\\\" #onlineDepositBank=\\\"ngModel\\\"\\n                                required>\\n                            <option value=\\\"\\\" disabled>{{ 'ONLINEDEPOSIT.ChooseYourOnlineDepositBank' | translate }}</option>\\n                            <option *ngFor=\\\"let onlineDepositBank of onlineDepositBanks\\\"\\n                                    [ngValue]=\\\"onlineDepositBank.Id\\\">\\n                                {{ onlineDepositBank.BankNameEn }}\\n                            </option>\\n                        </select>\\n                    </div>\\n                    <div [hidden]=\\\"onlineDepositBank.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                        {{ 'ONLINEDEPOSIT.ErrorOnlineDepositBank' | translate }}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"depositAmount\\\">{{ 'ONLINEDEPOSIT.DepositAmount' | translate }}</label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"depositAmount\\\"\\n                           name=\\\"depositAmount\\\"\\n                           required\\n                           [(ngModel)]=\\\"onlineDeposit.Amount\\\"\\n                           name=\\\"depositAmount\\\"\\n                           placeholder=\\\"{{ 'ONLINEDEPOSIT.DepositAmount' | translate }}\\\" #depositAmount=\\\"ngModel\\\"\\n                           onkeyup=\\\"this.value=this.value.replace(/[^\\\\d]/,'')\\\">\\n                    <div [hidden]=\\\"depositAmount.valid\\\"  *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                        {{ 'ONLINEDEPOSIT.ErrorOnlineDepositAmount' | translate }}\\n\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\">{{ 'ONLINEDEPOSIT.Bonus' | translate }}</label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"bonusCode\\\"\\n                           [(ngModel)]=\\\"onlineDeposit.BonusCode\\\" name=\\\"bonusCode\\\"\\n                           placeholder=\\\"{{ 'ONLINEDEPOSIT.Bonus' | translate }}\\\" #bonusCode=\\\"ngModel\\\">\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <button type=\\\"submit\\\" (click)=\\\"depositBank(onlineDeposit)\\\" class=\\\"o-button o-button--action\\\">\\n                        <span *ngIf=\\\"!submitting\\\">{{ 'ONLINEDEPOSIT.Deposit' | translate }}</span>\\n                        <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                    </button>\\n                </div>\\n\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/online-deposit/online-deposit.component.html\n// module id = 905\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!profile\\\">\\n  <div class=\\\"spinner\\\"></div>\\n  <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div class=\\\"grid c-article\\\" *ngIf=\\\"profile\\\">\\n   \\n  <div class=\\\"c-article__header\\\">\\n    <div *ngIf=\\\"successMessage\\\">\\n      <div class=\\\"c-alert c-alert--inline\\\">\\n        <i class=\\\"icon icon-info-circled\\\"></i> {{ successMessage | json }}\\n      </div>\\n    </div>\\n\\n    <h2 class=\\\"c-article__title\\\">{{ 'PROFILE.Profile' | translate }}</h2>\\n    <p class=\\\"c-article__desc\\\">{{ 'PROFILE.ManageProfile' | translate }}</p>\\n  </div>\\n  <div class=\\\"c-alert c-alert--inline\\\">\\n    <i class=\\\"icon icon-info-circled\\\"></i> {{ 'PROFILE.PleaseComplete' | translate }}\\n    <!--<a [routerLink]=\\\"['/email-verification']\\\" class=\\\"o-button o-button--action o-button--tiny\\\"> <span *ngIf=\\\"!profile.IsMobileVerified\\\">Verify Email </span> <span *ngIf=\\\"profile.IsMobileVerified\\\">{{ 'PROFILE.ChangeEmail' | translate }}</span>      </a>\\n    <a [routerLink]=\\\"['/mobile-verification']\\\" class=\\\"o-button o-button--action o-button--tiny\\\"> <span *ngIf=\\\"!profile.IsMobileVerified\\\">Verify Mobile </span> <span *ngIf=\\\"profile.IsMobileVerified\\\">{{ 'PROFILE.Change Mobile' | translate }}</span></a>-->\\n  </div>\\n  <div *ngIf=\\\"!profile.PlayerBankAccounts\\\" class=\\\"c-alert c-alert--inline\\\">\\n    <i class=\\\"icon icon-info-circled\\\"></i>{{ 'PROFILE.YouNeedToHave' | translate }}\\n    <a class=\\\"o-button o-button--action o-button--tiny\\\" [routerLink]=\\\"['/bank-add']\\\">{{ 'PROFILE.Create' | translate }}</a>\\n  </div>\\n  <div>\\n    <form name=\\\"profile\\\" autocomplete=\\\"off\\\" novalidate #ProfileForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\" for=\\\"fullname\\\">{{ 'PROFILE.Fullname' | translate }}</label>\\n        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"fullname\\\" required name=\\\"fullname\\\" [(ngModel)]=\\\"profile.FullName\\\" [value]=\\\"profile.FullName\\\"\\n          placeholder=\\\"* {{ 'PROFILE.Fullname' | translate }}\\\" #fullname=\\\"ngModel\\\">\\n        <div [hidden]=\\\"fullname.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n          {{ 'PROFILE.ErrorFullName' | translate }}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\" for=\\\"birthdate\\\">{{ 'PROFILE.BirthDate' | translate }}</label>\\n        <my-date-picker name=\\\"birthdate\\\" [options]=\\\"myDatePickerOptions\\\" [(ngModel)]=\\\"profile.BirthDate\\\" required class=\\\"c-form__input\\\"\\n          placeholder=\\\"{{ 'PROFILE.BirthDate' | translate }}\\\" #birthdate=\\\"ngModel\\\" (dateChanged)=\\\"onDateChanged($event)\\\" [selDate]=\\\"dateGet\\\">\\n\\n        </my-date-picker>\\n\\n        <div [hidden]=\\\"birthdate.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n          {{ 'PROFILE.ErrorBirthDate' | translate }}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\">{{ 'PROFILE.EmailAddress' | translate }}</label>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col col--xs-10\\\">\\n            <input type=\\\"email\\\" class=\\\"c-form__input\\\" id=\\\"emailAddress\\\" required [(ngModel)]=\\\"profile.Email\\\" name=\\\"emailAddress\\\" placeholder=\\\"{{ 'PROFILE.EmailAddress' | translate }}\\\"\\n              #emailAddress=\\\"ngModel\\\" [value]=\\\"profile.Email\\\">\\n          </div>\\n          <div class=\\\"col col--xs\\\">\\n            <button (click)=\\\"openModalVerifyEmail()\\\" class=\\\"o-button o-button--action o-button--tiny o-button--full\\\"> \\n                <span *ngIf=\\\"!profile.IsMobileVerified\\\">Verify Email </span> \\n                <span *ngIf=\\\"profile.IsMobileVerified\\\">{{ 'PROFILE.ChangeEmail' | translate }}</span>\\n            </button>\\n          </div>\\n        </div>\\n\\n        <div [hidden]=\\\"emailAddress.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n          {{ 'PROFILE.ErrorEmail' | translate }}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\" for=\\\"countryCode\\\">\\n            <span>{{ 'Mobile Number' | translate }}</span>\\n        </label>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col col--xs-10\\\">            \\n                <div class=\\\"c-form__input-group\\\">\\n                <div class=\\\"c-form__input-group-add\\\">\\n                    <div class=\\\"c-form__select__wrapper\\\">\\n                    <select class=\\\"c-form__input c-form__select\\\" id=\\\"countryCode\\\" #countryCode=\\\"ngModel\\\" name=\\\"countryCode\\\" [(ngModel)]=\\\"profile.CountryCode\\\">\\n                            <option disabled value=\\\"0\\\">{{ 'PROFILE.ChooseYourMobileCountryCode' | translate }}\\n                            </option>\\n                            <option *ngFor=\\\"let country of countries\\\" [ngValue]=\\\"country.CountryCallCode\\\">\\n                                {{ country.CountryCallCode }}\\n                            </option>\\n                        </select>\\n                    </div>\\n                </div>\\n                <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"mobile-number\\\" required [(ngModel)]=\\\"profile.MobileNumber\\\" name=\\\"mobileNumber\\\"\\n                    placeholder=\\\"{{ 'PROFILE.MobileNumber' | translate }}\\\" #mobileNumber=\\\"ngModel\\\" minlength=\\\"10\\\" maxlength=\\\"10\\\" [value]=\\\"profile.MobileNumber\\\"\\n                    onkeyup=\\\"this.value=this.value.replace(/[^\\\\d]/,'')\\\">\\n\\n                </div>\\n            </div>\\n            <div class=\\\"col col--xs-2\\\">\\n                <button (click)=\\\"openModalVerifyMobile()\\\" class=\\\"o-button o-button--action o-button--tiny o-button--full\\\">\\n                    <span *ngIf=\\\"!profile.IsMobileVerified\\\">Verify Mobile </span> \\n                    <span *ngIf=\\\"profile.IsMobileVerified\\\">{{ 'PROFILE.ChangeMobile' | translate }}</span>\\n                </button>\\n            </div>\\n        </div>\\n        <div [hidden]=\\\"mobileNumber.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n          {{ 'PROFILE.ErrorMobile' | translate }}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\" for=\\\"securityQuestion\\\">{{ 'PROFILE.SecurityQuestion' | translate }}</label>\\n        <div class=\\\"c-form__select__wrapper\\\">\\n          <select class=\\\"c-form__input c-form__select\\\" id=\\\"securityQuestion\\\" #securityQuestion=\\\"ngModel\\\" name=\\\"securityQuestion\\\" [(ngModel)]=\\\"profile.SecurityQuestionId1\\\">\\n              <option disabled value=\\\"0\\\">{{ 'PROFILE.ChooseYourSecurityQuestion' | translate }}</option>\\n              <option *ngFor=\\\"let securityQuestion of securityQuestionInfo\\\"\\n                      [ngValue]=\\\"securityQuestion.Id\\\">\\n                  {{ securityQuestion.SecurityQuestionDesc }}\\n              </option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\">{{ 'PROFILE.SecurityQuestionAnswer' | translate }}</label>\\n        <input type=\\\"password\\\" class=\\\"c-form__input\\\" id=\\\"securityQuestionAnswer\\\" required [(ngModel)]=\\\"profile.SecurityQuestionAnswer1\\\"\\n          name=\\\"securityQuestionAnswer\\\" placeholder=\\\"{{ 'PROFILE.SecurityQuestionAnswer' | translate }}\\\" #securityQuestionAnswer=\\\"ngModel\\\">\\n        <div [hidden]=\\\"securityQuestionAnswer.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n          {{ 'PROFILE.ErrorSecurityQuestionAnswer' | translate }}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\" for=\\\"country\\\">{{ 'PROFILE.Country' | translate }}</label>\\n        <div class=\\\"c-form__select__wrapper\\\">\\n          <select class=\\\"c-form__input c-form__select\\\" id=\\\"country\\\" #country=\\\"ngModel\\\" name=\\\"country\\\" [(ngModel)]=\\\"profile.Country\\\">\\n              <option disabled value=\\\"0\\\">{{ 'PROFILE.ChooseYourCountry' | translate }}</option>\\n              <option *ngFor=\\\"let country of countries\\\"\\n                      [ngValue]=\\\"country.CountryCode\\\">\\n                  {{ country.CountryName }}\\n              </option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\" for=\\\"stateProvince\\\">{{ 'PROFILE.StateProvince' | translate }}</label>\\n        <div class=\\\"c-form__select__wrapper\\\">\\n          <select class=\\\"c-form__input c-form__select\\\" name=\\\"stateProvince\\\" id=\\\"stateProvince\\\" #stateProvince=\\\"ngModel\\\" [(ngModel)]=\\\"profile.StateProvinceId\\\">\\n              <option disabled value=\\\"0\\\">{{ 'PROFILE.ChooseYourStateProvince' | translate }}</option>\\n              <option *ngFor=\\\"let stateProvince of stateProvinces\\\" [ngValue]=\\\"stateProvince.Id\\\">\\n                  {{ stateProvince.StateProvinceName }}\\n              </option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\" for=\\\"city\\\">{{ 'PROFILE.City' | translate }}</label>\\n        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"city\\\" required [(ngModel)]=\\\"profile.City\\\" name=\\\"city\\\" placeholder=\\\"{{ 'PROFILE.City' | translate }}\\\"\\n          #city=\\\"ngModel\\\">\\n        <div [hidden]=\\\"city.valid\\\" *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n          {{ 'PROFILE.ErrorCity' | translate }}\\n        </div>\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\">{{ 'PROFILE.WebChatUserName' | translate }}</label>\\n        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"webChatUserName\\\" [(ngModel)]=\\\"profile.WebChatUserName\\\" name=\\\"webChatUserName\\\"\\n          placeholder=\\\"{{ 'PROFILE.WechatId' | translate }}\\\" #webChatUserName=\\\"ngModel\\\">\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <label class=\\\"c-form__label invisible\\\">{{ 'PROFILE.QQUserName' | translate }}</label>\\n        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"qqUserName\\\" [(ngModel)]=\\\"profile.QQUserName\\\" name=\\\"qqUserName\\\" placeholder=\\\"{{ 'PROFILE.QQId' | translate }}\\\"\\n          #qqUserName=\\\"ngModel\\\">\\n      </div>\\n\\n      <div class=\\\"c-form__group\\\">\\n        <button type=\\\"submit\\\" (click)=\\\"updateProfile(profile)\\\" class=\\\"c-form__submit o-button o-button--action\\\">\\n            <span *ngIf=\\\"!submitting\\\">{{ 'PROFILE.Submit' | translate }}</span>\\n            <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n        </button>\\n      </div>\\n\\n    </form>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/profile/profile.component.html\n// module id = 906\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!promotionDetails\\\">\\n  <div class=\\\"spinner\\\"></div>\\n  <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div id=\\\"promotionsDetailPage\\\" class=\\\"c-panel promo-detail\\\" *ngIf=\\\"promotionDetails\\\">\\n\\n    <div class=\\\"c-panel__header\\\">\\n        <div class=\\\"c-panel__title\\\">\\n          <span>{{ 'Promotions' }}</span>\\n        </div>\\n        <div class=\\\"c-panel__utils\\\">\\n          <div class=\\\"return-link\\\">\\n            <i class=\\\"icon  icon-left-open\\\"></i>\\n            <a href=\\\"javascript:void();\\\" (click)=\\\"goBack()\\\">{{ 'Back' }}</a>\\n          </div>\\n        </div>\\n    </div>\\n    <div class=\\\"c-panel__body\\\" autoheight>\\n      <div id=\\\"scrollable\\\" class=\\\"c-panel__body__wrapper\\\" autoheight>\\n\\n        <div *ngFor=\\\"let detail of promotionDetails\\\">\\n            <div class=\\\"promo__title\\\">\\n            <h3>{{ detail.title }}</h3>\\n                <span>{{ detail.subtitle }}</span>\\n            </div>\\n            <div class=\\\"promo__body\\\" [innerHTML]=\\\"detail.body\\\"></div>\\n        </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/promotion-detail/promotion-detail.component.html\n// module id = 907\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!promotions\\\">\\n    <div class=\\\"spinner\\\"></div>\\n    <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div class=\\\"g-grid g-gap g-rowrepeat-3s\\\">\\n\\n    <div class=\\\"g-row g-row-one-third\\\">\\n        <div class=\\\"grid\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col col--xs-6\\\">\\n                    <div class=\\\"c-panel c-panel--carousel\\\">\\n                        <app-banner></app-banner>\\n                    </div>\\n                </div>\\n                <div class=\\\"col col--xs-6\\\">\\n                    <div class=\\\"c-block c-block--banner\\\" style=\\\"background-image: url('assets/images/main-deposit-banner.jpg')\\\">\\n                        <div class=\\\"c-block__content\\\">\\n                            <h1>{{ 'PROMOTIONS.Header1' | translate }}</h1>\\n                            <a [routerLink]=\\\"['/online-deposit']\\\" class=\\\"o-button o-button--action o-button--med\\\">{{ 'PROMOTIONS.DepositNow' | translate }}</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"g-row g-row-two-third\\\">\\n        <div class=\\\"c-panel\\\" *ngIf=\\\"promotions\\\">\\n            <div class=\\\"c-panel__header\\\">\\n                <div class=\\\"c-panel__title\\\"><span>{{ 'PROMOTIONS.Promotions' | translate }}</span></div>\\n                <div class=\\\"c-panel__utils\\\">\\n                    <div class=\\\"o-search\\\">\\n                        <div class=\\\"o-search__wrapper\\\">\\n                            <i class=\\\"icon icon-search float-right\\\"></i>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"filter.title\\\" placeholder=\\\"{{ 'PROMOTIONS.Search' | translate }}\\\">\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"c-panel__body\\\" autoheight>\\n                <div id=\\\"scrollable\\\" class=\\\"c-panel__body__wrapper\\\" autoheight>\\n                    <ul class=\\\"c-panel__list c-list row\\\">\\n                        <li *ngFor=\\\"let promotion of promotions  | gameFilter: filter\\\" class=\\\"col col--xs-4\\\">\\n\\n                            <div class=\\\"c-block c-block--promotion\\\">\\n                                <div class=\\\"c-block__body\\\">\\n                                    <div class=\\\"c-block__title\\\">\\n                                        {{promotion.title}}\\n                                    </div>\\n                                    <div class=\\\"c-block__text\\\">\\n                                        {{promotion.subtitle}}\\n                                    </div>\\n                                    <a routerLink=\\\"/details/{{promotion.category}}/{{promotion.id}}\\\"\\n                                       class=\\\"c-block__link\\\">{{ 'PROMOTIONS.MoreInformation' | translate }}</a>\\n                                </div>\\n                                <div class=\\\"c-block__image\\\">\\n                                    <img src=\\\"{{ promotion.thumb_image.src }}\\\" alt=\\\"{{ promotion.title }}\\\"/>\\n                                </div>\\n                            </div>\\n\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/promotion/promotion.component.html\n// module id = 908\n// module chunks = 0","module.exports = \"<p>\\n  quick-deposit-bank-account works!\\n</p>\\n<section *ngIf=\\\"errorMessage\\\">\\n        <pre>\\n             {{ errorMessage }}\\n        </pre>\\n</section>\\n<div class=\\\"container\\\">\\n  <h1>Quick Deposit Bank Account Form ({{mode}}) </h1>\\n  <form name=\\\"QuickDepositBankAccount\\\" autocomplete=\\\"off\\\" novalidate #QuickDepositBankAccountForm=\\\"ngForm\\\">\\n\\n    <section *ngIf=\\\"quickDepositMethods && quickDepositPreferredBanks\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Quick Deposit Method\\\">Quick Deposit Method</label>\\n        <select name=\\\"quickDepositMethod\\\" [(ngModel)]=\\\"quickDepositMethods.Id\\\">\\n          <option value=\\\"\\\" disabled>Choose your Quick Deposit Method</option>\\n          <option *ngFor=\\\"let quickDepositMethod of quickDepositMethods\\\" [ngValue]=\\\"quickDepositMethod.Id\\\">\\n            {{ quickDepositMethod.PaymentMethodName }}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Quick Deposit Preferred Banks\\\">Quick Deposit Preferred Banks</label>\\n        <select name=\\\"quickDepositPreferredBanks\\\" [(ngModel)]=\\\"quickDepositPreferredBanks.Id\\\">\\n          <option value=\\\"\\\" disabled>Choose your Bank</option>\\n          <option *ngFor=\\\"let quickDepositPreferredBank of quickDepositPreferredBanks\\\"\\n                  [ngValue]=\\\"quickDepositPreferredBank.Id\\\">\\n            {{ quickDepositPreferredBank.BankName }}\\n          </option>\\n        </select>\\n      </div>\\n\\n    </section>\\n\\n    <section *ngIf=\\\"bankAccounts\\\">\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Bank Name\\\">Bank Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankName\\\"\\n             name=\\\"bankName\\\" disabled\\n             placeholder=\\\"Bank Name\\\"\\n             [(ngModel)]=\\\"bankAccounts.BankAccountName\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Account Name\\\">Account Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accountName\\\"\\n             name=\\\"accountName\\\" disabled\\n             placeholder=\\\"Account Name\\\"\\n             [(ngModel)]=\\\"bankAccounts.AccountName\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Account Number\\\">Account Number</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accountNumber\\\"\\n             name=\\\"accountNumber\\\" disabled\\n             placeholder=\\\"Account Number\\\"\\n             [(ngModel)]=\\\"bankAccounts.AccountNo\\\">\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label for=\\\"Bonus Code\\\">Bonus Code</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bonusCode\\\"\\n             [(ngModel)]=\\\"bankAccounts.BonusCode\\\" name=\\\"bonusCode\\\"\\n             placeholder=\\\"Bonus Code\\\" #bonusCode=\\\"ngModel\\\">\\n    </div>\\n\\n    </section>\\n    <button type=\\\"submit\\\" (click)=\\\"getBankAccount(quickDepositMethods.Id,quickDepositPreferredBanks.Id)\\\" class=\\\"btn btn-success\\\"\\n            [disabled]=\\\"!QuickDepositBankAccountForm.form.valid\\\">\\n      Submit\\n    </button>\\n\\n  </form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit-bank-account/quick-deposit-bank-account.component.html\n// module id = 909\n// module chunks = 0","import {Injectable}                               from '@angular/core';\nimport {Http, Response}                           from '@angular/http';\n\nimport 'rxjs/add/observable/throw';\nimport 'rxjs/add/operator/toPromise';\nimport {Observable}                               from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\nimport {Profile}                                  from './profile';\n\nimport {AppSettings}                              from '../app.config';\nimport  {requestOptionsProvider}                  from  '../default-request-option.service';\n\n@Injectable()\nexport class ProfileService {\n\n    private urlGetProfile = AppSettings.API_ENDPOINT + 'PlayerAccount/MyProfile'; // This is the API Endpoint for getting the list of Profile\n    private urlUpdateProfile = AppSettings.API_ENDPOINT + 'PlayerAccount/UpdateProfile'; // This is the API Endpoint for updating Profile\n\n    constructor(private http: Http) {\n    }\n\n    /**\n     * @returns {Observable<Profile[]>}\n     * GET user profile\n     */\n    getProfile(): Observable<Profile[]> {\n        return this.http\n            .get(this.urlGetProfile, requestOptionsProvider)\n            .map(this.extractData)\n            .catch(this.handleError);\n    }\n\n    /**\n     * @param profile\n     * @returns {Observable<Profile>}\n     * POST update profile\n     */\n    profileUpdate(profile: Profile): Observable<Profile> {\n\n        return this.http\n            .post(this.urlUpdateProfile, profile, requestOptionsProvider)\n            .map(this.extractDataUpdate)\n            .catch(this.handleError)\n    }\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractDataUpdate(res: Response) {\n        let body = res.json();\n        let bodyData = body.Status;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        }\n\n        return body || {};\n    }\n\n\n\n    /**\n     * @param res\n     * @returns {string|{}}\n     * Extract Body Response\n     */\n    private extractData(res: Response) {\n        let body = res.json();\n        let bodyData = body.Data;\n        let rejectMsg: {};\n\n        if (bodyData == null) {\n            rejectMsg = {\n                bodyStatus: body.Status,\n                Error: body.Messages.Errors,\n            }\n        } else {\n            rejectMsg = bodyData; // API Response if the Status is SUCCESSFUL\n        }\n\n        return rejectMsg || {};\n    }\n\n    /**\n     * @param error\n     * @returns {ErrorObservable}\n     * Handling error for body Response\n     */\n    private handleError(error: Response | any) {\n\n        if(error.status == 403) {\n            console.log('test');\n            localStorage.removeItem('TokenId');\n            location.replace('/login');\n        }\n\n        let errMsg: string;\n        if (error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        console.error(errMsg);\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/profile/profile.service.ts","module.exports = \"<p>\\n  quick-deposit-generate-uda-id works!\\n</p>\\n<section *ngIf=\\\"errorMessage\\\">\\n        <pre>\\n             {{ errorMessage }}\\n        </pre>\\n</section>\\n<div class=\\\"container\\\">\\n  <h1>Quick Deposit Generate UDA Id Form ({{mode}}) </h1>\\n  <form name=\\\"QuickDepositGenerateUdaId\\\" autocomplete=\\\"off\\\" novalidate #QuickDepositGenerateUdaIdForm=\\\"ngForm\\\">\\n\\n    <section *ngIf=\\\"quickDepositMethods && quickDepositPreferredBanks\\\">\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Quick Deposit Method\\\">Quick Deposit Method</label>\\n        <select name=\\\"quickDepositMethod\\\" [(ngModel)]=\\\"quickDepositMethods.Id\\\">\\n          <option value=\\\"\\\" disabled>Choose your Quick Deposit Method</option>\\n          <option *ngFor=\\\"let quickDepositMethod of quickDepositMethods\\\" [ngValue]=\\\"quickDepositMethod.Id\\\">\\n            {{ quickDepositMethod.PaymentMethodName }}\\n          </option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Quick Deposit Preferred Banks\\\">Quick Deposit Preferred Banks</label>\\n        <select name=\\\"quickDepositPreferredBanks\\\" [(ngModel)]=\\\"quickDepositPreferredBanks.Id\\\" (change)=\\\"getBankAccount(quickDepositMethods.Id,quickDepositPreferredBanks.Id)\\\" >\\n          <option value=\\\"\\\" disabled>Choose your Bank</option>\\n          <option *ngFor=\\\"let quickDepositPreferredBank of quickDepositPreferredBanks\\\"\\n                  [ngValue]=\\\"quickDepositPreferredBank.Id\\\">\\n            {{ quickDepositPreferredBank.BankName }}\\n          </option>\\n        </select>\\n      </div>\\n\\n    </section>\\n\\n    <section *ngIf=\\\"bankAccounts\\\">\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Player's Deposit Amount\\\">Player's Deposit Amount</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"playersDepositAmount\\\"\\n               required\\n               [(ngModel)]=\\\"udaId.DepositAmount\\\"\\n               name=\\\"playersDepositAmount\\\"\\n               placeholder=\\\"* Player's Deposit Amount\\\" #playersDepositAmount=\\\"ngModel\\\"\\n               #depositAmount\\n               (keyup.enter)=\\\"getUdaId(udaId)\\\"\\n               (blur)=\\\"getUdaId(udaId)\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Bank Name\\\">Bank Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bankName\\\"\\n               name=\\\"bankName\\\" disabled\\n               placeholder=\\\"Bank Name\\\"\\n               [(ngModel)]=\\\"bankAccounts.BankAccountName\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Account Name\\\">Account Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accountName\\\"\\n               name=\\\"accountName\\\" disabled\\n               placeholder=\\\"Account Name\\\"\\n               [(ngModel)]=\\\"bankAccounts.AccountName\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Account Number\\\">Account Number</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"accountNumber\\\"\\n               name=\\\"accountNumber\\\" disabled\\n               placeholder=\\\"Account Number\\\"\\n               [(ngModel)]=\\\"bankAccounts.AccountNo\\\">\\n      </div>\\n\\n      <div class=\\\"form-group\\\">\\n        <label for=\\\"Bonus Code\\\">Bonus Code</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"bonusCode\\\"\\n               [(ngModel)]=\\\"bankAccounts.BonusCode\\\" name=\\\"bonusCode\\\"\\n               placeholder=\\\"Bonus Code\\\" #bonusCode=\\\"ngModel\\\">\\n      </div>\\n\\n    </section>\\n\\n      <section *ngIf=\\\"udaIds\\\">\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Unique Deposit Amount\\\">Unique Deposit Amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"uniqueDepositAmount\\\"\\n                 name=\\\"uniqueDepositAmount\\\" disabled\\n                 placeholder=\\\"Unique Deposit Amount\\\"\\n                 [(ngModel)]=\\\"udaIds.GeneratedUDA\\\">\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"Please deposit this amount\\\">Please deposit this amount</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"pleaseDepositThisAmount\\\"\\n                 name=\\\"pleaseDepositThisAmount\\\" disabled\\n                 placeholder=\\\"Please deposit this amount\\\"\\n                 [(ngModel)]=\\\"udaIds.GeneratedUDA\\\">\\n        </div>\\n\\n      </section>\\n\\n\\n    <!--<button type=\\\"submit\\\" (click)=\\\"getBankAccount(quickDepositMethods.Id,quickDepositPreferredBanks.Id)\\\" class=\\\"btn btn-success\\\"-->\\n            <!--[disabled]=\\\"!QuickDepositGenerateUdaId.form.valid\\\">-->\\n      <!--Submit-->\\n    <!--</button>-->\\n\\n  </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit-generate-uda-id/quick-deposit-generate-uda-id.component.html\n// module id = 910\n// module chunks = 0","module.exports = \"<section *ngIf=\\\"errorMessage\\\">\\n        <pre>\\n             {{ errorMessage }}\\n        </pre>\\n</section>\\n\\n<div class=\\\"container\\\">\\n    <h1>Quick Deposit Method Form ({{mode}}) </h1>\\n    <form name=\\\"QuickDepositMethod\\\" autocomplete=\\\"off\\\" novalidate #QuickDepositMethodForm=\\\"ngForm\\\">\\n        <section *ngIf=\\\"quickDepositMethods\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Quick Deposit Method\\\">Quick Deposit Method</label>\\n                <select name=\\\"quickDepositMethod\\\">\\n                    <option value=\\\"\\\" disabled>Choose your Quick Deposit Method</option>\\n                    <option *ngFor=\\\"let quickDepositMethod of quickDepositMethods\\\" [ngValue]=\\\"quickDepositMethod.Id\\\">\\n                        {{ quickDepositMethod.PaymentMethodName }}\\n                    </option>\\n                </select>\\n            </div>\\n\\n        </section>\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit-method/quick-deposit-method.component.html\n// module id = 911\n// module chunks = 0","module.exports = \"<section *ngIf=\\\"errorMessage\\\">\\n        <pre>\\n             {{ errorMessage }}\\n        </pre>\\n</section>\\n\\n<div class=\\\"container\\\">\\n    <h1>Quick Deposit Preferred Bank Form ({{mode}}) </h1>\\n    <form name=\\\"QuickDepositPreferredBank\\\"  autocomplete=\\\"off\\\" novalidate #QuickDepositPreferredBankForm=\\\"ngForm\\\">\\n        <section *ngIf=\\\"quickDepositPreferredBanks\\\">\\n            <div class=\\\"form-group\\\">\\n                <label for=\\\"Quick Deposit Preferred Banks\\\">Quick Deposit Preferred Banks</label>\\n                <select name=\\\"quickDepositMethod\\\">\\n                    <option value=\\\"\\\" disabled>Choose your Quick Deposit Method</option>\\n                    <option *ngFor=\\\"let quickDepositPreferredBank of quickDepositPreferredBanks\\\"\\n                            [ngValue]=\\\"quickDepositPreferredBank.Id\\\">\\n                        {{ quickDepositPreferredBank.BankName }}\\n                    </option>\\n                </select>\\n            </div>\\n        </section>\\n    </form>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit-preferred-bank/quick-deposit-preferred-bank.component.html\n// module id = 912\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!quickDepositMethods\\\">\\n    <div class=\\\"spinner\\\"></div>\\n    <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div *ngIf=\\\"success\\\">\\n    <div *ngIf=\\\"valid\\\" class=\\\"c-alert hidden\\\" style=\\\"display: block\\\">\\n        <div class=\\\"c-alert__wrapper align-center\\\">\\n            <h4 class=\\\"c-alert__title\\\">\\n                <i class=\\\"icon icon-info-circled\\\"></i> {{ 'QUICKDEPOSIT.Success' | translate }}\\n            </h4>\\n            <p class=\\\"c-alert__desc\\\">{{ 'QUICKDEPOSIT.Successfully' | translate }}</p>\\n        </div>\\n    </div>\\n</div>\\n\\n<div id=\\\"scrollable\\\" class=\\\"grid c-article\\\" *ngIf=\\\"quickDepositMethods && quickDepositPreferredBanks\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col--xs-12\\\">\\n\\n            <div class=\\\"c-article__header\\\">\\n                <h2 class=\\\"c-article__title\\\">{{ 'QUICKDEPOSIT.QuickDeposit' | translate }}</h2>\\n            </div>\\n\\n            <div *ngIf=\\\"success && !valid \\\" class=\\\"c-alert c-alert--inline\\\">\\n                <div *ngFor=\\\"let error of dataError\\\">\\n                    <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"c-alert c-alert--inline\\\">\\n                <i class=\\\"icon icon-info-circled\\\"></i>{{ 'QUICKDEPOSIT.MinimumAndMaximumDeposit' | translate }}\\n            </div>\\n\\n            <form name=\\\"QuickDeposit\\\" autocomplete=\\\"off\\\" novalidate #QuickDepositForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n                <fieldset>\\n\\n                    <div role=\\\"separator\\\" class=\\\"c-form__group c-form__divider\\\">\\n                        <span>{{ 'QUICKDEPOSIT.Step1' | translate }}</span>\\n                    </div>\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'QUICKDEPOSIT.QuickDepositMethod' | translate }}</label>\\n                        <div class=\\\"c-form__select__wrapper\\\">\\n                            <select class=\\\"c-form__input c-form__select\\\" name=\\\"quickDepositMethod\\\"\\n                                    [(ngModel)]=\\\"quickDepositMethods.Id\\\">\\n                                <option disabled value=\\\"0\\\">{{ 'QUICKDEPOSIT.ChooseYourQuickDepositMethod' | translate }}</option>\\n                                <option *ngFor=\\\"let quickDepositMethod of quickDepositMethods\\\"\\n                                        [ngValue]=\\\"quickDepositMethod.Id\\\">\\n                                    {{ quickDepositMethod.PaymentMethodName }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'QUICKDEPOSIT.QuickDepositPreferredBanks' | translate }}</label>\\n                        <div class=\\\"c-form__select__wrapper\\\">\\n                            <select class=\\\"c-form__input c-form__select\\\" name=\\\"quickDepositPreferredBanks\\\"\\n                                    [(ngModel)]=\\\"quickDepositPreferredBanks.Id\\\"\\n                                    (change)=\\\"getBankAccount(quickDepositMethods.Id,quickDepositPreferredBanks.Id)\\\">\\n                                <option  disabled value=\\\"0\\\">{{ 'QUICKDEPOSIT.ChooseYourBank' | translate }}</option>\\n                                <option *ngFor=\\\"let quickDepositPreferredBank of quickDepositPreferredBanks\\\"\\n                                        [ngValue]=\\\"quickDepositPreferredBank.Id\\\">\\n                                    {{ quickDepositPreferredBank.BankName }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                    </div>\\n                </fieldset>\\n\\n                <fieldset *ngIf=\\\"bankAccounts\\\">\\n\\n                    <div role=\\\"separator\\\" class=\\\"c-form__group c-form__divider\\\">\\n                        <span>{{ 'QUICKDEPOSIT.Step2' | translate }}</span>\\n                    </div>\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'QUICKDEPOSIT.PlayerDepositAmount' | translate }}</label>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"playersDepositAmount\\\"\\n                               required\\n                               [(ngModel)]=\\\"udaId.DepositAmount\\\"\\n                               name=\\\"playersDepositAmount\\\"\\n                               placeholder=\\\"* {{ 'QUICKDEPOSIT.PlayerDepositAmount' | translate }}\\\" #playersDepositAmount=\\\"ngModel\\\"\\n                               #fieldsedepositAmount\\n                               (keyup)=\\\"getUdaId(udaId)\\\"\\n                               (blur)=\\\"getUdaId(udaId)\\\">\\n                    </div>\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'QUICKDEPOSIT.BankName' | translate }}</label>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"bankName\\\"\\n                               name=\\\"bankName\\\" disabled\\n                               placeholder=\\\"{{ 'QUICKDEPOSIT.BankName' | translate }}\\\"\\n                               [(ngModel)]=\\\"bankAccounts.BankAccountName\\\">\\n                    </div>\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'QUICKDEPOSIT.AccountName' | translate }}</label>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"accountName\\\"\\n                               name=\\\"accountName\\\" disabled\\n                               placeholder=\\\"{{ 'QUICKDEPOSIT.AccountName' | translate }}\\\"\\n                               [(ngModel)]=\\\"bankAccounts.AccountName\\\">\\n                    </div>\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'QUICKDEPOSIT.AccountNumber' | translate }}</label>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"accountNumber\\\"\\n                               name=\\\"accountNumber\\\" disabled\\n                               placeholder=\\\"{{ 'QUICKDEPOSIT.AccountNumber' | translate }}\\\"\\n                               [(ngModel)]=\\\"bankAccounts.AccountNo\\\">\\n                    </div>\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'QUICKDEPOSIT.BonusCode' | translate }}</label>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"bonusCode\\\"\\n                               [(ngModel)]=\\\"quickDeposits.BonusCode\\\" name=\\\"bonusCode\\\"\\n                               placeholder=\\\"{{ 'QUICKDEPOSIT.BonusCode' | translate }}\\\" #bonusCode=\\\"ngModel\\\">\\n                    </div>\\n\\n                </fieldset>\\n\\n                <fieldset *ngIf=\\\"udaIds\\\">\\n\\n                    <div role=\\\"separator\\\" class=\\\"c-form__group c-form__divider\\\">\\n                        <span>{{ 'QUICKDEPOSIT.Step3' | translate }}</span>\\n                    </div>\\n\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'QUICKDEPOSIT.PleaseDepositThisAmount' | translate }}</label>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"pleaseDepositThisAmount\\\"\\n                               name=\\\"pleaseDepositThisAmount\\\" disabled\\n                               placeholder=\\\"{{ 'QUICKDEPOSIT.PleaseDepositThisAmount' | translate }}\\\"\\n                               [(ngModel)]=\\\"udaIds.GeneratedUDA\\\">\\n\\n                        <p>Please use this amount when making a deposit. This will help us to easily identify your deposit.</p>\\n                    </div>\\n                    <div class=\\\"c-form__group\\\">\\n                        <button type=\\\"submit\\\" (click)=\\\"quickDeposit(quickDeposits,udaIds.Id)\\\"\\n                                class=\\\"o-button o-button--action\\\"\\n                                [disabled]=\\\"!QuickDepositForm.form.valid\\\">                            \\n                            <span *ngIf=\\\"!submitting\\\">{{ 'QUICKDEPOSIT.Deposit' | translate }}</span>\\n                            <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                        </button>\\n                    </div>\\n                </fieldset>\\n            </form>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/quick-deposit/quick-deposit.component.html\n// module id = 913\n// module chunks = 0","module.exports = \"\\n<div id=\\\"{{modalId}}\\\" class=\\\"c-modal\\\">\\n    <div class=\\\"c-modal__wrapper\\\">\\n        <button type=\\\"button\\\" class=\\\"c-modal__close\\\" aria-label=\\\"Close\\\" (click)=\\\"onCancel()\\\">\\n            <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n        <form autocomplete=\\\"off\\\" novalidate name=\\\"registration\\\" #RegistrationForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n            <div class=\\\"c-modal__body\\\">\\n                <div class=\\\"c-modal__title align-center\\\">\\n                    <h3>{{ 'SIGNUP.Header' | translate }}</h3>\\n                    <p>{{ 'SIGNUP.Info' | translate }}</p>\\n                </div>\\n\\n                <div *ngIf=\\\"success\\\" class=\\\"c-alert c-alert--inline hidden\\\" style=\\\"display: block\\\">\\n                    <div *ngFor=\\\"let error of dataError\\\">\\n                        <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"regUsername\\\">{{ 'SIGNUP.Username' | translate }}</label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"regUsername\\\"\\n                        required\\n                        [(ngModel)]=\\\"registration.UserName\\\" name=\\\"regUsername\\\"\\n                        placeholder=\\\"{{ 'SIGNUP.Username' | translate }}\\\" #regUsername=\\\"ngModel\\\"\\n                        minlength=\\\"5\\\" maxlength=\\\"30\\\">\\n\\n                    <div [hidden]=\\\"regUsername.valid\\\" *ngIf=\\\"submitted\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                        {{ 'SIGNUP.ErrorUsername' | translate }}\\n                    </div>\\n\\n                </div>\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"regPassword\\\">{{ 'SIGNUP.Password' | translate }}</label>\\n                    <input type=\\\"password\\\" class=\\\"c-form__input\\\" id=\\\"regPassword\\\"\\n                           required\\n                           [(ngModel)]=\\\"registration.Password\\\"\\n                           [(ngModel)]=\\\"registration.ConfirmPassword\\\" name=\\\"regPassword\\\"\\n                           #regPassword=\\\"ngModel\\\"\\n                           name=\\\"regPassword\\\" placeholder=\\\"{{ 'SIGNUP.Password' | translate }}\\\"\\n                           minlength=\\\"6\\\" maxlength=\\\"30\\\">\\n\\n                    <div [hidden]=\\\"regPassword.valid\\\" *ngIf=\\\"submitted\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                        {{ 'SIGNUP.ErrorPassword' | translate }}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"regEmail\\\">\\n                        <span>{{ 'SIGNUP.Email' | translate }}</span>\\n                    </label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\"\\n                           [(ngModel)]=\\\"registration.EmailAddress\\\" name=\\\"regEmail\\\" id=\\\"regEmail\\\"\\n                           placeholder=\\\"{{ 'SIGNUP.Email' | translate }}\\\"\\n                           #regEmail=\\\"ngModel\\\" email/>\\n\\n                    <div [hidden]=\\\"regEmail.valid\\\" *ngIf=\\\"regEmail.errors?.email || submitted\\\"\\n                         class=\\\"alert alert-danger\\\">\\n                        {{ 'SIGNUP.ErrorEmail' | translate }}\\n                    </div>\\n                </div>\\n\\n                <div role=\\\"separator\\\" class=\\\"c-form__group c-form__divider\\\">\\n                    <span>{{ 'SIGNUP.Or' | translate }}</span>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"mobile-country-code-number\\\">\\n                        <span>{{ 'SIGNUP.MobileNumber' | translate }}</span>\\n                    </label>\\n                    <div class=\\\"c-form__input-group\\\">\\n                        <div class=\\\"c-form__input-group-add\\\">\\n                            <div class=\\\"c-form__select__wrapper\\\">\\n                                <select class=\\\"c-form__input c-form__select\\\" id=\\\"mobile-country-code-number\\\"\\n                                        [(ngModel)]=\\\"registration.MobileCountryCodeNumber\\\" name=\\\"mobileCode\\\" #mobileCode=\\\"ngModel\\\">\\n                                    <option disabled value=\\\"0\\\">{{ 'SIGNUP.CountryCode' | translate }}</option>\\n                                    <option *ngFor=\\\"let country of countries\\\"\\n                                            [ngValue]=\\\"country.CountryCallCode\\\" selected>\\n                                        {{ country.CountryCallCode }}\\n                                    </option>\\n                                </select>\\n                            </div>\\n                        </div>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"regMobileNumber\\\"\\n                            [(ngModel)]=\\\"registration.MobileNumber\\\" name=\\\"regMobileNumber\\\"\\n                            placeholder=\\\"{{ 'SIGNUP.MobileNumber' | translate }}\\\" #regMobileNumber=\\\"ngModel\\\"\\n                            minlength=\\\"10\\\" maxlength=\\\"10\\\"\\n                            onkeyup=\\\"this.value=this.value.replace(/[^\\\\d]/,'')\\\">\\n                    </div>\\n                    <div [hidden]=\\\"regMobileNumber.valid\\\"  *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                        {{ 'SIGNUP.ErrorMobile' | translate }}\\n                    </div>\\n                </div>\\n            </div>\\n\\n            <div class=\\\"c-modal__footer\\\">\\n                <button (click)=\\\"onSubmit()\\\" type=\\\"submit\\\" class=\\\"c-form__submit o-button o-button--action\\\" >\\n                    <span *ngIf=\\\"!submitting\\\">{{ 'SIGNUP.Submit' | translate }}</span>\\n                    <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                </button>\\n                <p (click)=\\\"onCancel()\\\" class=\\\"tiny\\\">{{ 'SIGNUP.SignIn' | translate }}</p>\\n            </div>\\n        </form>\\n\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/registration/registration.component.html\n// module id = 914\n// module chunks = 0","module.exports = \"\\n<select name=\\\"securityQuestion\\\" ngModel>\\n    <option value=\\\"\\\" disabled>Choose your Security Question</option>\\n    <option *ngFor=\\\"let securityQuestion of securityQuestions\\\" [ngValue]=\\\"securityQuestion.Id\\\">\\n        {{ securityQuestion.SecurityQuestionDesc }}\\n    </option>\\n</select>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/security-question/security-question.component.html\n// module id = 915\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!sports\\\">\\n    <div class=\\\"spinner\\\"></div>\\n    <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div class=\\\"g-grid g-gap g-rowrepeat-2s\\\" *ngIf=\\\"sports\\\">\\n    <div class=\\\"g-row g-row-first-half\\\">\\n\\n        <div class=\\\"c-panel\\\">\\n            <div class=\\\"c-panel__header\\\">\\n                <div class=\\\"c-panel__title\\\"><span>{{ 'SPORTSBOOK.Sports' | translate }}</span></div>\\n                <!--<div class=\\\"c-panel__utils\\\">\\n                    <div class=\\\"o-search\\\">\\n                        <div class=\\\"o-search__wrapper\\\">\\n                            <i class=\\\"icon icon-search float-right\\\"></i>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"filter.title\\\" placeholder=\\\"Search\\\">\\n                        </div>\\n                    </div>\\n                </div>-->\\n            </div>\\n            <div class=\\\"c-panel__body\\\">\\n                <div class=\\\"c-panel__body__wrapper\\\">\\n                    <ul class=\\\"c-panel__list c-list row\\\">\\n                        <li *ngFor=\\\"let sport of sports\\\" class=\\\"col col--md-3 col--lg-2\\\">\\n\\n                            <div class=\\\"c-block c-block--sports\\\" [ngStyle]=\\\"{'background-image': 'url(' + sport.thumb_image.src + ')'}\\\">\\n                                <div class=\\\"c-block__body\\\">\\n                                    <div class=\\\"c-block__title\\\">\\n                                        {{sport.title}}\\n                                    </div>\\n                                    <a (click)=\\\"loadiframe(sport.langcode, sport.game_platform_code, sport.game_code)\\\"\\n                                      class=\\\"o-button o-button--action  o-button--med\\\">{{ 'SPORTSBOOK.BetNow' | translate }}</a>\\n                                </div>\\n                            </div>\\n\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/sports/sports.component.html\n// module id = 916\n// module chunks = 0","module.exports = \"<select name=\\\"state\\\" ngModel>\\n    <option value=\\\"\\\" disabled>Choose your State Province</option>\\n    <option *ngFor=\\\"let stateProvince of stateProvinces\\\" [ngValue]=\\\"stateProvince.Id\\\">\\n        {{ stateProvince.StateProvinceName }}\\n    </option>\\n</select>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/state-province/state-province.component.html\n// module id = 917\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!wechat\\\">\\n    <div class=\\\"spinner\\\"></div>\\n    <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div *ngIf=\\\"success\\\">\\n    <div *ngIf=\\\"success.Url\\\" class=\\\"c-alert hidden\\\" style=\\\"display: block\\\">\\n        <div class=\\\"c-alert__wrapper align-center\\\">\\n            <h4 class=\\\"c-alert__title\\\">\\n                <i class=\\\"icon icon-info-circled\\\"></i> {{ 'WECHATDEPOSIT.ConfirmDepositAmount' | translate }}\\n            </h4>\\n            <p class=\\\"c-alert__desc uppercase\\\" style=\\\"font-size: 1.2rem\\\">{{ 'WECHATDEPOSIT.DepositAmount' | translate }}: <strong>{{ wechat.Amount }}</strong></p>\\n            <div>\\n                <a href=\\\"{{ success.Url }}\\\" target=\\\"_blank\\\" class=\\\"o-button o-button--success\\\">{{ 'WECHATDEPOSIT.Proceed' | translate }}</a>\\n                <button (click)=\\\"onCancel()\\\" class=\\\"o-button o-button--action\\\">{{ 'WECHATDEPOSIT.Cancel' | translate }}</button>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"!success.Url || error \\\" class=\\\"c-alert hidden\\\" style=\\\"display: block\\\">\\n        <div class=\\\"c-alert__wrapper align-center\\\">\\n            <h4 class=\\\"c-alert__title\\\">\\n                <i class=\\\"icon icon-info-circled\\\"></i>  {{ 'WECHATDEPOSIT.BankIsNotAvailable' | translate }}\\n            </h4>\\n        </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"grid c-article\\\" *ngIf=\\\"wechat\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col--xs-12\\\">\\n\\n            <div class=\\\"c-article__header\\\">\\n              <h2 class=\\\"c-article__title\\\">{{ 'WECHATDEPOSIT.WechatDeposit' | translate }}</h2>\\n            </div>\\n\\n            <div class=\\\"c-alert c-alert--inline\\\">\\n                <i class=\\\"icon icon-info-circled\\\"></i>{{ 'WECHATDEPOSIT.MinimumAndMaximumDeposit' | translate }}\\n            </div>\\n\\n            <form name=\\\"wechat\\\"  autocomplete=\\\"off\\\" novalidate #WechatForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"depositAmount\\\">{{ 'WECHATDEPOSIT.DepositAmount' | translate }}</label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"depositAmount\\\"\\n                        name=\\\"depositAmount\\\"\\n                        required\\n                        [(ngModel)]=\\\"wechat.Amount\\\"\\n                           name=\\\"depositAmount\\\"\\n                        placeholder=\\\"{{ 'WECHATDEPOSIT.DepositAmount' | translate }}\\\" #depositAmount=\\\"ngModel\\\"\\n                           onkeyup=\\\"this.value=this.value.replace(/[^\\\\d]/,'')\\\">\\n\\n                    <div *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                        {{ 'WECHATDEPOSIT.ErrorDepositAmount' | translate }}\\n                    </div>\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <label class=\\\"c-form__label invisible\\\" for=\\\"bonusCode\\\">{{ 'WECHATDEPOSIT.BonusCode' | translate }}</label>\\n                    <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"bonusCode\\\"\\n                        [(ngModel)]=\\\"wechat.BonusCode\\\" name=\\\"bonusCode\\\"\\n                        placeholder=\\\"{{ 'WECHATDEPOSIT.BonusCode' | translate }}\\\" #bonusCode=\\\"ngModel\\\">\\n                </div>\\n\\n                <div class=\\\"c-form__group\\\">\\n                    <button type=\\\"submit\\\" (click)=\\\"weChatPayment(wechat)\\\" class=\\\"o-button o-button--action\\\">       \\n                        <span *ngIf=\\\"!submitting\\\">{{ 'WECHATDEPOSIT.Deposit' | translate }}</span>\\n                        <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                    </button>\\n                </div>\\n\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/wechat/wechat.component.html\n// module id = 918\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!withdrawalTransactions\\\"> \\n  <div class=\\\"spinner\\\"></div>\\n  <div>{{ 'Loading...' }}</div>\\n</div>\\n\\n<div id=\\\"withdrawalTransactionPage\\\" class=\\\"grid c-article\\\" *ngIf=\\\"withdrawalTransactions\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col--xs-12\\\">\\n\\n            <div class=\\\"c-article__header\\\">\\n              <h2 class=\\\"c-article__title\\\">{{ 'WITHDRAWALTRANSACTION.WithdrawalTransaction' | translate }}</h2>\\n              <p class=\\\"c-article__desc\\\">{{ 'WITHDRAWALTRANSACTION.WeWillProcess' | translate }}</p>\\n            </div>\\n\\n            <table class=\\\"c-table\\\">\\n                <thead>\\n                    <tr>\\n                        <th>{{ 'WITHDRAWALTRANSACTION.DateTimeRequested' | translate }}</th>\\n                        <th>{{ 'WITHDRAWALTRANSACTION.TransactionId' | translate }}</th>\\n                        <th>{{ 'WITHDRAWALTRANSACTION.Status' | translate }}</th>\\n                        <th>{{ 'WITHDRAWALTRANSACTION.Amount' | translate }}</th>\\n                    </tr>\\n                </thead>\\n                <tbody id=\\\"list-withdrawal-transaction\\\">\\n                    <tr *ngFor=\\\"let withdrawalTransaction of withdrawalTransactions\\\">\\n                        <td>{{ withdrawalTransaction.WithdrawalDate + '+0800' | date: 'MM/dd/yyyy hh:mm:ss a' }}</td>\\n                        <td>{{ withdrawalTransaction.TransactionNo }}</td>\\n                        <td>{{ withdrawalTransaction.Status }}</td>\\n                        <td>{{ withdrawalTransaction.WithdrawalAmount }}</td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n\\n            <hr/>\\n            <button routerLink=\\\"/withdrawal\\\" class=\\\"o-button o-button--action\\\">{{ 'WITHDRAWALTRANSACTION.CreateWithdrawal' | translate }}</button>\\n    \\n        </div>\\n    </div>\\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/withdrawal-transaction/withdrawal-transaction.component.html\n// module id = 919\n// module chunks = 0","module.exports = \"<div class=\\\"loader align-center\\\" *ngIf=\\\"!profile\\\"> \\n  <div class=\\\"spinner\\\"></div>\\n  <div>{{ 'Loading...' }}</div>\\n</div>\\n<pre>\\n    {{ bankAccount | json }}\\n</pre>\\n<div *ngIf=\\\"!bankAccount\\\">\\n    <h1>Test</h1>\\n</div>\\n<div *ngIf=\\\"success\\\" class=\\\"c-alert hidden\\\" style=\\\"display: block\\\">\\n    <div *ngIf=\\\"valid\\\" class=\\\"c-alert__wrapper align-center\\\">\\n        <h4 class=\\\"c-alert__title\\\">\\n        <i class=\\\"icon icon-info-circled\\\"></i> {{ 'WITHDRAWAL.Success' | translate }}\\n        </h4>\\n        <p class=\\\"c-alert__desc\\\">{{ 'WITHDRAWAL.Message' | translate }}</p>\\n    </div>\\n</div>\\n\\n<div class=\\\"grid c-article\\\" *ngIf=\\\"profile\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col col--xs-12\\\">\\n\\n            <div class=\\\"c-article__header\\\">\\n              <h2 class=\\\"c-article__title\\\">{{ 'WITHDRAWAL.Withdrawal' | translate }}</h2>\\n              <p class=\\\"c-article__desc\\\">{{ 'WITHDRAWAL.WeWillProcess' | translate }}</p>\\n            </div>\\n\\n            <div *ngIf=\\\"success && !valid \\\" class=\\\"c-alert c-alert--inline\\\">\\n                <div *ngFor=\\\"let error of dataError\\\">\\n                    <i class=\\\"icon icon-info-circled\\\"></i> {{ error.Description }}\\n                </div>\\n            </div>\\n\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col col--xs-6\\\">\\n                    {{ 'WITHDRAWAL.WithdrawalBalance' | translate }}: <span style=\\\"color: #f5f5f5\\\">{{ WithdrawalAmt | number }}</span>\\n                </div>\\n                <div class=\\\"col col--xs-6 align-right\\\">\\n                            <i class=\\\"icon icon-help-circled alert-color\\\"></i>\\n                    {{ 'WITHDRAWAL.LockedAmount' | translate }}: <span style=\\\"color: #f5f5f5\\\">{{ lockedAmount | number }}</span>\\n                </div>\\n            </div>\\n\\n            <hr/>\\n\\n            <form name=\\\"withdraw\\\" autocomplete=\\\"off\\\" novalidate #WithdrawableForm=\\\"ngForm\\\" class=\\\"c-form\\\">\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'WITHDRAWAL.BankAccount' | translate }}</label>\\n                        <div class=\\\"c-form__select__wrapper\\\">\\n                            <select class=\\\"c-form__input c-form__select\\\" name=\\\"quickDepositMethod\\\" [(ngModel)]=\\\"withdraw.PlayerBankAcountId\\\">\\n                                <option disabled>{{ 'WITHDRAWAL.SelectYourBankAccount' | translate }}</option>\\n                                <option *ngFor=\\\"let playerBankAccount of profile.PlayerBankAccounts\\\"\\n                                        [ngValue]=\\\"playerBankAccount.Id\\\">\\n                                    {{ playerBankAccount.BankAccountName }}\\n                                </option>\\n                            </select>\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"c-form__group\\\">\\n                        <label class=\\\"c-form__label invisible\\\">{{ 'WITHDRAWAL.WithdrawAmount' | translate }}</label>\\n                        <input type=\\\"text\\\" class=\\\"c-form__input\\\" id=\\\"withdrawAmount\\\"\\n                            required\\n                            [(ngModel)]=\\\"withdraw.WithdrawAmount\\\" name=\\\"withdrawAmount\\\"\\n                            placeholder=\\\"{{ 'WITHDRAWAL.WithdrawAmount' | translate }}\\\" #withdrawAmount=\\\"ngModel\\\">\\n                        <div [hidden]=\\\"withdrawAmount.valid\\\"  *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'WITHDRAWAL.ErrorWithdrawAmount' | translate }}\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"c-form__group\\\">\\n                        <label for=\\\"Password\\\" class=\\\"c-form__label invisible\\\">{{ 'WITHDRAWAL.Password' | translate }}</label>\\n                        <input type=\\\"password\\\" class=\\\"c-form__input\\\" id=\\\"password\\\"\\n                            required\\n                            [(ngModel)]=\\\"withdraw.Password\\\" name=\\\"password\\\"\\n                            placeholder=\\\"{{ 'WITHDRAWAL.Password' | translate }}\\\" #password=\\\"ngModel\\\"\\n                            minlength=\\\"6\\\" maxlength=\\\"30\\\">\\n                        <div [hidden]=\\\"withdrawAmount.valid\\\"  *ngIf=\\\"submitted\\\" class=\\\"alert alert-danger\\\">\\n                            {{ 'WITHDRAWAL.ErrorPassword' | translate }}\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"c-form__group\\\">\\n                        <button class=\\\"o-button\\\" (click)=\\\"goBack()\\\">{{ 'WITHDRAWAL.Cancel' | translate }}</button>\\n                        <button type=\\\"submit\\\" (click)=\\\"makeWithrawal(withdraw)\\\" class=\\\"o-button o-button--action\\\">  \\n                            <span *ngIf=\\\"!submitting\\\">{{ 'WITHDRAWAL.Withdraw' | translate }}</span>\\n                            <span *ngIf=\\\"submitting\\\" class=\\\"spinner-bar\\\"></span>\\n                        </button>\\n                    </div>\\n\\n            </form>\\n\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/withdrawal/withdrawal.component.html\n// module id = 920\n// module chunks = 0"],"sourceRoot":""}